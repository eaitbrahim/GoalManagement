{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_directives/hasRole.directive.ts","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsave-changes-guards.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/behavioral-skill-detail.resolver..ts","webpack:///./src/app/_resolvers/collaborator-detail.resolver..ts","webpack:///./src/app/_resolvers/collaborator-list.resolver.ts","webpack:///./src/app/_resolvers/evaluation-hr-detail.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_resolvers/profile-edit.resolver.ts","webpack:///./src/app/_resolvers/sheet-detail.resolver.ts","webpack:///./src/app/_resolvers/sheets.resolver.ts","webpack:///./src/app/_resolvers/strategies.resolver.ts","webpack:///./src/app/_resolvers/strategy-detail.resolver.ts","webpack:///./src/app/_resolvers/strategy-list.resolver.ts","webpack:///./src/app/_services/admin.service.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/hr.service.ts","webpack:///./src/app/_services/layout.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/admin/admin-filter-actions/admin-filter-actions.component.css","webpack:///./src/app/admin/admin-filter-actions/admin-filter-actions.component.html","webpack:///./src/app/admin/admin-filter-actions/admin-filter-actions.component.ts","webpack:///./src/app/admin/admin-panel/admin-panel.component.css","webpack:///./src/app/admin/admin-panel/admin-panel.component.html","webpack:///./src/app/admin/admin-panel/admin-panel.component.ts","webpack:///./src/app/admin/photo-management/photo-management.component.css","webpack:///./src/app/admin/photo-management/photo-management.component.html","webpack:///./src/app/admin/photo-management/photo-management.component.ts","webpack:///./src/app/admin/roles-modal/roles-modal.component.css","webpack:///./src/app/admin/roles-modal/roles-modal.component.html","webpack:///./src/app/admin/roles-modal/roles-modal.component.ts","webpack:///./src/app/admin/user-roles-management/user-roles-management.component.css","webpack:///./src/app/admin/user-roles-management/user-roles-management.component.html","webpack:///./src/app/admin/user-roles-management/user-roles-management.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/collaborators/collaborator-card/collaborator-card.component.css","webpack:///./src/app/collaborators/collaborator-card/collaborator-card.component.html","webpack:///./src/app/collaborators/collaborator-card/collaborator-card.component.ts","webpack:///./src/app/collaborators/collaborator-detail/collaborator-detail.component.css","webpack:///./src/app/collaborators/collaborator-detail/collaborator-detail.component.html","webpack:///./src/app/collaborators/collaborator-detail/collaborator-detail.component.ts","webpack:///./src/app/collaborators/collaborator-edit/collaborator-edit.component.css","webpack:///./src/app/collaborators/collaborator-edit/collaborator-edit.component.html","webpack:///./src/app/collaborators/collaborator-edit/collaborator-edit.component.ts","webpack:///./src/app/collaborators/collaborator-list/collaborator-list.component.css","webpack:///./src/app/collaborators/collaborator-list/collaborator-list.component.html","webpack:///./src/app/collaborators/collaborator-list/collaborator-list.component.ts","webpack:///./src/app/collaborators/collaborator-messages/collaborator-messages.component.css","webpack:///./src/app/collaborators/collaborator-messages/collaborator-messages.component.html","webpack:///./src/app/collaborators/collaborator-messages/collaborator-messages.component.ts","webpack:///./src/app/collaborators/collaborator-new/collaborator-new.component.css","webpack:///./src/app/collaborators/collaborator-new/collaborator-new.component.html","webpack:///./src/app/collaborators/collaborator-new/collaborator-new.component.ts","webpack:///./src/app/collaborators/collaborator-search/collaborator-search.component.css","webpack:///./src/app/collaborators/collaborator-search/collaborator-search.component.html","webpack:///./src/app/collaborators/collaborator-search/collaborator-search.component.ts","webpack:///./src/app/collaborators/evaluator-assignment/evaluator-assignment.component.css","webpack:///./src/app/collaborators/evaluator-assignment/evaluator-assignment.component.html","webpack:///./src/app/collaborators/evaluator-assignment/evaluator-assignment.component.ts","webpack:///./src/app/collaborators/evaluator/evaluator.component.css","webpack:///./src/app/collaborators/evaluator/evaluator.component.html","webpack:///./src/app/collaborators/evaluator/evaluator.component.ts","webpack:///./src/app/collaborators/forget-password/forget-password.component.css","webpack:///./src/app/collaborators/forget-password/forget-password.component.html","webpack:///./src/app/collaborators/forget-password/forget-password.component.ts","webpack:///./src/app/collaborators/photo-editor/photo-editor.component.css","webpack:///./src/app/collaborators/photo-editor/photo-editor.component.html","webpack:///./src/app/collaborators/photo-editor/photo-editor.component.ts","webpack:///./src/app/collaborators/profile-edit/profile-edit.component.css","webpack:///./src/app/collaborators/profile-edit/profile-edit.component.html","webpack:///./src/app/collaborators/profile-edit/profile-edit.component.ts","webpack:///./src/app/collaborators/reset-password/reset-password.component.css","webpack:///./src/app/collaborators/reset-password/reset-password.component.html","webpack:///./src/app/collaborators/reset-password/reset-password.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-detail/behavioral-skill-detail.component.css","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-detail/behavioral-skill-detail.component.html","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-detail/behavioral-skill-detail.component.ts","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-edit-modal/behavioral-skill-edit-modal.component.css","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-edit-modal/behavioral-skill-edit-modal.component.html","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-edit-modal/behavioral-skill-edit-modal.component.ts","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-list/behavioral-skill-list.component.css","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-list/behavioral-skill-list.component.html","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-list/behavioral-skill-list.component.ts","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-new/behavioral-skill-new.component.css","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-new/behavioral-skill-new.component.html","webpack:///./src/app/hr/behavioral-skills/behavioral-skill-new/behavioral-skill-new.component.ts","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-list/evaluation-file-instance-hr-list.component.css","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-list/evaluation-file-instance-hr-list.component.html","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-list/evaluation-file-instance-hr-list.component.ts","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-new/evaluation-file-instance-hr-new.component.css","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-new/evaluation-file-instance-hr-new.component.html","webpack:///./src/app/hr/evaluations/evaluation-file-instance-hr-new/evaluation-file-instance-hr-new.component.ts","webpack:///./src/app/hr/evaluations/evaluation-hr-detail/evaluation-hr-detail.component.css","webpack:///./src/app/hr/evaluations/evaluation-hr-detail/evaluation-hr-detail.component.html","webpack:///./src/app/hr/evaluations/evaluation-hr-detail/evaluation-hr-detail.component.ts","webpack:///./src/app/hr/evaluations/evaluation-hr-edit-modal/evaluation-hr-edit-modal.component.css","webpack:///./src/app/hr/evaluations/evaluation-hr-edit-modal/evaluation-hr-edit-modal.component.html","webpack:///./src/app/hr/evaluations/evaluation-hr-edit-modal/evaluation-hr-edit-modal.component.ts","webpack:///./src/app/hr/evaluations/evaluation-hr-list/evaluation-hr-list.component.css","webpack:///./src/app/hr/evaluations/evaluation-hr-list/evaluation-hr-list.component.html","webpack:///./src/app/hr/evaluations/evaluation-hr-list/evaluation-hr-list.component.ts","webpack:///./src/app/hr/evaluations/evaluation-hr-new/evaluation-hr-new.component.css","webpack:///./src/app/hr/evaluations/evaluation-hr-new/evaluation-hr-new.component.html","webpack:///./src/app/hr/evaluations/evaluation-hr-new/evaluation-hr-new.component.ts","webpack:///./src/app/hr/hr-filter-create-actions/hr-filter-create-actions.component.css","webpack:///./src/app/hr/hr-filter-create-actions/hr-filter-create-actions.component.html","webpack:///./src/app/hr/hr-filter-create-actions/hr-filter-create-actions.component.ts","webpack:///./src/app/hr/hr-panel/hr-panel.component.css","webpack:///./src/app/hr/hr-panel/hr-panel.component.html","webpack:///./src/app/hr/hr-panel/hr-panel.component.ts","webpack:///./src/app/hr/strategies/axis-modal/axis-modal.component.css","webpack:///./src/app/hr/strategies/axis-modal/axis-modal.component.html","webpack:///./src/app/hr/strategies/axis-modal/axis-modal.component.ts","webpack:///./src/app/hr/strategies/axis-pole-weight-item/axis-pole-weight-item.component.css","webpack:///./src/app/hr/strategies/axis-pole-weight-item/axis-pole-weight-item.component.html","webpack:///./src/app/hr/strategies/axis-pole-weight-item/axis-pole-weight-item.component.ts","webpack:///./src/app/hr/strategies/axis-poles-weights-card/axis-poles-weights-card.component.css","webpack:///./src/app/hr/strategies/axis-poles-weights-card/axis-poles-weights-card.component.html","webpack:///./src/app/hr/strategies/axis-poles-weights-card/axis-poles-weights-card.component.ts","webpack:///./src/app/hr/strategies/axis-poles-weights-list/axis-poles-weights-list.component.css","webpack:///./src/app/hr/strategies/axis-poles-weights-list/axis-poles-weights-list.component.html","webpack:///./src/app/hr/strategies/axis-poles-weights-list/axis-poles-weights-list.component.ts","webpack:///./src/app/hr/strategies/strategy-axis/strategy-axis.component.css","webpack:///./src/app/hr/strategies/strategy-axis/strategy-axis.component.html","webpack:///./src/app/hr/strategies/strategy-axis/strategy-axis.component.ts","webpack:///./src/app/hr/strategies/strategy-detail/strategy-detail.component.css","webpack:///./src/app/hr/strategies/strategy-detail/strategy-detail.component.html","webpack:///./src/app/hr/strategies/strategy-detail/strategy-detail.component.ts","webpack:///./src/app/hr/strategies/strategy-documentation/strategy-documentation.component.css","webpack:///./src/app/hr/strategies/strategy-documentation/strategy-documentation.component.html","webpack:///./src/app/hr/strategies/strategy-documentation/strategy-documentation.component.ts","webpack:///./src/app/hr/strategies/strategy-edit-modal/strategy-edit-modal.component.css","webpack:///./src/app/hr/strategies/strategy-edit-modal/strategy-edit-modal.component.html","webpack:///./src/app/hr/strategies/strategy-edit-modal/strategy-edit-modal.component.ts","webpack:///./src/app/hr/strategies/strategy-list/strategy-list.component.css","webpack:///./src/app/hr/strategies/strategy-list/strategy-list.component.html","webpack:///./src/app/hr/strategies/strategy-list/strategy-list.component.ts","webpack:///./src/app/hr/strategies/strategy-new/strategy-new.component.css","webpack:///./src/app/hr/strategies/strategy-new/strategy-new.component.html","webpack:///./src/app/hr/strategies/strategy-new/strategy-new.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/sheets/axis-user/axis-user.component.css","webpack:///./src/app/sheets/axis-user/axis-user.component.html","webpack:///./src/app/sheets/axis-user/axis-user.component.ts","webpack:///./src/app/sheets/goal-card/goal-card.component.css","webpack:///./src/app/sheets/goal-card/goal-card.component.html","webpack:///./src/app/sheets/goal-card/goal-card.component.ts","webpack:///./src/app/sheets/goal-edit-modal/goal-edit-modal.component.css","webpack:///./src/app/sheets/goal-edit-modal/goal-edit-modal.component.html","webpack:///./src/app/sheets/goal-edit-modal/goal-edit-modal.component.ts","webpack:///./src/app/sheets/goal-new/goal-new.component.css","webpack:///./src/app/sheets/goal-new/goal-new.component.html","webpack:///./src/app/sheets/goal-new/goal-new.component.ts","webpack:///./src/app/sheets/goals/goals.component.css","webpack:///./src/app/sheets/goals/goals.component.html","webpack:///./src/app/sheets/goals/goals.component.ts","webpack:///./src/app/sheets/sheet-detail/sheet-detail.component.css","webpack:///./src/app/sheets/sheet-detail/sheet-detail.component.html","webpack:///./src/app/sheets/sheet-detail/sheet-detail.component.ts","webpack:///./src/app/sheets/sheets-panel/sheets-panel.component.css","webpack:///./src/app/sheets/sheets-panel/sheets-panel.component.html","webpack:///./src/app/sheets/sheets-panel/sheets-panel.component.ts","webpack:///./src/app/strategies/strategies.component.html","webpack:///./src/app/strategies/strategies.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Directive, Input, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { AuthService } from './../_services/auth.service';\n\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective {\n  @Input() appHasRole: string[];\n  isVisible = false;\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private authService: AuthService) { }\n\n  ngOnInit() {\n    const userRoles = this.authService.decodedToken.role as Array<string>;\n    if (!userRoles) {\n      this.viewContainerRef.clear();\n    }\n\n    if (this.authService.roleMatch(this.appHasRole)) {\n      if (!this.isVisible) {\n        this.isVisible = true;\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.isVisible = false;\n        this.viewContainerRef.clear();\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  canActivate(next: ActivatedRouteSnapshot): boolean {\n\n    const roles = next.firstChild.data['roles'] as Array<string>;\n    if (roles) {\n      const match = this.authService.roleMatch(roles);\n      if (match) {\n        return true;\n      } else {\n        this.router.navigate(['/']);\n        this.alertify.error('Vous n\\'êtes pas autorisé à accéder à cette zone');\n      }\n    }\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('Vous ne pouvez pas passer!!!');\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\n\nimport { CollaboratorEditComponent } from './../collaborators/collaborator-edit/collaborator-edit.component';\n\n@Injectable()\nexport class PreventUnsavedChanges\n  implements CanDeactivate<CollaboratorEditComponent> {\n  canDeactivate(component: CollaboratorEditComponent) {\n    if (component.editForm.dirty) {\n      return confirm(\n        'Are you sure you want to continue? Any unsaved changes will be lost'\n      );\n    }\n    return true;\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { BehavioralSkill } from '../_models/behavioralSkill';\nimport { HrService } from './../_services/hr.service';\nimport { AlertifyService } from './../_services/alertify.service';\n\n@Injectable()\nexport class BehavioralSkillDetailResolver implements Resolve<BehavioralSkill> {\n  constructor(\n    private hrService: HrService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<BehavioralSkill> {\n    return this.hrService.getBehavioralSkill(route.params['id']).pipe(\n      catchError(error => {\n        this.alertify.error('Problème lors de la récupération des données de votre compétence comportementale');\n        this.router.navigate(['/hr']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { User } from '../_models/user';\nimport { AdminService } from './../_services/admin.service';\nimport { AlertifyService } from './../_services/alertify.service';\n\n@Injectable()\nexport class CollaboratorDetailResolver implements Resolve<User> {\n  constructor(\n    private adminService: AdminService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    return this.adminService.getUser(route.params['id']).pipe(\n      catchError(error => {\n        this.alertify.error('Problème lors de la récupération des données de votre utilisateur');\n        this.router.navigate(['/admin']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Observable, of, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { User } from '../_models/user';\nimport { Department } from './../_models/department';\nimport { AdminService } from './../_services/admin.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserStatus } from '../_models/userStatus';\n\n@Injectable()\nexport class CollaboratorListResolver implements Resolve<any> {\n  pageNumber = 1;\n  pageSize = 10;\n  users: User[];\n\n  constructor(\n    private adminService: AdminService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    let departmentList = localStorage.getItem('departmentList');\n    let userStatusList = localStorage.getItem('userStatusList');\n\n    if (departmentList && userStatusList) {\n      this.adminService.getUsersWithRoles(this.pageNumber, this.pageSize)\n        .pipe(map(result => {\n          return {\n            departmentList: JSON.parse(departmentList),\n            userStatusList: JSON.parse(userStatusList),\n            users: result\n          };\n        }),\n          catchError(error => {\n            this.alertify.error('Problème lors de la récupération des données des utilisateurs');\n            this.router.navigate(['/home']);\n            return of(null);\n          }));\n    }\n\n    return forkJoin(\n      [\n        this.adminService.getDepartments(),\n        this.adminService.getUserStatus(),\n        this.adminService.getUsersWithRoles(this.pageNumber, this.pageSize)\n          .pipe(catchError(error => {\n            this.alertify.error('Problème lors de la récupération des données des utilisateurs');\n            this.router.navigate(['/home']);\n            return of(null);\n          }))\n      ]).pipe(map(result => {\n        localStorage.setItem('departmentList', JSON.stringify(result[0]));\n        localStorage.setItem('userStatusList', JSON.stringify(result[1]));\n        return {\n          departmentList: result[0],\n          userStatusList: result[1],\n          users: result[2]\n        };\n      }));\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { HrService } from './../_services/hr.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { EvaluationFile } from './../_models/evaluationFile';\n\n@Injectable()\nexport class EvaluationHrDetailResolver implements Resolve<EvaluationFile> {\n  constructor(\n    private hrService: HrService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<EvaluationFile> {\n    return this.hrService.getEvaluationFile(route.params['id']).pipe(\n      catchError(error => {\n        this.alertify.error('Problème lors de la récupération des données de votre fiche d\\'évaluation');\n        this.router.navigate(['/hr']);\n        return of(null);\n      }));\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { UserService } from './../_services/user.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { Message } from '../_models/message';\nimport { AuthService } from './../_services/auth.service';\n\n@Injectable()\nexport class MessagesResolver implements Resolve<Message[]> {\n  pageNumber = 1;\n  pageSize = 10;\n  messageContainer = 'Unread';\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\n    return this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pageNumber,\n        this.pageSize,\n        this.messageContainer\n      )\n      .pipe(\n        catchError(error => {\n          this.alertify.error('Problem retrieving messages');\n          this.router.navigate(['/home']);\n          return of(null);\n        })\n      );\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { User } from '../_models/user';\nimport { UserService } from './../_services/user.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class ProfileEditResolver implements Resolve<User> {\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\n      catchError(error => {\n        this.alertify.error('Problème de récupération de vos données');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Observable, of, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { EvaluationFileInstance } from '../_models/evaluationFileInstance';\nimport { UserService } from './../_services/user.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\nimport { GoalType } from '../_models/goalType';\n\n@Injectable()\nexport class SheetDetailResolver implements Resolve<any> {\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    let goalTypeList = localStorage.getItem('goalTypeList');\n    const userId = this.authService.decodedToken.nameid;\n\n    if (goalTypeList) {\n      this.userService.getMySheet(route.params['id'], userId)\n        .pipe(map(result => {\n          return {\n            goalTypeList: JSON.parse(goalTypeList),\n            sheetDetail: result\n          };\n        }),\n          catchError(error => {\n            this.alertify.error('Problème lors de la récupération des données de votre fiche d\\'evaluation');\n            this.router.navigate(['/sheets']);\n            return of(null);\n          }));\n    }\n\n    return forkJoin(\n      [\n        this.userService.getGoalTypes(userId),\n        this.userService.getMySheet(route.params['id'], userId)\n          .pipe(catchError(error => {\n            this.alertify.error('Problème lors de la récupération des données devotre fiche d\\'evaluation');\n            this.router.navigate(['/sheets']);\n            return of(null);\n          }))\n      ]).pipe(map(result => {\n        localStorage.setItem('goalTypeList', JSON.stringify(result[0]));\n        return {\n          goalTypeList: result[0],\n          sheetDetail: result[1]\n        };\n      }));\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { UserService } from './../_services/user.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { EvaluationFileInstance } from './../_models/evaluationFileInstance';\n\n@Injectable()\nexport class SheetsResolver implements Resolve<EvaluationFileInstance> {\n  pageNumber = 1;\n  pageSize = 10;\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<EvaluationFileInstance> {\n    return this.userService\n      .getMySheets(\n        this.authService.decodedToken.nameid,\n        this.pageNumber,\n        this.pageSize).pipe(\n          catchError(error => {\n            this.alertify.error('Problème lors de la récupération des données de votre fiches d\\'évaluation');\n            this.router.navigate(['/hr']);\n            return of(null);\n          }));\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { HrService } from './../_services/hr.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { Strategy } from '../_models/strategy';\n\n@Injectable()\nexport class StrategiesResolver implements Resolve<Strategy[]> {\n\n  constructor(\n    private hrService: HrService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Strategy[]> {\n    return this.hrService\n      .getPublishedStrategies()\n      .pipe(\n        catchError(error => {\n          this.alertify.error('Problem retrieving Strategies');\n          this.router.navigate(['/home']);\n          return of(null);\n        })\n      );\n  }\n}\n","import { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { Strategy } from '../_models/strategy';\nimport { HrService } from './../_services/hr.service';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class StrategyDetailResolver implements Resolve<Strategy> {\n  constructor(\n    private hrService: HrService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Strategy> {\n    return this.hrService.getStrategy(route.params['id'], this.authService.decodedToken.nameid).pipe(\n      catchError(error => {\n        this.alertify.error('Problème lors de la récupération des données de votre stratégie');\n        this.router.navigate(['/hr']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { Observable, of, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { Strategy } from '../_models/strategy';\nimport { HrService } from './../_services/hr.service';\nimport { AuthService } from './../_services/auth.service';\nimport { AlertifyService } from './../_services/alertify.service';\n\n@Injectable()\nexport class StrategyListResolver implements Resolve<Strategy[]> {\n  pageNumber = 1;\n  pageSize = 10;\n\n  constructor(\n    private hrService: HrService,\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Strategy[]> {\n    return this.hrService.getStrategies(this.authService.decodedToken.nameid, this.pageNumber, this.pageSize)\n      .pipe(catchError(error => {\n        this.alertify.error('Problème lors de la récupération des données des strategies');\n        this.router.navigate(['/home']);\n        return of(null);\n      }))\n  }\n}\n","import { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { PaginatedResult } from './../_models/pagination';\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models/user';\nimport { Strategy } from '../_models/strategy';\nimport { Evaluator } from '../_models/evaluator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getUsers(\n    page?,\n    itemsPerPage?,\n    userParams?\n  ): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<\n      User[]\n      >();\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null) {\n      params = params.append('departmentId', userParams.departmentId);\n      params = params.append('userStatusId', userParams.userStatusId);\n      params = params.append('userToSearch', userParams.userToSearch);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    return this.http\n      .get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(user) {\n    return this.http.put(this.baseUrl + 'admin/', user);\n  }\n\n  createUser(notifyUser: boolean, user: User) {\n    return this.http.post(this.baseUrl + 'admin/register/' + notifyUser, user);\n  }\n\n  getUsersWithRoles(page?,\n    itemsPerPage?, userParams?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (userParams != null && userParams.departmentId !== undefined && userParams.userStatusId !== undefined) {\n      params = params.append('departmentId', userParams.departmentId);\n      params = params.append('userStatusId', userParams.userStatusId);\n      params = params.append('userToSearch', userParams.userToSearch);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    return this.http\n      .get<User[]>(this.baseUrl + 'admin/usersWithRoles', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getDepartments() {\n    return this.http.get(this.baseUrl + 'admin/departments');\n  }\n\n  getUserStatus() {\n    return this.http.get(this.baseUrl + 'admin/userStatus');\n  }\n\n  updateUserRoles(user: User, roles: {}) {\n    return this.http.post(this.baseUrl + 'admin/editRoles/' + user.id, roles);\n  }\n\n  getPhotosForApproval() {\n    return this.http.get(this.baseUrl + 'admin/photosForModeration');\n  }\n\n  approvePhoto(photoId) {\n    return this.http.post(this.baseUrl + 'admin/approvePhoto/' + photoId, {});\n  }\n\n  rejectPhoto(photoId) {\n    return this.http.post(this.baseUrl + 'admin/rejectPhoto/' + photoId, {});\n  }\n\n  emailAlreadyExists(email: string) {\n    return this.http.get(`${this.baseUrl}admin/emailAlreadyExists?email=${email}`);\n  }\n\n  employeeNumberAlreadyExists(employeeNumber: string) {\n    return this.http.get(`${this.baseUrl}admin/employeeNumberAlreadyExists?employeeNumber=${employeeNumber}`);\n  }\n\n  searchUsers(searchTerm: { userToSearch: string, userStatusId: number }): Observable<User[]> {\n    let params = new HttpParams();\n\n    params = params.append('userToSearch', searchTerm.userToSearch);\n    params = params.append('userStatusId', searchTerm.userStatusId.toString());\n\n    return this.http.get<User[]>(this.baseUrl + 'admin/searchUsers', { params });\n  }\n\n  addEvaluatorToUser(evaluatedId: number, evaluatorIds: number[]) {\n    return this.http.post(`${this.baseUrl}admin/addEvaluatorToUser/${evaluatedId}`, evaluatorIds);\n  }\n\n  addEvaluateeToUser(evaluatorId: number, evaluateeIds: number[]) {\n    return this.http.post(`${this.baseUrl}admin/addEvaluateeToUser/${evaluatorId}`, evaluateeIds);\n  }\n\n  updateRankOfEvaluator(evaluatedId: number, evaluatorId: number, rank: number) {\n    return this.http.put(`${this.baseUrl}admin/updateRankOfEvaluator/${evaluatedId}/${evaluatorId}/${rank}`, {});\n  }\n\n  loadEvaluators(evaluatedId: number) {\n    return this.http.get<Evaluator[]>(`${this.baseUrl}admin/loadEvaluators/${evaluatedId}`);\n  }\n\n  loadEvaluatees(evaluatorId: number) {\n    return this.http.get<Evaluator[]>(`${this.baseUrl}admin/loadEvaluatees/${evaluatorId}`);\n  }\n\n  deleteEvaluator(evaluatorId: number, evaluatedId: number) {\n    return this.http.delete(`${this.baseUrl}admin/deleteEvaluator/${evaluatorId}/${evaluatedId}`);\n  }\n\n  deleteEvaluatee(evaluatedId: number, evaluatorId: number) {\n    return this.http.delete(`${this.baseUrl}admin/deleteEvaluatee/${evaluatedId}/${evaluatorId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n  constructor() {}\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {\n      }\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { environment } from './../../environments/environment';\nimport { User } from './../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user));\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          this.currentUser = user.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  roleMatch(allowedRoles): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach(element => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    });\n    return isMatch;\n  }\n\n  resetPassword(model: any) {\n    return this.http.post(`${this.baseUrl}resetPassword`, model);\n  }\n\n  requestResetPassword(model: any) {\n    return this.http.post(`${this.baseUrl}generatePasswordResetToken`, model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.status === 401) {\n            return throwError(error.statusText);\n          }\n          const applicationError = error.headers.get('Application-Error');\n          if (applicationError) {\n            return throwError(applicationError);\n          }\n          const serverError = error.error;\n          let modalStateErrors = '';\n          if (serverError && typeof serverError == 'object') {\n            for (const key in serverError) {\n              if (serverError[key]) {\n                modalStateErrors += serverError[key] + '\\n';\n              }\n            }\n          }\n          return throwError(modalStateErrors || serverError || 'Server Error');\n        }\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true\n};\n","import { BehavioralSkill } from './../_models/behavioralSkill';\nimport { map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { PaginatedResult } from './../_models/pagination';\nimport { environment } from '../../environments/environment';\nimport { Strategy } from '../_models/strategy';\nimport { Axis } from '../_models/axis';\nimport { AxisPole } from '../_models/axisPole';\nimport { User } from '../_models/user';\nimport { EvaluationFile } from '../_models/evaluationFile';\nimport { EvaluationFileInstance } from '../_models/evaluationFileInstance';\nimport { AxisInstance } from '../_models/axisInstance';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HrService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getStrategy(id: number, ownerId) {\n    let params = new HttpParams();\n    params = params.append('ownerId', ownerId);\n    return this.http.get<Strategy>(`${this.baseUrl}hr/strategy/${id}`, { params });\n  }\n\n  getStrategies(\n    id,\n    page?,\n    itemsPerPage?,\n    strategyParams?\n  ): Observable<PaginatedResult<Strategy[]>> {\n    const paginatedResult: PaginatedResult<Strategy[]> = new PaginatedResult<\n      Strategy[]\n      >();\n    let params = new HttpParams();\n    params = params.append('ownerId', id);\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    if (strategyParams != null) {\n      params = params.append('status', strategyParams.status);\n      params = params.append('orderBy', strategyParams.orderBy);\n    }\n\n    return this.http\n      .get<Strategy[]>(this.baseUrl + 'hr/strategy', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getPublishedStrategies() {\n    return this.http.get<Strategy[]>(`${this.baseUrl}hr/strategy/publishedStrategies`);\n  }\n\n  getPublishedBehavioralSkills() {\n    return this.http.get<BehavioralSkill[]>(`${this.baseUrl}hr/behavioralSkill/publishedBehavioralSkills`);\n  }\n\n  createStrategy(ownerId: number, strategy: Strategy) {\n    return this.http.post(`${this.baseUrl}hr/strategy/new/${ownerId}`, strategy);\n  }\n\n  cloneStrategy(ownerId: number, strategyId: number) {\n    return this.http.post(`${this.baseUrl}hr/strategy/clone/${ownerId}/${strategyId}`, {});\n  }\n\n  deleteStrategy(id: number) {\n    return this.http.delete(`${this.baseUrl}hr/strategy/delete/${id}`);\n  }\n\n  deleteStrategyDocument(id: number) {\n    return this.http.post(this.baseUrl + 'hr/strategy/documentation/delete/' + id, {});\n  }\n\n  updateStrategy(ownerId: number, strategy: Strategy) {\n    return this.http.put(`${this.baseUrl}hr/strategy/edit/${ownerId}`, strategy);\n  }\n\n  getAxisList(strategyId: number) {\n    return this.http.get<Axis[]>(\n      this.baseUrl + 'hr/axis/axisList/' + strategyId);\n  }\n\n  getAxisPoleList(axisId: number) {\n    return this.http.get<AxisPole[]>(\n      this.baseUrl + 'hr/axis/axisPoleList/' + axisId);\n  }\n\n  addAxis(axis: Axis) {\n    return this.http.post(this.baseUrl + 'hr/axis/addAxis', axis);\n  }\n\n  updateAxis(id: number, axis: Axis) {\n    return this.http.put(this.baseUrl + 'hr/axis/updateAxis/' + id, axis);\n  }\n\n  deleteAxis(id: number, userId: number) {\n    return this.http.delete(`${this.baseUrl}hr/axis/axis/${id}/delete/${userId}`);\n  }\n\n  updateAxisPoleWeigth(axisId: number, poleId: number, weight: number) {\n    return this.http.put(`${this.baseUrl}hr/axis/updateAxisPole/${axisId}/${poleId}/${weight}`, {});\n  }\n\n  getBehavioralSkills(createdById, filters?) {\n    let params = new HttpParams();\n    params = params.append('ownerId', createdById);\n    if (filters != null) {\n      params = params.append('status', filters.status);\n      params = params.append('orderBy', filters.orderBy);\n    }\n    return this.http.get<BehavioralSkill[]>(`${this.baseUrl}hr/behavioralSkill`, { params });\n  }\n\n  cloneBehavioralSkill(ownerId: number, behavioralSkillId: number) {\n    return this.http.post(`${this.baseUrl}hr/behavioralSkill/clone/${ownerId}/${behavioralSkillId}`, {});\n  }\n\n  deleteBehavioralSkill(id: number) {\n    return this.http.delete(`${this.baseUrl}hr/behavioralSkill/delete/${id}`);\n  }\n\n  updateBehavioralSkill(createdById: number, behavioralSkill: BehavioralSkill) {\n    return this.http.put(`${this.baseUrl}hr/behavioralSkill/edit/${createdById}`, behavioralSkill)\n  }\n\n  getBehavioralSkill(id: number) {\n    return this.http.get<BehavioralSkill>(`${this.baseUrl}hr/behavioralSkill/${id}`);\n  }\n\n  createBehavioralSkill(createdById: number, behavioralSkill: BehavioralSkill) {\n    return this.http.post(`${this.baseUrl}hr/behavioralSkill/new/${createdById}`, behavioralSkill);\n  }\n\n  getEvaluationFiles(ownerId, filters?) {\n    let params = new HttpParams();\n    params = params.append('ownerId', ownerId);\n    if (filters != null) {\n      params = params.append('status', filters.status);\n      params = params.append('orderBy', filters.orderBy);\n    }\n    return this.http.get<EvaluationFile[]>(`${this.baseUrl}hr/evaluationfile`, { params });\n  }\n\n  updateEvaluationFile(ownerId: number, evaluationFile: any) {\n    return this.http.put(`${this.baseUrl}hr/evaluationfile/edit/${ownerId}`, evaluationFile)\n  }\n\n  getEvaluationFile(id: number) {\n    return this.http.get<EvaluationFile>(`${this.baseUrl}hr/evaluationfile/${id}`);\n  }\n\n  createEvaluationFile(ownerId: number, newEvaluationFile: any) {\n    return this.http.post(`${this.baseUrl}hr/evaluationfile/new/${ownerId}`, newEvaluationFile);\n  }\n\n  generateEvaluationFile(evaluationFileId: number, users: User[]) {\n    return this.http.post(`${this.baseUrl}hr/evaluationfile/generate/${evaluationFileId}`, users);\n  }\n\n  efiBSList = new BehaviorSubject<EvaluationFileInstance[]>([]);\n  efiObservableList = this.efiBSList.asObservable();\n  changeEfiList(efilist: EvaluationFileInstance[]) {\n    this.efiBSList.next(efilist);\n  }\n  getEvaluationFileInstancesByEvaluationFileId(evaluationFileId: number) {\n    return this.http.get<EvaluationFileInstance[]>(`${this.baseUrl}hr/evaluationFile/evaluationFileInstances/${evaluationFileId}`)\n      .pipe(map((result: EvaluationFileInstance[]) => {\n        this.changeEfiList(result);\n      }));\n  }\n\n  updateAxisInstance(userId: number, axisInstanceId: number, userWeight: number) {\n    return this.http.put(`${this.baseUrl}hr/evaluationfile/axisInstance/edit/${userId}/${axisInstanceId}/${userWeight}`, {})\n  }\n\n  deleteEvaluationFileInstance(id: number, userId: number) {\n    return this.http.delete(`${this.baseUrl}hr/evaluationFile/evaluationFileInstance/${id}/delete/${userId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map, distinctUntilChanged } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n\n  constructor(private router: Router) { }\n\n  isNavigationPending$: Observable<boolean> = this.router.events.pipe(\n    filter((event: RouterEvent) => this.isConsideredEvent(event)),\n    map((event: RouterEvent) => this.isNavigationStart(event)),\n    distinctUntilChanged()\n  );\n\n  private isConsideredEvent(event: RouterEvent): boolean {\n    return this.isNavigationStart(event)\n      || this.isNavigationEnd(event);\n  }\n\n  private isNavigationStart(event: RouterEvent): boolean {\n    return event instanceof NavigationStart;\n  }\n\n  private isNavigationEnd(event: RouterEvent): boolean {\n    return event instanceof NavigationEnd\n      || event instanceof NavigationCancel\n      || event instanceof NavigationError;\n  }\n}\n","import { BehavioralSkill } from './../_models/behavioralSkill';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../_models/user';\nimport { PaginatedResult } from './../_models/pagination';\nimport { Message } from '../_models/message';\nimport { Goal } from '../_models/goal';\nimport { Strategy } from '../_models/strategy';\nimport { EvaluationFileInstance } from '../_models/evaluationFileInstance';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  loadAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl + 'users/loadAllUsers');\n  }\n\n  updateProfile(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(\n      this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\n      {}\n    );\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n  }\n\n  getMessages(\n    id: number,\n    page?,\n    itemsPerPage?,\n    messageContainer?\n  ): Observable<PaginatedResult<Message[]>> {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<\n      Message[]\n      >();\n    let params = new HttpParams();\n    params = params.append('MessageContainer', messageContainer);\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http\n      .get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {\n        observe: 'response',\n        params\n      })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(\n      this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId\n    );\n  }\n\n  sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n\n  deleteMessage(id: number, userId: number) {\n    return this.http.post(\n      this.baseUrl + 'users/' + userId + '/messages/' + id,\n      {}\n    );\n  }\n\n  markAsRead(userId: number, messageId: number) {\n    this.http\n      .post(\n        this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read',\n        {}\n      )\n      .subscribe();\n  }\n\n  getMySheets(userId: number, page?, itemsPerPage?): Observable<PaginatedResult<EvaluationFileInstance[]>> {\n    const paginatedResult: PaginatedResult<EvaluationFileInstance[]> = new PaginatedResult<EvaluationFileInstance[]>();\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n    return this.http\n      .get<EvaluationFileInstance[]>(this.baseUrl + 'users/' + userId + '/objectives', {\n        observe: 'response',\n        params\n      })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getMySheet(id: number, userId: number) {\n    return this.http.get<EvaluationFileInstance>(this.baseUrl + 'users/' + userId + '/objectives/mysheet/' + id);\n  }\n\n  getGoalsForAxis(userId: number, axisInstanceIds: number[]) {\n    return this.http.post(`${this.baseUrl}users/${userId}/objectives`, axisInstanceIds);\n  }\n\n  createGoal(userId: number, goal: any) {\n    return this.http.post(`${this.baseUrl}users/${userId}/objectives/createGoal`, goal);\n  }\n\n  updateGoal(id: number, userId: number, goal: Goal) {\n    return this.http.put(`${this.baseUrl}users/${userId}/objectives/editGoal/${id}`, goal);\n  }\n\n  deleteGoal(id: number, userId: number) {\n    return this.http.delete(`${this.baseUrl}users/${userId}/objectives/deleteGoal/${id}`);\n  }\n\n  getGoalTypes(userId) {\n    return this.http.get(`${this.baseUrl}users/${userId}/objectives/goalTypes`);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadData()\\\" novalidate>\\n    <div class=\\\"form-row align-items-center\\\">\\n      <div class=\\\"col-auto\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"department\\\">Direction:</label>\\n        <select [(ngModel)]=\\\"filters.departmentId\\\" class=\\\"form-control\\\" style=\\\"width: 150px\\\" id=\\\"department\\\" name=\\\"department\\\">\\n          <option value=\\\"0\\\">Toutes les dirctions</option>\\n          <option *ngFor=\\\"let dpt of departmentList\\\" [value]=\\\"dpt.id\\\">\\n            {{ dpt.name }}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-auto\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"userStatus\\\">Statut:</label>\\n        <select [(ngModel)]=\\\"filters.userStatusId\\\" class=\\\"form-control\\\" style=\\\"width: 150px\\\" id=\\\"userStatus\\\" name=\\\"userStatus\\\">\\n          <option value=\\\"0\\\">Toutes les Statuts</option>\\n          <option *ngFor=\\\"let status of userStatusList\\\" [value]=\\\"status.id\\\">\\n            {{ status.name }}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-auto\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"userToSearch\\\">Nom:</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"filters.userToSearch\\\" class=\\\"form-control\\\" style=\\\"width: 150px\\\" id=\\\"userToSearch\\\" name=\\\"userToSearch\\\"\\n          placeholder=\\\"Nom à rechercher\\\">\\n      </div>\\n\\n      <div class=\\\"col-auto\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">\\n          Appliquer\\n        </button>\\n      </div>\\n      <div class=\\\"col-auto\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\">\\n          Réinitialiser\\n        </button>\\n      </div>\\n\\n      <div class=\\\"col-auto\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\" (click)=\\\"creationToggle()\\\">\\n          Nouveau\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { UserStatus } from '../../_models/userStatus';\nimport { Department } from './../../_models/department';\n\n@Component({\n  selector: 'app-admin-filter-actions',\n  templateUrl: './admin-filter-actions.component.html',\n  styleUrls: ['./admin-filter-actions.component.css']\n})\nexport class AdminFilterActionsComponent implements OnInit {\n  @Input() departmentList: Department[];\n  @Input() userStatusList: UserStatus[];\n  @Output() loadDataEvent = new EventEmitter<any>();\n  @Output() creationModeEvent = new EventEmitter<any>();\n  filters: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.filters.departmentId = 0;\n    this.filters.userStatusId = 0;\n    this.filters.userToSearch = \"\";\n    this.filters.orderBy = 'lastActive';\n  }\n\n  resetFilters() {\n    this.filters.departmentId = 0;\n    this.filters.userStatusId = 0;\n    this.filters.userToSearch = \"\";\n    this.loadDataEvent.emit(this.filters);\n  }\n\n  creationToggle() {\n    this.creationModeEvent.emit(true)\n  }\n\n  loadData() {\n    this.loadDataEvent.emit(this.filters);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <h2>Panneau d'administration</h2>\\n  <div class=\\\"tab-panel\\\" *ngIf=\\\"!creationMode\\\">\\n    <app-admin-filter-actions *ngIf=\\\"!isPhotosManagementSelected\\\" [departmentList]=\\\"departmentList\\\" [userStatusList]=\\\"userStatusList\\\"\\n      (loadDataEvent)=\\\"handleLoadUsers($event)\\\" (creationModeEvent)=\\\"handleCreationMode($event)\\\"></app-admin-filter-actions>\\n    <br />\\n    <tabset class=\\\"member-tabset\\\" (click)=\\\"onSelect($event)\\\" #adminTabs>\\n      <tab heading=\\\"Gestion des utilisateurs\\\" *appHasRole=\\\"['Admin', 'HR']\\\">\\n        <div class=\\\"row\\\">\\n          <app-collaborator-list [users]=\\\"users\\\" (loadUsersEvent)=\\\"handleLoadUsers($event)\\\"></app-collaborator-list>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Gestion des roles\\\" *appHasRole=\\\"['Admin', 'HR']\\\">\\n        <div class=\\\"container\\\">\\n          <app-user-roles-management [users]=\\\"users\\\" (loadUsersWithRolesEvent)=\\\"handleLoadUsers($event)\\\" (editUserRoleEvent)=\\\"handleEditUserRoles($event)\\\"></app-user-roles-management>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Gestion de photos\\\" *appHasRole=\\\"['Admin', 'HR']\\\">\\n        <app-photo-management></app-photo-management>\\n      </tab>\\n    </tabset>\\n\\n    <div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"!isPhotosManagementSelected\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\" (pageChanged)=\\\"pageChanged($event)\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"creationMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-collaborator-new [departmentList]=\\\"departmentList\\\" [userStatusList]=\\\"userStatusList\\\" (cancelRegister)=\\\"cancelRegisterMode($event)\\\"\\n          (switchOffRegister)=\\\"switchOffRegisterMode($event)\\\"></app-collaborator-new>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\nimport { AdminService } from '../../_services/admin.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { Pagination, PaginatedResult } from './../../_models/pagination';\nimport { UserStatus } from '../../_models/userStatus';\nimport { Department } from './../../_models/department';\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n  @ViewChild('adminTabs') adminTabs: TabsetComponent;\n  departmentList: Department[];\n  userStatusList: UserStatus[];\n  users: User[];\n  pagination: Pagination;\n  public loading = false;\n  creationMode = false;\n  filters: any = {};\n  isPhotosManagementSelected: boolean;\n\n  constructor(private route: ActivatedRoute, private adminService: AdminService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      const resolvedData = data['resolvedData'];\n      this.users = resolvedData['users'].result;\n      this.departmentList = resolvedData['departmentList'];\n      this.userStatusList = resolvedData['userStatusList'];\n      this.pagination = resolvedData['users'].pagination;\n    });\n  }\n\n  handleLoadUsers(filters) {\n    this.loading = true;\n    this.filters = filters;\n    this.adminService\n      .getUsersWithRoles(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.filters\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n          this.loading = false;\n        },\n        error => {\n          this.alertify.error(error);\n          this.loading = false;\n        }\n      );\n  }\n\n  handleEditUserRoles(event: any) {\n    this.loading = true;\n    this.adminService.updateUserRoles(event.user, event.rolesToUpdate).subscribe(() => {\n      this.alertify.success('Les rôles ont été mis à jour.');\n      this.handleLoadUsers(event.filters);\n      this.loading = false;\n    }, error => {\n      this.alertify.error(error);\n      this.loading = false;\n    })\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.handleLoadUsers(this.filters);\n  }\n\n  cancelRegisterMode(creationMode: boolean) {\n    this.creationMode = creationMode;\n  }\n\n  switchOffRegisterMode(reload: boolean) {\n    this.creationMode = false;\n    if (reload) {\n      this.handleLoadUsers\n        (this.filters);\n    }\n  }\n\n  handleCreationMode(event: boolean) {\n    this.creationMode = event;\n  }\n\n  onSelect($event) {\n    if (this.adminTabs.tabs[2].active) {\n      this.isPhotosManagementSelected = true;\n    } else {\n      this.isPhotosManagementSelected = false;\n    }\n  }\n}\n","module.exports = \"img.img-thumbnail {\\n  height: 150;\\n  min-width: 150 !important;\\n  margin-bottom: 2px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"alert alert-info mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"photos?.length === 0\\\">\\n    <p>Aucune photo d'utilisateur n'a encore été soumise pour approbation.</p>\\n  </div>\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <h4>{{photo.userName}}</h4>\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"photo.userName\\\" class=\\\"img-thumbnail p-1\\\">\\n\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success mr-1\\\" (click)=\\\"approvePhoto(photo.id)\\\">Approve</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"rejectPhoto(photo.id)\\\">Reject</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../_services/admin.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n  photos: any;\n  public loading = false;\n\n  constructor(private adminService: AdminService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.getPhotosForApproval();\n  }\n\n  getPhotosForApproval() {\n    this.loading = true;\n    this.adminService.getPhotosForApproval().subscribe((photos) => {\n      this.photos = photos;\n      this.loading = false;\n    }, error => {\n      this.alertify.error(error);\n      this.loading = false;\n    })\n  }\n\n  approvePhoto(photoId) {\n    this.loading = true;\n    this.adminService.approvePhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n      this.loading = false;\n    }, error => {\n      this.alertify.error(error);\n      this.loading = false;\n    })\n  }\n\n  rejectPhoto(photoId) {\n    this.loading = true;\n    this.adminService.rejectPhoto(photoId).subscribe(() => {\n      this.photos.splice(this.photos.findIndex(p => p.id === photoId), 1);\n      this.loading = false;\n    }, error => {\n      this.alertify.error(error);\n      this.loading = false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Modifier les rôles pour {{user.firstName}} {{user.lastName}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\">\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\">\\n      <input name=\\\"role\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\" value=\\\"{{role.name}}\\\" [checked]=\\\"role.checked\\\" (change)=\\\"role.checked = !role.checked\\\"\\n        [disabled]=\\\"role.name === 'Admin' && user.userName === 'admin'\\\">\\n      <label>{{role.name}}</label>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateRoles()\\\" form=\\\"rolesForm\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { User } from './../../_models/user';\n\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Output() updateSelectedRoles = new EventEmitter();\n\n  user: User;\n  roles: any[]\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div>\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 25%\\\">Nom Complet</th>\\n          <th style=\\\"width: 30%\\\">Email</th>\\n          <th style=\\\"width: 30%\\\">Active roles</th>\\n          <th style=\\\"width: 15%\\\"></th>\\n        </tr>\\n\\n        <tr *ngFor=\\\"let user of users\\\" [routerLink]=\\\"['/admin/collaborators/', user.id]\\\">\\n          <td>{{user.firstName}} {{user.lastName}}</td>\\n          <td>{{user.email}}</td>\\n          <td>{{user.roles}}</td>\\n          <td>\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editRolesModal(user)\\\">Edit Roles</button>\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { User } from '../../_models/user';\nimport { RolesModalComponent } from '../roles-modal/roles-modal.component';\n\n@Component({\n  selector: 'app-user-roles-management',\n  templateUrl: './user-roles-management.component.html',\n  styleUrls: ['./user-roles-management.component.css']\n})\nexport class UserRolesManagementComponent implements OnInit {\n  @Input() users: User[];\n  @Output() loadUsersWithRolesEvent = new EventEmitter<any>();\n  @Output() editUserRoleEvent = new EventEmitter<any>();\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  ngOnInit() { }\n\n  handleLoadUsers(event: any) {\n    this.loadUsersWithRolesEvent.emit(event);\n  }\n\n  editRolesModal(user: User) {\n    const initialState = {\n      user,\n      roles: this.getRolesArray(user)\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roleNames: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if (rolesToUpdate) {\n        let updateParams = { user, rolesToUpdate }\n        this.editUserRoleEvent.emit(updateParams);\n      }\n    });\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'HR', value: 'HR', },\n      { name: 'Collaborator', value: 'Collaborator' },\n      { name: 'HRD', value: 'HRD' }\n    ];\n\n    for (let i = 0; i < availableRoles.length; i++) {\n      let isMatch = false;\n      for (let j = 0; j < userRoles.length; j++) {\n        if (availableRoles[i].name === userRoles[j]) {\n          isMatch = true;\n          availableRoles[i].checked = true;\n          roles.push(availableRoles[i]);\n          break;\n        }\n      }\n      if (!isMatch) {\n        availableRoles[i].checked = false;\n        roles.push(availableRoles[i]);\n      }\n    }\n    return roles;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<ngx-loading [show]=\\\"isSpinnerVisibile$ | async\\\"></ngx-loading>\\n<router-outlet></router-outlet>\\n\"","import { JwtHelperService } from '@auth0/angular-jwt';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { User } from './_models/user';\nimport { LayoutService } from './_services/layout.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n  isSpinnerVisibile$: Observable<boolean> = this.layoutService.isNavigationPending$;\n\n  constructor(private authService: AuthService, private layoutService: LayoutService) { }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  BsDropdownModule,\n  TabsModule,\n  BsDatepickerModule,\n  PaginationModule,\n  ButtonsModule,\n  ModalModule,\n  CarouselModule,\n  AccordionModule\n} from 'ngx-bootstrap';\nimport { NgxLoadingModule } from 'ngx-loading';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { TimeAgoPipe } from 'time-ago-pipe';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { CollaboratorListComponent } from './collaborators/collaborator-list/collaborator-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { CollaboratorCardComponent } from './collaborators/collaborator-card/collaborator-card.component';\nimport { CollaboratorDetailComponent } from './collaborators/collaborator-detail/collaborator-detail.component';\nimport { CollaboratorEditComponent } from './collaborators/collaborator-edit/collaborator-edit.component';\nimport { CollaboratorListResolver } from './_resolvers/collaborator-list.resolver';\nimport { CollaboratorDetailResolver } from './_resolvers/collaborator-detail.resolver.';\nimport { CollaboratorNewComponent } from './collaborators/collaborator-new/collaborator-new.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsave-changes-guards';\nimport { PhotoEditorComponent } from './collaborators/photo-editor/photo-editor.component';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { CollaboratorMessagesComponent } from './collaborators/collaborator-messages/collaborator-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/hasRole.directive';\nimport { UserRolesManagementComponent } from './admin/user-roles-management/user-roles-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { AdminService } from './_services/admin.service';\nimport { RolesModalComponent } from './admin/roles-modal/roles-modal.component';\nimport { HrPanelComponent } from './hr/hr-panel/hr-panel.component';\nimport { StrategiesComponent } from './strategies/strategies.component';\nimport { StrategiesResolver } from './_resolvers/strategies.resolver';\nimport { StrategyListComponent } from './hr/strategies/strategy-list/strategy-list.component';\nimport { StrategyListResolver } from './_resolvers/strategy-list.resolver';\nimport { HrService } from './_services/hr.service';\nimport { StrategyNewComponent } from './hr/strategies/strategy-new/strategy-new.component';\nimport { StrategyDetailComponent } from './hr/strategies/strategy-detail/strategy-detail.component';\nimport { StrategyEditModalComponent } from './hr/strategies/strategy-edit-modal/strategy-edit-modal.component';\nimport { StrategyAxisComponent } from './hr/strategies/strategy-axis/strategy-axis.component';\nimport { StrategyDetailResolver } from './_resolvers/strategy-detail.resolver';\nimport { ResetPasswordComponent } from './collaborators/reset-password/reset-password.component';\nimport { ForgetPasswordComponent } from './collaborators/forget-password/forget-password.component';\nimport { ProfileEditResolver } from './_resolvers/profile-edit.resolver';\nimport { AxisModalComponent } from './hr/strategies/axis-modal/axis-modal.component';\nimport { AxisPolesWeightsCardComponent } from './hr/strategies/axis-poles-weights-card/axis-poles-weights-card.component';\nimport { AxisPoleWeightItemComponent } from './hr/strategies/axis-pole-weight-item/axis-pole-weight-item.component';\nimport { AxisPolesWeightsListComponent } from './hr/strategies/axis-poles-weights-list/axis-poles-weights-list.component';\nimport { ProfileEditComponent } from './collaborators/profile-edit/profile-edit.component';\nimport { StrategyDocumentationComponent } from './hr/strategies/strategy-documentation/strategy-documentation.component';\nimport { CollaboratorSearchComponent } from './collaborators/collaborator-search/collaborator-search.component';\nimport { BehavioralSkillNewComponent } from './hr/behavioral-skills/behavioral-skill-new/behavioral-skill-new.component';\nimport { BehavioralSkillDetailComponent } from './hr/behavioral-skills/behavioral-skill-detail/behavioral-skill-detail.component';\nimport { BehavioralSkillListComponent } from './hr/behavioral-skills/behavioral-skill-list/behavioral-skill-list.component';\nimport { BehavioralSkillEditModalComponent } from './hr/behavioral-skills/behavioral-skill-edit-modal/behavioral-skill-edit-modal.component';\nimport { BehavioralSkillDetailResolver } from './_resolvers/behavioral-skill-detail.resolver.';\nimport { EvaluatorComponent } from './collaborators/evaluator/evaluator.component';\nimport { EvaluationHrListComponent } from './hr/evaluations/evaluation-hr-list/evaluation-hr-list.component';\nimport { EvaluationHrEditModalComponent } from './hr/evaluations/evaluation-hr-edit-modal/evaluation-hr-edit-modal.component';\nimport { EvaluationHrNewComponent } from './hr/evaluations/evaluation-hr-new/evaluation-hr-new.component';\nimport { EvaluationHrDetailComponent } from './hr/evaluations/evaluation-hr-detail/evaluation-hr-detail.component';\nimport { HrFilterCreateActionsComponent } from './hr/hr-filter-create-actions/hr-filter-create-actions.component';\nimport { AdminFilterActionsComponent } from './admin/admin-filter-actions/admin-filter-actions.component';\nimport { LayoutService } from './_services/layout.service';\nimport { EvaluationHrDetailResolver } from './_resolvers/evaluation-hr-detail.resolver';\nimport { EvaluationFileInstanceHrListComponent } from './hr/evaluations/evaluation-file-instance-hr-list/evaluation-file-instance-hr-list.component';\nimport { EvaluatorAssignmentComponent } from './collaborators/evaluator-assignment/evaluator-assignment.component';\nimport { EvaluationFileInstanceHrNewComponent } from './hr/evaluations/evaluation-file-instance-hr-new/evaluation-file-instance-hr-new.component';\nimport { SheetsPanelComponent } from './sheets/sheets-panel/sheets-panel.component';\nimport { SheetsResolver } from './_resolvers/sheets.resolver';\nimport { SheetDetailComponent } from './sheets/sheet-detail/sheet-detail.component';\nimport { SheetDetailResolver } from './_resolvers/sheet-detail.resolver';\nimport { GoalsComponent } from './sheets/goals/goals.component';\nimport { GoalEditModalComponent } from './sheets/goal-edit-modal/goal-edit-modal.component';\nimport { AxisUserComponent } from './sheets/axis-user/axis-user.component';\nimport { GoalNewComponent } from './sheets/goal-new/goal-new.component';\nimport { GoalCardComponent } from './sheets/goal-card/goal-card.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    CollaboratorListComponent,\n    MessagesComponent,\n    CollaboratorCardComponent,\n    CollaboratorDetailComponent,\n    CollaboratorEditComponent,\n    CollaboratorNewComponent,\n    CollaboratorMessagesComponent,\n    CollaboratorSearchComponent,\n    EvaluatorComponent,\n    ProfileEditComponent,\n    PhotoEditorComponent,\n    TimeAgoPipe,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserRolesManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    MessagesComponent,\n    NavComponent,\n    HomeComponent,\n    HrPanelComponent,\n    StrategiesComponent,\n    StrategyListComponent,\n    StrategyNewComponent,\n    StrategyEditModalComponent,\n    StrategyDetailComponent,\n    StrategyAxisComponent,\n    StrategyDocumentationComponent,\n    AxisModalComponent,\n    AxisPolesWeightsCardComponent,\n    AxisPoleWeightItemComponent,\n    AxisPolesWeightsListComponent,\n    ResetPasswordComponent,\n    ForgetPasswordComponent,\n    BehavioralSkillListComponent,\n    BehavioralSkillDetailComponent,\n    BehavioralSkillNewComponent,\n    BehavioralSkillEditModalComponent,\n    EvaluationHrListComponent,\n    EvaluationHrEditModalComponent,\n    EvaluationHrNewComponent,\n    EvaluationHrDetailComponent,\n    HrFilterCreateActionsComponent,\n    AdminFilterActionsComponent,\n    EvaluationFileInstanceHrListComponent,\n    EvaluatorAssignmentComponent,\n    EvaluationFileInstanceHrNewComponent,\n    SheetsPanelComponent,\n    SheetDetailComponent,\n    GoalsComponent,\n    GoalEditModalComponent,\n    AxisUserComponent,\n    GoalNewComponent,\n    GoalCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    TabsModule.forRoot(),\n    ButtonsModule.forRoot(),\n    CarouselModule.forRoot(),\n    AccordionModule.forRoot(),\n    NgxLoadingModule.forRoot({}),\n    RouterModule.forRoot(appRoutes),\n    NgxGalleryModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    FileUploadModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n    })\n  ],\n  providers: [\n    AuthService,\n    ErrorInterceptorProvider,\n    AlertifyService,\n    AuthGuard,\n    PreventUnsavedChanges,\n    UserService,\n    CollaboratorListResolver,\n    CollaboratorDetailResolver,\n    ProfileEditResolver,\n    MessagesResolver,\n    StrategiesResolver,\n    StrategyListResolver,\n    StrategyDetailResolver,\n    BehavioralSkillDetailResolver,\n    EvaluationHrDetailResolver,\n    AdminService,\n    HrService,\n    LayoutService,\n    SheetsResolver,\n    SheetDetailResolver\n  ],\n  entryComponents: [\n    RolesModalComponent,\n    AxisModalComponent,\n    StrategyEditModalComponent,\n    BehavioralSkillEditModalComponent,\n    EvaluationHrEditModalComponent,\n    CollaboratorSearchComponent,\n    GoalEditModalComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card:hover img {\\n  -webkit-transform: scale(1.2, 1.2);\\n          transform: scale(1.2, 1.2);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n  opacity: 0.7;\\n}\\n\\n.card img {\\n  -webkit-transform: scale(1, 1);\\n          transform: scale(1, 1);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n}\\n\\n.card-img-wrapper {\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.member-icons {\\n  position: absolute;\\n  bottom: -30%;\\n  left: 0;\\n  right: 0;\\n  margin-right: auto;\\n  margin-left: auto;\\n  opacity: 0;\\n}\\n\\n.card-img-wrapper:hover .member-icons {\\n  bottom: 0;\\n  opacity: 1;\\n}\\n\\n.animate {\\n  transition: all 0.3 ease-in-out;\\n}\\n\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{ user.photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{ user.lastName }}\\\" />\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/admin/collaborators/', user.id]\\\">\\n          <i class=\\\"fa fa-user\\\"></i>\\n        </button>\\n      </li>\\n\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/admin/collaborators/edit/', user.id]\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>\\n        </button>\\n      </li>\\n\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/admin/collaborators/', user.id]\\\" [queryParams]=\\\"{ tab: 3 }\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i>\\n        </button>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      <i class=\\\"fa fa-user\\\"></i>{{ user.firstName }}, {{ user.lastName }}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">\\n      {{ user.title }}\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-collaborator-card',\n  templateUrl: './collaborator-card.component.html',\n  styleUrls: ['./collaborator-card.component.css']\n})\nexport class CollaboratorCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Profile de {{ user.lastName }}</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{ user.photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{ user.lastName }}\\\"\\n        />\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Derniere visite:</strong>\\n            <p>{{ user.lastActive | timeAgo }}</p>\\n          </div>\\n          <div>\\n            <strong>Date de Création:</strong>\\n            <p>{{ user.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-fles\\\">\\n            <button class=\\\"btn btn-primary w-140 mr-2\\\" [routerLink]=\\\"['/admin']\\\">Retour au List</button>\\n            <button class=\\\"btn btn-success w-60 mr-2\\\" (click)=\\\"selectTab(3)\\\">\\n              Message\\n            </button>\\n            <button class=\\\"btn btn-secondary w-60\\\" [routerLink]=\\\"['/admin/collaborators/edit', user.id]\\\">Editer</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"À propos {{ user.firstName }}\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-4\\\">\\n                <h4>Nom Complet</h4>\\n                <p>{{ user.firstName }} {{user.lastName}}</p>\\n                <h4>Statut</h4>\\n                <p>{{ user.userStatus.name }}</p>\\n                <h4>Fonction</h4>\\n                <p>{{ user.title }}</p>\\n                <h4>Direction</h4>\\n                <p>{{ user.department.name }}</p>\\n              </div>\\n              <div class=\\\"col-lg-6 offset-lg-1\\\">\\n                <h4>Matricule</h4>\\n                <p>{{ user.employeeNumber }}</p>\\n                <h4>Email</h4>\\n                <p>{{ user.email }}</p>\\n                <h4>Date de recrutement</h4>\\n                <p>{{ user.recruitmentDate | date: 'mediumDate'}}</p>\\n\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Évaluateurs / Évalués\\\">\\n            <app-evaluator-assignment [evaluated]=\\\"user\\\"></app-evaluator-assignment>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-collaborator-messages [recipientId]=\\\"user.id\\\"></app-collaborator-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\nimport { User } from './../../_models/user';\n\n@Component({\n  selector: 'app-collaborator-detail',\n  templateUrl: './collaborator-detail.component.html',\n  styleUrls: ['./collaborator-detail.component.css']\n})\nexport class CollaboratorDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  loading: boolean;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imagesUrls = [];\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imagesUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n    return imagesUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n","module.exports = \".img-thumbnail {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body {\\n  padding: 0 25px;\\n}\\n\\n.card-footer {\\n  padding: 10px 15ps;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8 offset-sm-4\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <p>\\n          <strong>Information:</strong>\\n          Vous avez apporté des modifications. Toute modification non enregistrée sera perdue!\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{ user.photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{ user.lastName }}\\\"\\n        />\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Dernière visite:</strong>\\n            <p>{{ user.lastActive | timeAgo }}</p>\\n          </div>\\n          <div>\\n            <strong>Date de Création:</strong>\\n            <p>{{ user.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-success w-80\\\" [disabled]=\\\"!editForm.dirty || editForm.invalid\\\" form=\\\"editForm\\\">\\n            Sauvegarder\\n          </button>\\n          <button class=\\\"btn btn-primary w-60 ml-2\\\" [routerLink]=\\\"['/admin']\\\">Anuuler</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Editer Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\" novalidate>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                  <h4>Prénom</h4>\\n                  <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': firstName.invalid }\\\" required/>\\n                  <div *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"firstName.errors.required\\\">Le prénom est requis.</div>\\n                  </div>\\n                  \\n                  <h4>Nom</h4>\\n                  <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': lastName.invalid }\\\" required/>\\n                  <div *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"lastName.errors.required\\\">Le nom est requis.</div>\\n                  </div>\\n\\n                  <h4>Statut</h4>\\n                  <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"userStatusId\\\" name=\\\"userStatusId\\\" [(ngModel)]=\\\"user.userStatus.id\\\" required>\\n                    <option *ngFor=\\\"let us of userStatusList\\\" [ngValue]=\\\"us.id\\\">\\n                      {{ us.name }}\\n                    </option>\\n                  </select>\\n\\n                  <h4>Fonction</h4>\\n                  <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': title.invalid }\\\" required/>\\n                  <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">La fonction est requise.</div>\\n                  </div>\\n\\n                  <h4>Direction</h4>\\n                  <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"departmentId\\\" name=\\\"departmentId\\\" [(ngModel)]=\\\"user.department.id\\\"\\n                    required>\\n                    <option *ngFor=\\\"let dpt of departmentList\\\" [ngValue]=\\\"dpt.id\\\">\\n                      {{ dpt.name }}\\n                    </option>\\n                  </select>\\n                </div>\\n\\n                <div class=\\\"col-lg-6 offset-lg1\\\">\\n                  <h4>Matricule</h4>\\n                  <input type=\\\"text\\\" name=\\\"employeeNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.employeeNumber\\\" #employeeNumber=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': employeeNumber.invalid }\\\" required/>\\n                  <div *ngIf=\\\"employeeNumber.invalid && (employeeNumber.dirty || employeeNumber.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"employeeNumber.errors.required\\\">Le matricule est requis.</div>\\n                  </div>\\n\\n                  <h4>Email</h4>\\n                  <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" required #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': email.invalid }\\\" required/>\\n                  <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"email.errors.required\\\">L'email est requis.</div>\\n                  </div>\\n\\n                  <h4>Date de recrutement</h4>\\n                  <input type=\\\"text\\\" name=\\\"recruitmentDate\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"user.recruitmentDate\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" #recruitmentDate=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': recruitmentDate.invalid }\\\" required/>\\n                  <div *ngIf=\\\"recruitmentDate.invalid && (recruitmentDate.dirty || recruitmentDate.touched)\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"recruitmentDate.errors.required\\\">Le prénom est requis.</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { AdminService } from '../../_services/admin.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { Department } from '../../_models/department';\nimport { UserStatus } from '../../_models/userStatus';\n\n@Component({\n  selector: 'app-collaborator-edit',\n  templateUrl: './collaborator-edit.component.html',\n  styleUrls: ['./collaborator-edit.component.css']\n})\nexport class CollaboratorEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  bsConfig: Partial<BsDatepickerConfig>;\n  bsValue = new Date();\n  departmentList: Department[];\n  userStatusList: UserStatus[];\n  public loading = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private adminService: AdminService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.departmentList = JSON.parse(localStorage.getItem('departmentList'));\n    this.userStatusList = JSON.parse(localStorage.getItem('userStatusList'));\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'YYYY-MM-DD'\n    };\n\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.bsValue = this.user.recruitmentDate;\n  }\n\n  updateUser() {\n    this.loading = true;\n    var updatedUser = {\n      departmentId: this.user.department.id,\n      userStatusId: this.user.userStatus.id,\n      email: this.user.email,\n      employeeNumber: this.user.employeeNumber,\n      firstName: this.user.firstName,\n      id: this.user.id,\n      lastName: this.user.lastName,\n      recruitmentDate: this.user.recruitmentDate,\n      title: this.user.title\n    };\n    this.adminService\n      .updateUser(updatedUser)\n      .subscribe(\n        next => {\n          this.loading = false;\n          this.alertify.success('Mise à jour du profil réussie');\n          this.editForm.reset(updatedUser);\n        },\n        error => {\n          this.alertify.error(error);\n          this.loading = false;\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row\\\" style=\\\"width:50vw;\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-3 col-md-6 col-sm-12\\\">\\n      <app-collaborator-card [user]=\\\"user\\\"></app-collaborator-card>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-collaborator-list',\n  templateUrl: './collaborator-list.component.html',\n  styleUrls: ['./collaborator-list.component.css']\n})\nexport class CollaboratorListComponent implements OnInit {\n  @Input() users: User[];\n  @Output() loadUsersEvent = new EventEmitter<any>();\n  @Output() pageChangedEvent = new EventEmitter<number>();\n\n  constructor(\n  ) { }\n\n  ngOnInit() { }\n\n  handleLoadUsers(event: any) {\n    this.loadUsersEvent.emit(event);\n  }\n}\n","module.exports = \".card {\\n  border: none;\\n}\\n\\n.chat {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.chat li {\\n  margin-bottom: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px dotted #b3a9a9;\\n}\\n\\n.rounded-circle {\\n  height: 50px;\\n  width: 50px;\\n}\\n\\n.card-body {\\n  overflow-y: scroll;\\n  height: 400px;\\n}\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      <p>Pas encore de message...</p>\\n    </div>\\n    <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{ message.senderPhotoUrl }}\\\" alt=\\\"{{ message.senderKnownAs }}\\\" class=\\\"rounded-circle\\\" />\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{ message.senderKnownAs }}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{ message.messageSent | timeAgo }}\\n                </span>\\n              </small>\\n            </div>\\n            <p>{{ message.content }}</p>\\n          </div>\\n        </div>\\n        <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n          <span class=\\\"chat-img float-right\\\">\\n            <img src=\\\"{{ message.senderPhotoUrl }}\\\" alt=\\\"{{ message.senderKnownAs }}\\\" class=\\\"rounded-circle\\\" />\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <small class=\\\"text-muted\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{ message.messageSent | timeAgo }}\\n                </span>\\n                <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(Unread)</span>\\n                <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{ message.dateRead | timeAgo }}</span>\\n              </small>\\n              <strong class=\\\"primary-font float-right\\\">{{ message.senderKnownAs }}\\n              </strong>\\n            </div>\\n            <p>{{ message.content }}</p>\\n          </div>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input [(ngModel)]=\\\"newMessage.content\\\" name=\\\"content\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"envoyer un message privé\\\"\\n        />\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!messageForm.valid\\\">\\n            Envoyer\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nimport { Message } from './../../_models/message';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\n\n@Component({\n  selector: 'app-collaborator-messages',\n  templateUrl: './collaborator-messages.component.html',\n  styleUrls: ['./collaborator-messages.component.css']\n})\nexport class CollaboratorMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n  public loading = false;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (\n              messages[i].isRead === false &&\n              messages[i].recipientId === currentUserId\n            ) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        messages => {\n          this.messages = messages;\n          this.loading = false;\n        },\n        error => {\n          this.alertify.error(error);\n          this.loading = false;\n        }\n      );\n  }\n\n  sendMessage() {\n    this.loading = true;\n    this.newMessage.recipientId = this.recipientId;\n    this.userService\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe(\n        (message: Message) => {\n          this.messages.unshift(message);\n          this.newMessage.content = '';\n          this.loading = false;\n        },\n        error => {\n          this.alertify.error(error);\n          this.loading = false;\n        }\n      );\n  }\n}\n","module.exports = \".form-group>label {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 15em;\\n}\\n\\n.form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\"","module.exports = \"<form [formGroup]=\\\"newUserForm\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"createUser()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Création d'utilisateur</h2>\\n  <hr />\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"employeeNumber\\\">Matricule: </label>\\n    <input [ngClass]=\\\"{\\n            'is-invalid':\\n              (newUserForm.get('employeeNumber')?.errors &&\\n              newUserForm.get('employeeNumber').touched) ||\\n              (newUserForm.get('employeeNumber').touched &&\\n              newUserForm.get('employeeNumber').hasError('employeeNumberIsTaken'))\\n          }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Matricule\\\" formControlName=\\\"employeeNumber\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n            newUserForm.get('employeeNumber').touched &&\\n            newUserForm.get('employeeNumber').hasError('required')\\n          \\\">\\n      Le matricule est requis\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"newUserForm.get('employeeNumber').hasError('employeeNumberIsTaken') && newUserForm.get('employeeNumber').touched\\\">Ce matricule est déjà pris</div>\\n    <div *ngIf=\\\"newUserForm.get('employeeNumber').pending\\\">\\n      <img src=\\\"https://loading.io/spinners/double-ring/lg.double-ring-spinner.gif\\\" width=\\\"50px\\\" alt=\\\"\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"email\\\">Email: </label>\\n    <input [ngClass]=\\\"{\\n            'is-invalid':\\n            (newUserForm.get('email')?.errors &&\\n            newUserForm.get('email').touched) ||\\n            (newUserForm.get('email').touched &&\\n            newUserForm.get('email').hasError('email')) ||\\n            (newUserForm.get('email').touched &&\\n            newUserForm.get('email').hasError('emailIsTaken'))\\n          }\\\" type=\\\"text\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"newUserForm.get('email').hasError('required') && newUserForm.get('email').touched\\\">Email est requis</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"newUserForm.get('email').hasError('email') && newUserForm.get('email').touched\\\">Email est invalide</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"newUserForm.get('email').hasError('emailIsTaken') && newUserForm.get('email').touched\\\">Cet email est déjà pris</div>\\n    <div *ngIf=\\\"newUserForm.get('email').pending\\\">\\n      <img src=\\\"https://loading.io/spinners/double-ring/lg.double-ring-spinner.gif\\\" width=\\\"50px\\\" alt=\\\"\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"firstName\\\">Prénom: </label>\\n    <input [ngClass]=\\\"{\\n          'is-invalid':\\n            newUserForm.get('firstName')?.errors &&\\n            newUserForm.get('firstName').touched\\n        }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Prénom\\\" formControlName=\\\"firstName\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n          newUserForm.get('firstName').touched &&\\n          newUserForm.get('firstName').hasError('required')\\n        \\\">\\n      Le prénom est requis\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"lastName\\\">Nom: </label>\\n    <input [ngClass]=\\\"{\\n            'is-invalid':\\n              newUserForm.get('lastName')?.errors &&\\n              newUserForm.get('lastName').touched\\n          }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Nom\\\" formControlName=\\\"lastName\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n            newUserForm.get('lastName').touched &&\\n            newUserForm.get('lastName').hasError('required')\\n          \\\">\\n      Nom est requis\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"title\\\">Fonction: </label>\\n    <input [ngClass]=\\\"{\\n              'is-invalid':\\n                newUserForm.get('title')?.errors &&\\n                newUserForm.get('title').touched\\n            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Fonction\\\" formControlName=\\\"title\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n              newUserForm.get('title').touched &&\\n              newUserForm.get('title').hasError('required')\\n            \\\">\\n      Fonction est requise\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"userStatusId\\\">Statut: </label>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"userStatusId\\\" formControlName=\\\"userStatusId\\\">\\n      <option [ngValue]=\\\"null\\\" disabled>Choisissez un statut</option>\\n      <option *ngFor=\\\"let us of userStatusList\\\" [ngValue]=\\\"us.id\\\">\\n        {{ us.name }}\\n      </option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"departmentId\\\">Direction: </label>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"departmentId\\\" formControlName=\\\"departmentId\\\">\\n      <option [ngValue]=\\\"null\\\" disabled>Choisissez une direction</option>\\n      <option *ngFor=\\\"let dpt of departmentList\\\" [ngValue]=\\\"dpt.id\\\">\\n        {{ dpt.name }}\\n      </option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group required\\\">\\n    <label class='control-label' for=\\\"recruitmentDate\\\">Date de recrutement: </label>\\n    <input [ngClass]=\\\"{\\n            'is-invalid':\\n              newUserForm.get('recruitmentDate')?.errors &&\\n              newUserForm.get('recruitmentDate').touched\\n          }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Date de recrutement\\\" id=\\\"recruitmentDate\\\" formControlName=\\\"recruitmentDate\\\"\\n      type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\" />\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n            newUserForm.get('recruitmentDate').touched &&\\n            newUserForm.get('recruitmentDate').hasError('required')\\n          \\\">\\n      Date de recrutement est requise\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [checked]=\\\"notifyUser\\\" (change)=\\\"notifyUser = !notifyUser\\\">\\n    <h6>Avertir l'utilisateur par email pour changer le mot de passe par défaut (\\n      <b>Password123</b>)</h6>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"float-right\\\">\\n      <button class=\\\"btn btn-success mr-2\\\" type=\\\"submit\\\" [disabled]=\\\"!newUserForm.valid || !newUserForm.dirty\\\">\\n        Soumettre\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n        Annuler\\n      </button>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  AbstractControl\n} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { AdminService } from './../../_services/admin.service';\nimport { User } from '../../_models/user';\nimport { Department } from '../../_models/department';\nimport { UserStatus } from './../../_models/userStatus';\n\n@Component({\n  selector: 'app-collaborator-new',\n  templateUrl: './collaborator-new.component.html',\n  styleUrls: ['./collaborator-new.component.css']\n})\nexport class CollaboratorNewComponent implements OnInit {\n  @Input() departmentList: Department[] = [];\n  @Input() userStatusList: UserStatus[] = [];\n  @Output() cancelRegister = new EventEmitter();\n  @Output() switchOffRegister = new EventEmitter();\n  newUser: User;\n  newUserForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  notifyUser: boolean = false;\n  loading = false;\n\n  constructor(private fb: FormBuilder, private adminService: AdminService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'YYYY-MM-DD'\n    };\n    this.createUserForm();\n  }\n\n  createUserForm() {\n    this.newUserForm = this.fb.group(\n      {\n        employeeNumber: ['', Validators.required, this.checkValidEmployeeNumber.bind(this)],\n        email: ['', [Validators.required, Validators.email], this.checkValidEmail.bind(this)],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        title: ['', Validators.required],\n        userStatusId: [null, [Validators.required]],\n        departmentId: [null, [Validators.required]],\n        recruitmentDate: [null, Validators.required]\n      });\n  }\n\n  checkValidEmployeeNumber(control: AbstractControl) {\n    return new Promise((resolve, reject) => {\n      this.adminService.employeeNumberAlreadyExists(control.value).subscribe(result => {\n        if (result) {\n          resolve({ employeeNumberIsTaken: true })\n        } else {\n          resolve(null)\n        }\n      },\n        error => {\n\n          this.alertify.error(error);\n          resolve(null)\n        })\n    });\n  }\n\n  checkValidEmail(control: AbstractControl) {\n    return new Promise((resolve, reject) => {\n\n      this.adminService.emailAlreadyExists(control.value).subscribe(result => {\n        if (result) {\n          resolve({ emailIsTaken: true })\n        } else {\n          resolve(null)\n        }\n      },\n        error => {\n          this.alertify.error(error);\n          resolve(null)\n        })\n    });\n  }\n\n  createUser() {\n    this.loading = true;\n    if (this.newUserForm.valid) {\n      this.newUser = Object.assign({}, this.newUserForm.value);\n      this.adminService.createUser(this.notifyUser, this.newUser).subscribe(\n        next => {\n          this.loading = false;\n          this.alertify.success('Utilisateur créé avec succès');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => {\n          this.switchOffRegister.emit(true);\n        }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"card mt-2 mb-2\\\">\\n    <div class=\\\"card-header\\\">\\n      <form #searchForm=\\\"ngForm\\\" (ngSubmit)=\\\"searchUsers()\\\" class=\\\"form-inline\\\">\\n        <div class=\\\"form-group\\\">\\n          <input name=\\\"searchTerm\\\" [(ngModel)]=\\\"searchTerm.userToSearch\\\" type=\\\"text\\\" class=\\\"form-control mr-2\\\" placeholder=\\\"Tous les utilisateurs\\\"\\n          />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <select class=\\\"form-control mr-2\\\" name=\\\"userStatus\\\" [(ngModel)]=\\\"searchTerm.userStatusId\\\">\\n            <option [ngValue]=\\\"0\\\" disabled selected>Tous les statuts</option>\\n            <option *ngFor=\\\"let us of userStatusList\\\" [ngValue]=\\\"us.id\\\">\\n              {{ us.name }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group float-right\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-2\\\">Chercher</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetSearch()\\\">Réinitialiser</button>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"float-right mb-1\\\">\\n        <button class=\\\"btn btn-info mr-2\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"executeAction()\\\" [disabled]=\\\"disableAction()\\\">\\n          {{actionLabel}}\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n      </div>\\n\\n      <table *ngIf=\\\"users?.length > 0\\\" class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 5%\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"selectAll()\\\" [checked]=\\\"selectedAll\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\n              title=\\\"Tout sélectionner/désélectionner\\\">\\n          </th>\\n          <th style=\\\"width: 20%\\\">Prénom</th>\\n          <th style=\\\"width: 20%\\\">Nom</th>\\n          <th style=\\\"width: 15%\\\">Statut</th>\\n          <th style=\\\"width: 20%\\\">Direction</th>\\n          <th style=\\\"width: 20%\\\">Derniere fiche d'évaluation</th>\\n        </tr>\\n        <tr *ngFor=\\\"let user of users\\\">\\n          <td>\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"{{user.id}}\\\" [(ngModel)]=\\\"user.selected\\\" (change)=\\\"checkIfAllSelected()\\\">\\n          </td>\\n          <td>{{ user.firstName }}</td>\\n          <td>{{ user.lastName }}</td>\\n          <td>{{user.userStatus.name}}</td>\\n          <td>{{ user.department.name }}</td>\\n          <td>{{ user.lastEvaluationFile }}</td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { User } from '../../_models/user';\nimport { AdminService } from '../../_services/admin.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { Evaluator } from '../../_models/evaluator';\nimport { UserStatus } from '../../_models/userStatus';\n\n@Component({\n  selector: 'app-collaborator-search',\n  templateUrl: './collaborator-search.component.html',\n  styleUrls: ['./collaborator-search.component.css']\n})\nexport class CollaboratorSearchComponent implements OnInit {\n  @Input() actionLabel: string;\n  @Input() userStatusList: UserStatus[] = [];\n  @Output() actionEvent = new EventEmitter<User[]>();\n  users: any;\n  searchTerm: { userToSearch: string, userStatusId: number };\n  loading = false;\n  selectedAll: any;\n  selectedUsers: User[] = [];\n\n  constructor(private adminService: AdminService, public bsModalRef: BsModalRef, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.searchTerm = { userToSearch: '', userStatusId: 0 };\n  }\n\n  selectAll() {\n    this.selectedAll = !this.selectedAll;\n    for (var i = 0; i < this.users.length; i++) {\n      this.users[i].selected = this.selectedAll;\n    }\n  }\n\n  checkIfAllSelected() {\n    var totalSelected = 0;\n    for (var i = 0; i < this.users.length; i++) {\n      if (this.users[i].selected) totalSelected++;\n    }\n    this.selectedAll = totalSelected === this.users.length;\n\n    return true;\n  }\n\n  resetSearch() {\n    this.searchTerm = { userToSearch: '', userStatusId: 0 };\n    this.users = [];\n  }\n\n  searchUsers() {\n    this.loading = true;\n    this.adminService.searchUsers(this.searchTerm).subscribe(users => {\n      this.users = users;\n      this.loading = false;\n      if (this.users.length === 0) {\n        this.alertify.error(`Aucun utilisateur trouver!`);\n      }\n    },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  executeAction() {\n    this.selectedUsers = [];\n    let selectedUser = {} as User;\n    for (var i = 0; i < this.users.length; i++) {\n      if (this.users[i].selected) {\n        selectedUser = Object.assign({}, this.users[i])\n        this.selectedUsers.push(selectedUser);\n      }\n    }\n    this.actionEvent.emit(this.selectedUsers);\n    this.bsModalRef.hide();\n  }\n\n  disableAction() {\n    if (this.users === undefined) return true;\n    for (var i = 0; i < this.users.length; i++) {\n      if (this.users[i].selected) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","module.exports = \".panel-body {\\n  overflow-y: scroll;\\n  height: 500px;\\n}\\n\"","module.exports = \"<accordion>\\n  <accordion-group heading=\\\"Évaluateurs\\\" isOpen=\\\"true\\\">\\n    <button class=\\\"btn btn-secondary w-60 mr-1\\\" (click)=\\\"openModalForEvaluators()\\\">\\n      Assigner évaluateurs\\n    </button>\\n    <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"evaluators?.length === 0\\\">\\n      Aucun évaluateur n'a été affecté à {{evaluated.firstName}} {{evaluated.lastName}}!\\n    </div>\\n\\n    <div class=\\\"card mt-3\\\" *ngIf=\\\"evaluators?.length > 0\\\">\\n      <div class=\\\"card-header\\\">\\n        Les évaluateurs assignés à {{evaluated.firstName}} {{evaluated.lastName}}:\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <ul>\\n          <li class=\\\"list-inline-item\\\" *ngFor=\\\"let evaluator of evaluators\\\">\\n            <app-evaluator [evaluator]=\\\"evaluator\\\" (deleteEvaluatorEvent)=\\\"handleDeleteEvaluator($event)\\\" (updateRankOfEvaluatorEvent)=\\\"handleUpdateRankOfEvaluator($event)\\\"></app-evaluator>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </accordion-group>\\n  <accordion-group heading=\\\"Évalués\\\">\\n    <button class=\\\"btn btn-secondary w-60 mr-1\\\" (click)=\\\"openModalForEvaluatees()\\\">\\n      Assigner évalués\\n    </button>\\n    <div class=\\\"alert alert-info mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"evaluatees?.length === 0\\\">\\n      Aucun évalué n'a été affecté à {{evaluated.firstName}} {{evaluated.lastName}}!\\n    </div>\\n\\n    <div class=\\\"card mt-3\\\" *ngIf=\\\"evaluatees?.length > 0\\\">\\n      <div class=\\\"card-header\\\">\\n        Les évalués assignés à {{evaluated.firstName}} {{evaluated.lastName}}:\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n          <tr>\\n            <th style=\\\"width: 30%\\\">Nom</th>\\n            <th style=\\\"width: 35%\\\">Fonction</th>\\n            <th style=\\\"width: 30%\\\">Direction</th>\\n            <th style=\\\"width: 5%\\\"></th>\\n          </tr>\\n          <tr *ngFor=\\\"let evaluatee of evaluatees\\\">\\n            <td>{{ evaluatee.fullName }}</td>\\n            <td>{{ evaluatee.title }}</td>\\n            <td>{{ evaluatee.departmentName }}</td>\\n            <td>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteEvaluatee(evaluatee)\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n\\n  </accordion-group>\\n</accordion>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { User } from '../../_models/user';\nimport { UserStatus } from '../../_models/userStatus';\nimport { AdminService } from '../../_services/admin.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { Evaluator } from '../../_models/evaluator';\nimport { CollaboratorSearchComponent } from '../collaborator-search/collaborator-search.component';\n\n@Component({\n  selector: 'app-evaluator-assignment',\n  templateUrl: './evaluator-assignment.component.html',\n  styleUrls: ['./evaluator-assignment.component.css']\n})\nexport class EvaluatorAssignmentComponent implements OnInit {\n  @Input() evaluated: User;\n  evaluators: Evaluator[];\n  evaluatees: Evaluator[];\n  loading = false;\n  bsModalRef: BsModalRef;\n  userStatusList: UserStatus[];\n\n  constructor(private modalService: BsModalService, private adminService: AdminService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.getUserStatus();\n    this.loadEvaluators();\n    this.loadEvaluatees();\n  }\n\n  getUserStatus() {\n    if (localStorage.getItem('userStatusList')) {\n      this.userStatusList = JSON.parse(localStorage.getItem('userStatusList'))\n    } else {\n      this.loading = true;\n      this.adminService.getUserStatus().subscribe(\n        (result: UserStatus[]) => {\n          this.loading = false;\n          this.userStatusList = result\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n    }\n  }\n\n  openModalForEvaluators() {\n    const initialState = {\n      userStatusList: this.userStatusList,\n      actionLabel: 'Assigner comme évaluateur'\n    };\n    this.bsModalRef = this.modalService.show(CollaboratorSearchComponent, { initialState, class: 'modal-lg' });\n    this.bsModalRef.content.actionEvent.subscribe((users) => {\n      this.loading = true;\n      let userIds = users.map(u => u.id);\n      this.adminService.addEvaluatorToUser(this.evaluated.id, userIds)\n        .subscribe(\n          () => {\n            this.loading = false;\n            this.loadEvaluators();\n            this.alertify.success('Les évaluateurs ont été ajoutés avec succès');\n          },\n          error => {\n            this.loading = false;\n            this.alertify.error(error);\n          }\n        );\n    });\n  }\n\n  openModalForEvaluatees() {\n    const initialState = {\n      userStatusList: this.userStatusList,\n      actionLabel: 'Assigner comme évalué'\n    };\n    this.bsModalRef = this.modalService.show(CollaboratorSearchComponent, { initialState, class: 'modal-lg' });\n    this.bsModalRef.content.actionEvent.subscribe((users) => {\n      this.loading = true;\n      let userIds = users.map(u => u.id);\n      this.adminService.addEvaluateeToUser(this.evaluated.id, userIds)\n        .subscribe(\n          () => {\n            this.loading = false;\n            this.loadEvaluatees();\n            this.alertify.success('Les évalués ont été ajoutés avec succès');\n          },\n          error => {\n            this.loading = false;\n            this.alertify.error(error);\n          }\n        );\n    });\n  }\n\n  handleUpdateRankOfEvaluator(event: Evaluator) {\n    this.loading = true;\n    this.adminService.updateRankOfEvaluator(this.evaluated.id, event.id, event.rank)\n      .subscribe(\n        next => {\n          this.loading = false;\n          this.alertify.success('Mise à jour du rang réussie');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  loadEvaluators() {\n    this.loading = true;\n    this.adminService.loadEvaluators(this.evaluated.id)\n      .subscribe(\n        (evaluators: Evaluator[]) => {\n          this.loading = false;\n          this.evaluators = evaluators;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  loadEvaluatees() {\n    this.loading = true;\n    this.adminService.loadEvaluatees(this.evaluated.id)\n      .subscribe(\n        (evaluatees: Evaluator[]) => {\n          this.loading = false;\n          this.evaluatees = evaluatees;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  handleDeleteEvaluator(event: Evaluator) {\n    this.alertify.confirm(\n      `Etes-vous sûr de vouloir supprimer l'évaluateur ${event.fullName}?`,\n      () => {\n        this.loading = true;\n        this.adminService\n          .deleteEvaluator(event.id, this.evaluated.id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.loadEvaluators();\n              this.alertify.success('L\\'évaluateur a été supprimé.');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Échec de la suppression d\\'évaluateur.');\n            }\n          );\n      }\n    );\n  }\n\n  deleteEvaluatee(evaluatee: Evaluator) {\n    this.alertify.confirm(\n      `Etes-vous sûr de vouloir supprimer l'évalué ${evaluatee.fullName}?`,\n      () => {\n        this.loading = true;\n        this.adminService\n          .deleteEvaluatee(evaluatee.id, this.evaluated.id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.loadEvaluatees();\n              this.alertify.success('L\\'évalué a été supprimé.');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Échec de la suppression d\\'évalué.');\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-center\\\" style=\\\"width: 15rem;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      {{ evaluator.fullName }}\\n    </h6>\\n    <p class=\\\"text-muted\\\">{{ evaluator.title }}</p>\\n    <p class=\\\"text-muted\\\">{{ evaluator.departmentName }}</p>\\n    <p *ngIf=\\\"!editing\\\" class=\\\"card-text text-center\\\">\\n      Rang d'évaluateur:\\n      <span class=\\\"badge badge-success\\\">{{ evaluator.rank }}</span>\\n    </p>\\n    <div *ngIf=\\\"editing\\\" class=\\\"mb-2\\\">\\n      <label>Rang d'évaluateur:</label>\\n      <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" [value]=\\\"evaluator.rank\\\" (input)=\\\"onRankChange(rank.value)\\\" #rank>\\n    </div>\\n    <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"editing ? 'btn-success' : 'btn-info'\\\" (click)=\\\"toggleEdit()\\\">\\n      <i *ngIf=\\\"editing\\\" class=\\\"fa fa-save\\\"></i>\\n      <i *ngIf=\\\"!editing\\\" class=\\\"fa fa-edit\\\"></i>\\n    </button>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteEvaluator()\\\">\\n      <i class=\\\"fa fa-trash\\\"></i>\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Evaluator } from '../../_models/evaluator';\n\n@Component({\n  selector: 'app-evaluator',\n  templateUrl: './evaluator.component.html',\n  styleUrls: ['./evaluator.component.css']\n})\nexport class EvaluatorComponent implements OnInit {\n  @Input() evaluator: Evaluator;\n  @Output() updateRankOfEvaluatorEvent = new EventEmitter<Evaluator>()\n  @Output() deleteEvaluatorEvent = new EventEmitter<Evaluator>()\n  editing: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onRankChange(value: number) {\n    this.evaluator.rank = value;\n  }\n\n  toggleEdit() {\n    if (this.editing) {\n      this.updateRankOfEvaluatorEvent.emit(this.evaluator);\n    }\n    this.editing = !this.editing;\n  }\n\n  deleteEvaluator() {\n    this.deleteEvaluatorEvent.emit(this.evaluator);\n  }\n}\n","module.exports = \".user_card {\\n  height: 400px;\\n  width: 550px;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n  background: #E95420;\\n  position: relative;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  padding: 10px;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  border-radius: 5px;\\n}\\n\\n.brand_logo_container {\\n  position: absolute;\\n  height: 170px;\\n  width: 170px;\\n  top: -75px;\\n  border-radius: 50%;\\n  background: #c34113;\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.brand_logo {\\n  height: 150px;\\n  width: 150px;\\n  border-radius: 50%;\\n  border: 2px solid white;\\n}\\n\\n.header {\\n  margin-top: 50px;\\n}\\n\\n.form_container {\\n  margin-top: 10px;\\n}\\n\\n.login_container {\\n  padding: 0 2rem;\\n  color: white !important;\\n}\\n\\n.input-group-text {\\n  background: #c34113 !important;\\n  color: white !important;\\n  border: 0 !important;\\n  border-radius: 0.25rem 0 0 0.25rem !important;\\n  margin-right: 5px;\\n  width: 60px;\\n}\\n\\n.input_user,\\n.input_pass:focus {\\n  box-shadow: none !important;\\n  outline: 0px !important;\\n}\\n\\n.links a {\\n  color: #fff !important;\\n}\\n\\nh3 {\\n  color: #fff !important;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"container h-100\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n      <div class=\\\"user_card\\\">\\n        <div class=\\\"d-flex justify-content-center\\\">\\n          <div class=\\\"brand_logo_container\\\">\\n            <img src=\\\"../../assets/logo.png\\\" class=\\\"brand_logo\\\" height=\\\"\\\" alt=\\\"Logo\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"header\\\">\\n          <h3>Demande de réinitialisation de password</h3>\\n        </div>\\n\\n        <div class=\\\"d-flex justify-content-center form_container\\\">\\n          <form #forgetPasswordForm=\\\"ngForm\\\" (ngSubmit)=\\\"requestResetPassword()\\\">\\n            <div class=\\\"input-group mb-2\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <label>Email:</label>\\n                </span>\\n              </div>\\n              <input class=\\\"form-control input_user\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.email\\\" required name=\\\"email\\\">\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"!forgetPasswordForm.valid\\\" class=\\\"btn btn-success btn-lg\\\">Obtenir le lien de réinitialisation</button>\\n            </div>\\n          </form>\\n        </div>\\n\\n        <div class=\\\"mt-4\\\">\\n          <div class=\\\"d-flex justify-content-center links\\\">\\n            <a [routerLink]=\\\"['/home']\\\">Retour à la page d'accueil</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  model: any = {};\n  loading = false;\n\n  constructor(private router: Router, private authService: AuthService, private alertify: AlertifyService, ) { }\n\n  ngOnInit() {\n  }\n\n  requestResetPassword() {\n    this.loading = true;\n    this.authService.requestResetPassword(this.model).subscribe(\n      next => {\n        this.loading = false;\n        this.alertify.success('Demande est faite avec succèes');\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate(['/home']);\n      }\n    );\n  }\n\n}\n","module.exports = \"img.img-thumbnail {\\n  height: 100px;\\n  min-width: 100ox !important;\\n  margin-bottom: 2px;\\n}\\n\\n.nv-file-over {\\n  border: dotted 3px red;\\n}\\n\\ninput[type='file'] {\\n  color: transparent;\\n}\\n\\n.not-approved {\\n  opacity: 0.2;\\n}\\n\\n.img-wrapper {\\n  position: relative;\\n}\\n\\n.img-text {\\n  position: absolute;\\n  bottom: 30%;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2 img-wrapper\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{ photo.url }}\\\" class=\\\"img-thumbnail p1\\\" alt=\\\"\\\" [ngClass]=\\\"!photo.isApproved && 'not-approved'\\\" />\\n    <div class=\\\"text-center img-text\\\" *ngIf=\\\"!photo.isApproved\\\">\\n      <span class=\\\"text-danger\\\">Awaiting approval</span>\\n    </div>\\n\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" (click)=\\\"setMainPhoto(photo)\\\" [disabled]=\\\"photo.isMain || !photo.isApproved\\\"\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\">\\n        <i class=\\\"fa fa-home\\\"></i>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deletePhoto(photo.id)\\\" [disabled]=\\\"photo.isMain\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"photos.length < 2\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <h5>Ajouter maximum 2 photos</h5>\\n\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n    <h3>File d'attente de téléchargement</h3>\\n    <p>Longueur de la file d'attente: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Nom</th>\\n          <th>Taille</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td>\\n            <strong>{{ item?.file?.name }}</strong>\\n          </td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>\\n            {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Progression de la file d'attente:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ width: uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s  mr-1\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Télécharger\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s  mr-1\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Annuler\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Retirer\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from '../../_models/photo';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from './../../_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n  loading = false;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertifyService: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'users/' +\n        this.authService.decodedToken.nameid +\n        '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n          isApproved: res.isApproved\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        }\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response, status, headers) => {\n      this.alertifyService.error(response);\n    }\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.loading = true;\n    this.userService\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.loading = false;\n          this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n          this.currentMain.isMain = false;\n          photo.isMain = true;\n          //this.getMemberPhotoChange.emit(photo.url);\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        },\n        error => {\n          this.loading = false;\n          this.alertifyService.error(error);\n        }\n      );\n  }\n\n  deletePhoto(id: number) {\n    this.alertifyService.confirm(\n      'Etes-vous sûr de vouloir supprimer cette photo?',\n      () => {\n        this.loading = true;\n        this.userService\n          .deletePhoto(this.authService.decodedToken.nameid, id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n              this.alertifyService.success('La photo a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertifyService.error('Échec de la suppression de la photo');\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \".img-thumbnail {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body {\\n  padding: 0 25px;\\n}\\n\\n.card-footer {\\n  padding: 10px 15ps;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <h1>Votre profil</h1>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n        <p>\\n          <strong>Information:</strong>\\n          Vous avez apporté des modifications. Toute modification non enregistrée sera perdue!\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{ photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{ user.lastName }}\\\" />\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Nom complet:</strong>\\n            <p>{{ user.firstName }} {{user.lastName}}</p>\\n            <strong>Direction:</strong>\\n            <p>{{ user.department.name }}</p>\\n          </div>\\n          <div>\\n            <strong>Dernière visite:</strong>\\n            <p>{{ user.lastActive | timeAgo }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-success w-80 mr-5\\\" [disabled]=\\\"!editForm.dirty || editForm.invalid\\\" form=\\\"editForm\\\">\\n            Sauvegarder\\n          </button>\\n          <button class=\\\"btn btn-primary w-60\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n            Annuler\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Editer Profile\\\">\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n              <h4>Prénom:</h4>\\n              <input type=\\\"text\\\" name=\\\"firstName\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': firstName.invalid }\\\" required/>\\n              <div *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"firstName.errors.required\\\">Le prénom est requis.</div>\\n              </div>\\n\\n              <h4>Nom:</h4>\\n              <input type=\\\"text\\\" name=\\\"lastName\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': lastName.invalid }\\\" required/>\\n              <div *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"lastName.errors.required\\\">Le nom est requis.</div>\\n              </div>\\n              \\n              <h4>Fonction:</h4>\\n              <input type=\\\"text\\\" name=\\\"title\\\" rows=\\\"6\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.title\\\" #title=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': title.invalid }\\\" required/>\\n              <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"title.errors.required\\\">La fonction est requise.</div>\\n              </div>\\n\\n              <hr />\\n              <h4>Matricule:</h4>\\n              <p>{{ user.employeeNumber }}</p>\\n              <h4>Email:</h4>\\n              <p>{{ user.email }}</p>\\n              <h4>Date de recrutement:</h4>\\n              <p>{{ user.recruitmentDate | date: 'mediumDate'}}</p>\\n            </form>\\n          </tab>\\n          <tab heading=\\\"Editer Photos\\\">\\n            <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { User } from '../../_models/user';\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n  loading = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(\n      photoUrl => (this.photoUrl = photoUrl)\n    );\n  }\n\n  updateUser() {\n    this.loading = true;\n    this.userService\n      .updateProfile(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.loading = false;\n          this.alertify.success('Mise à jour du profil réussie');\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n  cancel() {\n    this.router.navigate(['/home']);\n  }\n}\n","module.exports = \".user_card {\\n  height: 500px;\\n  width: 500px;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n  background: #E95420;\\n  position: relative;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  padding: 10px;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  border-radius: 5px;\\n}\\n\\n.brand_logo_container {\\n  position: absolute;\\n  height: 170px;\\n  width: 170px;\\n  top: -75px;\\n  border-radius: 50%;\\n  background: #c34113;\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.brand_logo {\\n  height: 150px;\\n  width: 150px;\\n  border-radius: 50%;\\n  border: 2px solid white;\\n}\\n\\n.header {\\n  margin-top: 50px;\\n}\\n\\n.form_container {\\n  margin-top: 10px;\\n}\\n\\n.login_container {\\n  padding: 0 2rem;\\n  color: white !important;\\n}\\n\\n.input-group-text {\\n  background: #c34113 !important;\\n  color: white !important;\\n  border: 0 !important;\\n  border-radius: 0.25rem 0 0 0.25rem !important;\\n  margin-right: 5px;\\n  width: 200px;\\n}\\n\\n.input_user,\\n.input_pass:focus {\\n  box-shadow: none !important;\\n  outline: 0px !important;\\n}\\n\\n.links a {\\n  color: #fff !important;\\n}\\n\\nh3 {\\n  color: #fff !important;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"container h-100\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n      <div class=\\\"user_card\\\">\\n        <div class=\\\"d-flex justify-content-center\\\">\\n          <div class=\\\"brand_logo_container\\\">\\n            <img src=\\\"../../assets/logo.png\\\" class=\\\"brand_logo\\\" height=\\\"\\\" alt=\\\"Logo\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"header\\\">\\n          <h3>Réinitialisation de votre mot de passe</h3>\\n        </div>\\n\\n        <div class=\\\"d-flex justify-content-center form_container\\\">\\n          <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"resetPassword()\\\">\\n            <div class=\\\"input-group mb-2\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <label>Nouveau Password:</label>\\n                </span>\\n              </div>\\n              <input [ngClass]=\\\"{\\n        'is-invalid':\\n          resetPasswordForm.get('password').errors &&\\n          resetPasswordForm.get('password').touched\\n      }\\\" type=\\\"password\\\" class=\\\"form-control input_pass\\\" [(ngModel)]=\\\"model.newPassword\\\" formControlName=\\\"password\\\" />\\n              <div class=\\\"input-group-text\\\" *ngIf=\\\"\\n        resetPasswordForm.get('password').hasError('required') &&\\n        resetPasswordForm.get('password').touched\\n      \\\">\\n                Password is required\\n              </div>\\n              <div class=\\\"input-group-text\\\" *ngIf=\\\"\\n        resetPasswordForm.get('password').hasError('minlength') &&\\n        resetPasswordForm.get('password').touched\\n      \\\">\\n                Password must be at least 4 characters\\n              </div>\\n              <div class=\\\"input-group-text\\\" *ngIf=\\\"\\n        resetPasswordForm.get('password').hasError('maxlength') &&\\n        resetPasswordForm.get('password').touched\\n      \\\">\\n                Password cannot exceed 8 characters\\n              </div>\\n            </div>\\n            <div class=\\\"input-group mb-2\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <label>Confirmez Password:</label>\\n                </span>\\n              </div>\\n              <input [ngClass]=\\\"{\\n        'is-invalid':\\n          (resetPasswordForm.get('confirmPassword').errors &&\\n            resetPasswordForm.get('confirmPassword').touched) ||\\n          (resetPasswordForm.get('confirmPassword').touched &&\\n            resetPasswordForm.hasError('mismatch'))\\n      }\\\" type=\\\"password\\\" class=\\\"form-control input_pass\\\" [(ngModel)]=\\\"model.confirmNewPassword\\\" formControlName=\\\"confirmPassword\\\"\\n              />\\n              <div class=\\\"input-group-text\\\" *ngIf=\\\"\\n        resetPasswordForm.get('confirmPassword').hasError('required') &&\\n        resetPasswordForm.get('confirmPassword').touched\\n      \\\">\\n                Password is required\\n              </div>\\n              <div class=\\\"input-group-text\\\" *ngIf=\\\"\\n        resetPasswordForm.hasError('mismatch') &&\\n        resetPasswordForm.get('confirmPassword').touched\\n      \\\">\\n                Password must match\\n              </div>\\n            </div>\\n            <div class=\\\"input-group mb-2\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <label>Jeton de retour:</label>\\n                </span>\\n              </div>\\n              <input class=\\\"form-control input_user\\\" type=\\\"text\\\" [(ngModel)]=\\\"model.token\\\" formControlName=\\\"token\\\">\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"!resetPasswordForm.valid \\\" class=\\\"btn btn-success btn-lg\\\">Créer</button>\\n            </div>\\n          </form>\\n        </div>\\n\\n        <div class=\\\"mt-4\\\">\\n          <div class=\\\"d-flex justify-content-center links\\\">\\n            <a [routerLink]=\\\"['/home']\\\">Retour à la page d'accueil</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\n\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  model: any = {};\n  resetPasswordForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private authService: AuthService,\n    private alertify: AlertifyService, ) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.model.token = params['token'];\n      this.model.email = params['email']\n    });\n\n    this.createResetPasswordForm();\n  }\n\n  createResetPasswordForm() {\n    this.resetPasswordForm = this.fb.group(\n      {\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(24)\n          ]\n        ],\n        confirmPassword: ['', Validators.required],\n        token: ['', Validators.required]\n      },\n      { validator: this.passwordMatchValidator }\n    );\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value\n      ? null\n      : { mismatch: true };\n  }\n\n  resetPassword() {\n    this.loading = true;\n    this.authService.resetPassword(this.model).subscribe(\n      next => {\n        this.loading = false;\n        this.alertify.success('Réinitialisation avec succès');\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate(['/home']);\n      }\n    );\n  }\n\n\n}\n","module.exports = \".user_card {\\n  height: 400px;\\n  width: 350px;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n  background: #E95420;\\n  position: relative;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  padding: 10px;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  border-radius: 5px;\\n}\\n\\n.brand_logo_container {\\n  position: absolute;\\n  height: 170px;\\n  width: 170px;\\n  top: -75px;\\n  border-radius: 50%;\\n  background: #c34113;\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.brand_logo {\\n  height: 150px;\\n  width: 150px;\\n  border-radius: 50%;\\n  border: 2px solid white;\\n}\\n\\n.form_container {\\n  margin-top: 100px;\\n}\\n\\n.login_container {\\n  padding: 0 2rem;\\n  color: white !important;\\n}\\n\\n.input-group-text {\\n  background: #c34113 !important;\\n  color: white !important;\\n  border: 0 !important;\\n  border-radius: 0.25rem 0 0 0.25rem !important;\\n}\\n\\n.input_user,\\n.input_pass:focus {\\n  box-shadow: none !important;\\n  outline: 0px !important;\\n}\\n\\n.links a {\\n  color: #fff !important;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"loggedIn()\\\" style=\\\"text-align: center\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h1>Sothema Goal Management</h1>\\n        <p class=\\\"lead\\\">\\n          Bienvenue à Sothema Goal Management Application!\\n        </p>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <ul class=\\\"list-inline member-icons animate text-center\\\">\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Donec adipiscing tristique risus nec feugiat. Eget nunc scelerisque viverra mauris in. Tellus molestie nunc non blandit massa\\n                  enim nec dui nunc. Elit eget gravida cum sociis. Congue eu consequat ac felis donec et.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Euismod lacinia at quis risus sed vulputate odio ut\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Porttitor lacus luctus accumsan tortor posuere ac ut consequat. Sit amet dictum sit amet justo donec. Leo in vitae turpis\\n                  massa sed elementum.Quis viverra nibh cras pulvinar mattis nunc sed.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Euismod lacinia at quis risus sed vulputate odio ut\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Porttitor lacus luctus accumsan tortor posuere ac ut consequat. Sit amet dictum sit amet justo donec. Leo in vitae turpis\\n                  massa sed elementum.Quis viverra nibh cras pulvinar mattis nunc sed.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Euismod lacinia at quis risus sed vulputate odio ut\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Porttitor lacus luctus accumsan tortor posuere ac ut consequat. Sit amet dictum sit amet justo donec. Leo in vitae turpis\\n                  massa sed elementum.Quis viverra nibh cras pulvinar mattis nunc sed.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Euismod lacinia at quis risus sed vulputate odio ut\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Porttitor lacus luctus accumsan tortor posuere ac ut consequat. Sit amet dictum sit amet justo donec. Leo in vitae turpis\\n                  massa sed elementum.Quis viverra nibh cras pulvinar mattis nunc sed.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n\\n          <li class=\\\"list-inline-item\\\">\\n            <div class=\\\"card text-center\\\" style=\\\"width: 20rem;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h6 class=\\\"card-title text-center mb-1\\\">\\n                  Magnis dis parturient montes nascetur ridiculus\\n                </h6>\\n                <p class=\\\"card-text text-muted text-center\\\">\\n                  Urna duis convallis convallis tellus. At volutpat diam ut venenatis tellus in metus vulputate. Augue lacus viverra vitae\\n                  congue eu. Lorem mollis aliquam ut porttitor leo a diam. Porta non pulvinar neque laoreet suspendisse.\\n                </p>\\n              </div>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n  <div *ngIf=\\\"!loggedIn()\\\" class=\\\"container h-100\\\">\\n    <div class=\\\"d-flex justify-content-center h-100\\\">\\n      <div class=\\\"user_card\\\">\\n        <div class=\\\"d-flex justify-content-center\\\">\\n          <div class=\\\"brand_logo_container\\\">\\n            <img src=\\\"../../assets/logo.png\\\" class=\\\"brand_logo\\\" height=\\\"\\\" alt=\\\"Logo\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-center form_container\\\">\\n          <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <i class=\\\"fa fa-user\\\"></i>\\n                </span>\\n              </div>\\n              <input class=\\\"form-control input_user\\\" type=\\\"text\\\" placeholder=\\\"Adresse Email\\\" [(ngModel)]=\\\"model.username\\\" required name=\\\"username\\\">\\n            </div>\\n            <div class=\\\"input-group mb-2\\\">\\n              <div class=\\\"input-group-append\\\">\\n                <span class=\\\"input-group-text\\\">\\n                  <i class=\\\"fa fa-key\\\"></i>\\n                </span>\\n              </div>\\n              <input class=\\\"form-control input_pass\\\" type=\\\"password\\\" placeholder=\\\"Mot de Passe\\\" [(ngModel)]=\\\"model.password\\\" required name=\\\"password\\\">\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mt-3 login_container\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success btn-lg\\\">Connecter</button>\\n            </div>\\n          </form>\\n        </div>\\n\\n        <div class=\\\"mt-4\\\">\\n          <div class=\\\"d-flex justify-content-center links\\\">\\n            <a [routerLink]=\\\"['/requestResetPassword']\\\">Mot de passe oublié?</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  model: any = {};\n  loading = false;\n\n  constructor(private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() { }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  login() {\n    this.loading = true;\n    this.authService.login(this.model).subscribe(\n      next => {\n        this.loading = false;\n        this.alertify.success('Connecté avec succès');\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      },\n      () => {\n        this.router.navigate(['']);\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Compétence Comportementale détail</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Compétence:</strong>\\n            <p>{{ behavioralSkill.skill }}</p>\\n          </div>\\n          <div>\\n            <strong>Définition:</strong>\\n            <p>{{ behavioralSkill.definition }}</p>\\n          </div>\\n          <div>\\n            <strong>Statut:</strong>\\n            <p>{{ behavioralSkill.status }}</p>\\n          </div>\\n          <div *ngIf=\\\"behavioralSkill.sealed\\\">\\n            <strong>Date scellée:</strong>\\n            <p>{{ behavioralSkill.sealedDate | date: 'mediumDate' }}</p>\\n          </div>\\n          <div>\\n            <strong>Auteur:</strong>\\n            <p>{{ behavioralSkill.createdByName }}</p>\\n          </div>\\n          <div>\\n            <strong>Créé:</strong>\\n            <p>{{ behavioralSkill.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-fles\\\">\\n            <button class=\\\"btn btn-success w-80 mr-1\\\" [routerLink]=\\\"['/hr']\\\" [queryParams]=\\\"{ tab: 1 }\\\">\\n              Retour au List\\n            </button>\\n            <button class=\\\"btn btn-secondary w-60 mr-1\\\" (click)=\\\"clone()\\\">\\n              Coloner\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\" *ngIf=\\\"!behavioralSkill.sealed\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"strategy-tabset\\\" #strategyTabs>\\n          <tab heading=\\\"Niveau 1\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{behavioralSkill.levelOne}}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Note: {{behavioralSkill.levelOneGrade}}</h6>\\n                <p class=\\\"card-text\\\">{{behavioralSkill.levelOneDescription}}</p>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Niveau 2\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{behavioralSkill.levelTwo}}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Note: {{behavioralSkill.levelTwoGrade}}</h6>\\n                <p class=\\\"card-text\\\">{{behavioralSkill.levelTwoDescription}}</p>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Niveau 3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{behavioralSkill.levelThree}}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Note: {{behavioralSkill.levelThreeGrade}}</h6>\\n                <p class=\\\"card-text\\\">{{behavioralSkill.levelThreeDescription}}</p>\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Niveau 4\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{behavioralSkill.levelFour}}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Note: {{behavioralSkill.levelFourGrade}}</h6>\\n                <p class=\\\"card-text\\\">{{behavioralSkill.levelFourDescription}}</p>\\n              </div>\\n            </div>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\nimport { HrService } from '../../../_services/hr.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { AuthService } from '../../../_services/auth.service';\n\n@Component({\n  selector: 'app-behavioral-skill-detail',\n  templateUrl: './behavioral-skill-detail.component.html',\n  styleUrls: ['./behavioral-skill-detail.component.css']\n})\nexport class BehavioralSkillDetailComponent implements OnInit {\n  behavioralSkill: BehavioralSkill;\n  loading: boolean = false;\n\n  constructor(private hrService: HrService, private authService: AuthService, private alertify: AlertifyService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.behavioralSkill = data['behavioralSkill'];\n    });\n  }\n\n  clone() {\n    this.loading = true;\n    this.hrService\n      .cloneBehavioralSkill(this.authService.decodedToken.nameid, this.behavioralSkill.id)\n      .subscribe(\n        () => {\n          this.loading = false;\n          this.alertify.success('La compétence a été clonée avec succès');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => {\n          this.router.navigate(['/hr'], { queryParams: { tab: 1 } });\n        }\n      );\n  }\n\n  delete() {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer cette compétence?',\n      () => {\n        this.loading = true;\n        this.hrService.deleteBehavioralSkill(this.behavioralSkill.id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.alertify.success('La compétence a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer la compétence: ' + error);\n            },\n            () => {\n              this.router.navigate(['/hr'], { queryParams: { tab: 1 } });\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title pull-left\\\">Modifier Compétence Comportementale</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #behavioralSkillForm=\\\"ngForm\\\" id=\\\"behavioralSkillForm\\\">\\n\\n    <h6>Compétence:</h6>\\n    <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.skill\\\" name=\\\"skill\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Compétence\\\"\\n    />\\n\\n\\n    <h6>Définition:</h6>\\n    <textarea [readonly]=\\\"isReadOnly\\\" rowa=\\\"3\\\" [(ngModel)]=\\\"behavioralSkill.definition\\\" name=\\\"definition\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n      placeholder=\\\"Definition\\\"></textarea>\\n\\n    <h6>Statut:</h6>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"behavioralSkill.status\\\" required [disabled]=\\\"isReadOnly\\\">\\n      <option *ngFor=\\\"let status of statusList\\\" [ngValue]=\\\"status\\\">\\n        {{ status }}\\n      </option>\\n    </select>\\n\\n    <accordion>\\n      <accordion-group heading=\\\"Niveau 1\\\" [isOpen]=\\\"isFirstOpen\\\">\\n        <div class=\\\"card-body\\\">\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelOne\\\" name=\\\"levelOne\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Niveau 1\\\"\\n          />\\n          <h6>Niveau 1 Note:</h6>\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelOneGrade\\\" name=\\\"levelOneGrade\\\" required type=\\\"number\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 1 Note\\\" />\\n\\n          <h6>Niveau 1 Description:</h6>\\n          <textarea [readonly]=\\\"isReadOnly\\\" rowa=\\\"3\\\" [(ngModel)]=\\\"behavioralSkill.levelOneDescription\\\" name=\\\"levelOneDescription\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 1 description\\\"></textarea>\\n        </div>\\n      </accordion-group>\\n      <accordion-group heading=\\\"Niveau 2\\\">\\n        <div class=\\\"card-body\\\">\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelTwo\\\" name=\\\"levelTwo\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Niveau 2\\\"\\n          />\\n          <h6>Niveau 2 Note:</h6>\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelTwoGrade\\\" name=\\\"levelTwoGrade\\\" required type=\\\"number\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 2 Note\\\" />\\n\\n          <h6>Niveau 2 Description:</h6>\\n          <textarea [readonly]=\\\"isReadOnly\\\" rowa=\\\"3\\\" [(ngModel)]=\\\"behavioralSkill.levelTwoDescription\\\" name=\\\"levelTwoDescription\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 2 description\\\"></textarea>\\n        </div>\\n      </accordion-group>\\n      <accordion-group heading=\\\"Niveau 3\\\">\\n        <div class=\\\"card-body\\\">\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelThree\\\" name=\\\"levelThree\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Niveau 3\\\"\\n          />\\n          <h6>Niveau 2 Note:</h6>\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelThreeGrade\\\" name=\\\"levelThreeGrade\\\" required type=\\\"number\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 3 Note\\\" />\\n\\n          <h6>Niveau 2 Description:</h6>\\n          <textarea [readonly]=\\\"isReadOnly\\\" rowa=\\\"3\\\" [(ngModel)]=\\\"behavioralSkill.levelThreeDescription\\\" name=\\\"levelThreeDescription\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 2 description\\\"></textarea>\\n        </div>\\n      </accordion-group>\\n      <accordion-group heading=\\\"Niveau 4\\\">\\n        <div class=\\\"card-body\\\">\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelFour\\\" name=\\\"levelFour\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Niveau 4\\\"\\n          />\\n          <h6>Niveau 4 Note:</h6>\\n          <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"behavioralSkill.levelFourGrade\\\" name=\\\"levelFourGrade\\\" required type=\\\"number\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 4 Note\\\" />\\n\\n          <h6>Niveau 4 Description:</h6>\\n          <textarea [readonly]=\\\"isReadOnly\\\" rowa=\\\"3\\\" [(ngModel)]=\\\"behavioralSkill.levelFourDescription\\\" name=\\\"levelFourDescription\\\" class=\\\"form-control input-sm\\\"\\n            placeholder=\\\"Niveau 4 description\\\"></textarea>\\n        </div>\\n      </accordion-group>\\n    </accordion>\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateBehavioralSkill()\\\" form=\\\"behavioralSkillForm\\\" [disabled]=\\\"!behavioralSkillForm.valid || !behavioralSkillForm.dirty\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\n\n@Component({\n  selector: 'app-behavioral-skill-edit-modal',\n  templateUrl: './behavioral-skill-edit-modal.component.html',\n  styleUrls: ['./behavioral-skill-edit-modal.component.css']\n})\nexport class BehavioralSkillEditModalComponent implements OnInit {\n  @Output() updateSelectedBehavioralSkill = new EventEmitter();\n  isFirstOpen = true;\n  behavioralSkill: BehavioralSkill;\n  statusList: string[];\n  isReadOnly: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n    if(this.behavioralSkill.sealed){\n      this.isReadOnly = true;\n    }\n  }\n\n  updateBehavioralSkill() {\n    this.updateSelectedBehavioralSkill.emit(this.behavioralSkill);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"!creationMode\\\">\\n    <app-hr-filter-create-actions [statusList]=\\\"statusList\\\" [dataType]=\\\"dataType\\\" (loadDataEvent)=\\\"handleLoadBehavioralSkills($event)\\\"\\n      (creationModeEvent)=\\\"handleCreationMode($event)\\\"></app-hr-filter-create-actions>\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 30%\\\">Compétence</th>\\n          <th style=\\\"width: 15%\\\">Statut</th>\\n          <th style=\\\"width: 20%\\\">Auteur</th>\\n          <th style=\\\"width: 15%\\\">Date de création</th>\\n          <th style=\\\"width: 20%\\\"></th>\\n        </tr>\\n\\n        <tr *ngFor=\\\"let behavioralSkill of behavioralSkills\\\" [routerLink]=\\\"['/behavioralSkills', behavioralSkill.id]\\\">\\n          <td>{{behavioralSkill.skill}}</td>\\n          <td>{{behavioralSkill.status}}</td>\\n          <td>{{behavioralSkill.createdByName}}</td>\\n          <td>{{behavioralSkill.created | date: 'mediumDate'}}</td>\\n          <td>\\n            <button *ngIf=\\\"behavioralSkill.status !== 'Archivée'\\\" class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editBehavioralSkillModal(behavioralSkill)\\\">Editer</button>\\n          </td>\\n        </tr>\\n\\n      </table>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"creationMode\\\">\\n    <app-behavioral-skill-new (cancelCreation)=\\\"cancelCreationMode($event)\\\" (switchOffCreation)=\\\"switchOffCreationMode($event)\\\"></app-behavioral-skill-new>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { BehavioralSkill } from './../../../_models/behavioralSkill';\nimport { BehavioralSkillEditModalComponent } from '../behavioral-skill-edit-modal/behavioral-skill-edit-modal.component';\n\n@Component({\n  selector: 'app-behavioral-skill-list',\n  templateUrl: './behavioral-skill-list.component.html',\n  styleUrls: ['./behavioral-skill-list.component.css']\n})\nexport class BehavioralSkillListComponent implements OnInit {\n  @Input() statusList: string[];\n  @Input() behavioralSkills: BehavioralSkill[];\n  @Output() loadBehavioralSkillsEvent = new EventEmitter<any>();\n  @Output() editBehavioralSkillEvent = new EventEmitter<any>();\n  filters: any = {};\n  creationMode = false;\n  bsModalRef: BsModalRef;\n  dataType: string;\n\n  constructor(\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    this.dataType = 'behavioralSkill';\n    this.loadBehavioralSkillsEvent.emit(this.filters);\n  }\n\n  resetFilters() {\n    this.filters.status = '';\n    this.loadBehavioralSkillsEvent.emit(this.filters);\n  }\n\n  creationToggle() {\n    this.creationMode = true;\n  }\n\n  cancelCreationMode(creationMode: boolean) {\n    this.creationMode = creationMode;\n  }\n\n  switchOffCreationMode(reload: boolean) {\n    this.creationMode = false;\n    if (reload) {\n      this.loadBehavioralSkillsEvent.emit(this.filters);\n    }\n  }\n\n  handleLoadBehavioralSkills(event: any) {\n    this.filters = event;\n    this.loadBehavioralSkillsEvent.emit(this.filters);\n  }\n\n\n  handleCreationMode(event: boolean) {\n    this.creationMode = event;\n  }\n\n  editBehavioralSkillModal(behavioralSkill: BehavioralSkill) {\n    const initialState = {\n      behavioralSkill,\n      statusList: this.statusList\n    };\n\n    this.bsModalRef = this.modalService.show(BehavioralSkillEditModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedBehavioralSkill.subscribe((updatedBehavioralSkill) => {\n      let updateParams = { updatedBehavioralSkill, filters: this.filters }\n      this.editBehavioralSkillEvent.emit(updateParams);\n    });\n  }\n}\n","module.exports = \".form-group>label {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 12em;\\n}\\n\\n.form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" d-flex justify-content-center>\\n  <form [formGroup]=\\\"newForm\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"create()\\\">\\n    <div class=\\\"col-sm-12 text-center\\\">\\n      <h2 class=\\\"ext-primary\\\">Création d'une compétence comportementale</h2>\\n      <hr />\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"skill\\\">Compétence: </label>\\n        <input [ngClass]=\\\"{\\n                        'is-invalid':\\n                          newForm.get('skill').errors &&\\n                          newForm.get('skill').touched\\n                      }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Compétence\\\" formControlName=\\\"skill\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                        newForm.get('skill').touched &&\\n                        newForm.get('skill').hasError('required')\\n                      \\\">\\n          La compétence est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"definition\\\">Définition: </label>\\n        <textarea formControlName=\\\"definition\\\" rows=\\\"4\\\" cols=\\\"50\\\" [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('definition').errors &&\\n                                newForm.get('definition').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Définition\\\"></textarea>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                      newForm.get('definition').touched &&\\n                      newForm.get('definition').hasError('required')\\n                    \\\">\\n          La définition est requise\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelOne\\\">Niveau 1: </label>\\n        <input [ngClass]=\\\"{\\n                            'is-invalid':\\n                              newForm.get('levelOne').errors &&\\n                              newForm.get('levelOne').touched\\n                          }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Compétence\\\" formControlName=\\\"levelOne\\\" readonly/>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                            newForm.get('levelOne').touched &&\\n                            newForm.get('levelOne').hasError('required')\\n                          \\\">\\n          Le niveau 1 est requis\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"levelOneGrade\\\">Note de Niveau 1: </label>\\n        <input type=\\\"number\\\" [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('levelOneGrade').errors &&\\n                                newForm.get('levelOneGrade').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Note\\\" formControlName=\\\"levelOneGrade\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                              newForm.get('levelOneGrade').touched &&\\n                              newForm.get('levelOneGrade').hasError('required')\\n                            \\\">\\n          La note du niveau 1 est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelOneDescription\\\">Description de Niveau 1: </label>\\n        <textarea formControlName=\\\"levelOneDescription\\\" rows=\\\"3\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelTwo\\\">Niveau 2: </label>\\n        <input [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('levelTwo').errors &&\\n                                newForm.get('levelTwo').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Compétence\\\" formControlName=\\\"levelTwo\\\" readonly/>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                              newForm.get('levelTwo').touched &&\\n                              newForm.get('levelTwo').hasError('required')\\n                            \\\">\\n          Le niveau 2 est requis\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"levelTwoGrade\\\">Note de Niveau 2: </label>\\n        <input type=\\\"number\\\" [ngClass]=\\\"{\\n                                'is-invalid':\\n                                  newForm.get('levelTwoGrade').errors &&\\n                                  newForm.get('levelTwoGrade').touched\\n                              }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Note\\\" formControlName=\\\"levelTwoGrade\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                                newForm.get('levelTwoGrade').touched &&\\n                                newForm.get('levelTwoGrade').hasError('required')\\n                              \\\">\\n          La note du niveau 2 est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelTwoDescription\\\">Description de Niveau 2: </label>\\n        <textarea formControlName=\\\"levelTwoDescription\\\" rows=\\\"3\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelThree\\\">Niveau 3: </label>\\n        <input [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('levelThree').errors &&\\n                                newForm.get('levelThree').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Compétence\\\" formControlName=\\\"levelThree\\\" readonly/>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                              newForm.get('levelThree').touched &&\\n                              newForm.get('levelThree').hasError('required')\\n                            \\\">\\n          Le niveau 3 est requis\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"levelThreeGrade\\\">Note de Niveau 3: </label>\\n        <input type=\\\"number\\\" [ngClass]=\\\"{\\n                                'is-invalid':\\n                                  newForm.get('levelThreeGrade').errors &&\\n                                  newForm.get('levelThreeGrade').touched\\n                              }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Note\\\" formControlName=\\\"levelThreeGrade\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                                newForm.get('levelThreeGrade').touched &&\\n                                newForm.get('levelThreeGrade').hasError('required')\\n                              \\\">\\n          La note du niveau 3 est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelThreeDescription\\\">Description de Niveau 3: </label>\\n        <textarea formControlName=\\\"levelThreeDescription\\\" rows=\\\"3\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelFour\\\">Niveau 4: </label>\\n        <input [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('levelFour').errors &&\\n                                newForm.get('levelFour').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Compétence\\\" formControlName=\\\"levelFour\\\" readonly/>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                              newForm.get('levelFour').touched &&\\n                              newForm.get('levelFour').hasError('required')\\n                            \\\">\\n          Le niveau 4 est requis\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label' for=\\\"levelFourGrade\\\">Note de Niveau 4: </label>\\n        <input type=\\\"number\\\" [ngClass]=\\\"{\\n                                'is-invalid':\\n                                  newForm.get('levelFourGrade').errors &&\\n                                  newForm.get('levelFourGrade').touched\\n                              }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Note\\\" formControlName=\\\"levelFourGrade\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                                newForm.get('levelFourGrade').touched &&\\n                                newForm.get('levelFourGrade').hasError('required')\\n                              \\\">\\n          La note du niveau 4 est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"levelFourDescription\\\">Description de Niveau 4: </label>\\n        <textarea formControlName=\\\"levelFourDescription\\\" rows=\\\"3\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Description\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-3 offset-4 text-center\\\">\\n      <div class=\\\"form-group mt-2\\\">\\n        <button class=\\\"btn btn-primary mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n          Annuler\\n        </button>\\n\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!newForm.valid\\\">\\n          Soumettre\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  AbstractControl\n} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { HrService } from '../../../_services/hr.service';\nimport { AuthService } from '../../../_services/auth.service';\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\n\n\n@Component({\n  selector: 'app-behavioral-skill-new',\n  templateUrl: './behavioral-skill-new.component.html',\n  styleUrls: ['./behavioral-skill-new.component.css']\n})\nexport class BehavioralSkillNewComponent implements OnInit {\n  @Output() cancelCreation = new EventEmitter();\n  @Output() switchOffCreation = new EventEmitter();\n  newBehavioralSkill: BehavioralSkill;\n  newForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder, private hrService: HrService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.newForm = this.fb.group(\n      {\n        skill: ['', Validators.required],\n        definition: ['', [Validators.required]],\n        levelOne: ['Insatisfaisant', Validators.required],\n        levelOneGrade: ['1', [Validators.required]],\n        levelOneDescription: [''],\n        levelTwo: ['A améliorer', Validators.required],\n        levelTwoGrade: ['2', [Validators.required]],\n        levelTwoDescription: [''],\n        levelThree: ['Conforme aux attentes', Validators.required],\n        levelThreeGrade: ['3', [Validators.required]],\n        levelThreeDescription: [''],\n        levelFour: ['Supérieur aux attentes', Validators.required],\n        levelFourGrade: ['4', [Validators.required]],\n        levelFourDescription: ['']\n      });\n  }\n\n  create() {\n    if (this.newForm.valid) {\n      this.newBehavioralSkill = Object.assign({}, this.newForm.value);\n      this.loading = true;\n      this.hrService.createBehavioralSkill(this.authService.decodedToken.nameid, this.newBehavioralSkill).subscribe(\n        () => {\n          this.loading = false;\n          this.alertify.success('Compétence comportementale créé avec succèes');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => { this.switchOffCreation.emit(true); }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelCreation.emit(false);\n  }\n}\n","module.exports = \".panel-body {\\n  overflow-y: scroll;\\n  height: 780px;\\n}\\n\"","module.exports = \"<div class=\\\"card mt-2\\\">\\n  <div class=\\\"card-header\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Filtrer par utilisateurs\\\" [(value)]=\\\"values\\\" (keyup)=\\\"onKeyUp($event)\\\" />\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <table *ngIf=\\\"evaluationFileInstanceList?.length > 0\\\" class=\\\"table table-hover  mt-2\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 30%\\\">Titre</th>\\n        <th style=\\\"width: 20%\\\">Utilisateur</th>\\n        <th style=\\\"width: 25%\\\">Pole</th>\\n        <td style=\\\"width: 5%\\\"></td>\\n      </tr>\\n      <tr *ngFor=\\\"let evaluationFileInsatnce of filteredEvaluationFileInstances\\\">\\n        <td>{{ evaluationFileInsatnce.title }}</td>\\n        <td>{{ evaluationFileInsatnce.ownerName }}</td>\\n        <td>{{ evaluationFileInsatnce.axisInstances[0].poleName }}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"delete(evaluationFileInsatnce.id)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { EvaluationFileInstance } from '../../../_models/evaluationFileInstance';\nimport { UserStatus } from '../../../_models/userStatus';\nimport { User } from '../../../_models/user';\n\n@Component({\n  selector: 'app-evaluation-file-instance-hr-list',\n  templateUrl: './evaluation-file-instance-hr-list.component.html',\n  styleUrls: ['./evaluation-file-instance-hr-list.component.css']\n})\nexport class EvaluationFileInstanceHrListComponent implements OnInit {\n  @Input() evaluationFileInstanceList: EvaluationFileInstance[];\n  @Output() deleteEvaluationFileInstanceEvent = new EventEmitter<number>();\n  actionLabel: string;\n  filteredEvaluationFileInstances: EvaluationFileInstance[];\n  values: string = '';\n\n\n  constructor() { }\n\n  ngOnInit() {\n    this.actionLabel = 'Générer une fiche d\\'évaluation';\n    this.filteredEvaluationFileInstances = this.evaluationFileInstanceList;\n  }\n\n  onKeyUp(event) {\n    this.values = event.target.value;\n    this.filteredEvaluationFileInstances = this.evaluationFileInstanceList.filter(efi => efi.ownerName.toLowerCase().includes(this.values.toLowerCase()));\n  }\n\n  delete(id: number) {\n    this.deleteEvaluationFileInstanceEvent.emit(id);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-collaborator-search [userStatusList]=\\\"userStatusList\\\" [actionLabel]=\\\"actionLabel\\\" (actionEvent)=\\\"handleAction($event)\\\"></app-collaborator-search>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { User } from '../../../_models/user';\nimport { UserStatus } from '../../../_models/userStatus';\n\n@Component({\n  selector: 'app-evaluation-file-instance-hr-new',\n  templateUrl: './evaluation-file-instance-hr-new.component.html',\n  styleUrls: ['./evaluation-file-instance-hr-new.component.css']\n})\nexport class EvaluationFileInstanceHrNewComponent implements OnInit {\n  @Input() userStatusList: UserStatus[];\n  @Output() actionEvent = new EventEmitter<User>();\n  actionLabel: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.actionLabel = 'Générer une fiche d\\'évaluation';\n  }\n\n  handleAction(user: User) {\n    this.actionEvent.emit(user);\n  }\n}\n","module.exports = \".panel-body {\\n  overflow-y: scroll;\\n  height: 800px;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Détail de modèle d'évaluation</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Titre:</strong>\\n            <p>{{ evaluationFile.title }}</p>\\n          </div>\\n          <div>\\n            <strong>Année:</strong>\\n            <p>{{ evaluationFile.year }}</p>\\n          </div>\\n          <div>\\n            <strong>Statut:</strong>\\n            <p>{{ evaluationFile.status }}</p>\\n          </div>\\n          <div *ngIf=\\\"evaluationFile.sealed\\\">\\n            <strong>Date scellée:</strong>\\n            <p>{{ evaluationFile.sealedDate | date: 'mediumDate' }}</p>\\n          </div>\\n          <div>\\n            <strong>Auteur:</strong>\\n            <p>{{ evaluationFile.ownerName }}</p>\\n          </div>\\n          <div>\\n            <strong>Créé:</strong>\\n            <p>{{ evaluationFile.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-fles\\\">\\n            <button class=\\\"btn btn-success w-70 mr-1\\\" [routerLink]=\\\"['/hr']\\\" [queryParams]=\\\"{ tab: 2 }\\\">\\n              Retour au List\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      <div class=\\\"tab-panel panel-body\\\">\\n        <tabset class=\\\"strategy-tabset\\\" #strategyTabs>\\n          <tab heading=\\\"Stratégie\\\">\\n            <div class=\\\"container\\\">\\n              <h4> {{evaluationFile.strategy.title}}</h4>\\n              <p>{{evaluationFile.strategy.description}}</p>\\n              <h4>Axes:</h4>\\n              <ul>\\n                <li *ngFor=\\\"let axis of evaluationFile.axisList\\\">\\n                  {{axis.title}}\\n                  <ol>\\n                    <li *ngFor=\\\"let ap of axis.axisPoles\\\">\\n                      {{ap.poleName}}\\n                      <span class=\\\"badge badge-pill badge-danger\\\">\\n                        {{ap.weight}} %\\n                      </span>\\n                    </li>\\n                  </ol>\\n                </li>\\n              </ul>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Compétence comportementale\\\">\\n            <div class=\\\"container\\\">\\n              <ul>\\n                <li *ngFor=\\\"let bs of evaluationFile.behavioralSkills\\\">\\n                  {{bs.skill}}\\n                  <ol>\\n                    <li>{{bs.levelOne}}</li>\\n                    <li>{{bs.levelTwo}}</li>\\n                    <li>{{bs.levelThree}}</li>\\n                    <li>{{bs.levelFour}}</li>\\n                  </ol>\\n                </li>\\n              </ul>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Fiche d'évaluation\\\">\\n            <div class=\\\"container\\\">\\n              <button class=\\\"btn btn-secondary mt-1\\\" (click)=\\\"openModal()\\\" [disabled]=\\\"evaluationFile.status !== 'Publiée'\\\">\\n                Générer fiche d'évaluation\\n              </button>\\n              <div *ngIf=\\\"evaluationFileInstanceList.length > 0\\\">\\n                <app-evaluation-file-instance-hr-list [evaluationFileInstanceList]=\\\"evaluationFileInstanceList\\\" (deleteEvaluationFileInstanceEvent)=\\\"handleDeleteEvaluationFileInstance($event)\\\"></app-evaluation-file-instance-hr-list>\\n              </div>\\n              <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"evaluationFileInstanceList.length === 0\\\">\\n                Aucune fiche d'évaluation n'a été générée!\\n              </div>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Paramétrages\\\">\\n            Paramétrage\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { EvaluationFile } from '../../../_models/evaluationFile';\nimport { EvaluationFileInstance } from '../../../_models/evaluationFileInstance';\nimport { User } from '../../../_models/user';\nimport { HrService } from '../../../_services/hr.service';\nimport { AuthService } from '../../../_services/auth.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { UserStatus } from '../../../_models/userStatus';\nimport { AdminService } from '../../../_services/admin.service';\nimport { CollaboratorSearchComponent } from '../../../collaborators/collaborator-search/collaborator-search.component';\n\n@Component({\n  selector: 'app-evaluation-hr-detail',\n  templateUrl: './evaluation-hr-detail.component.html',\n  styleUrls: ['./evaluation-hr-detail.component.css']\n})\nexport class EvaluationHrDetailComponent implements OnInit {\n  evaluationFile: EvaluationFile;\n  evaluationFileInstanceList: EvaluationFileInstance[] = [];\n  loading: boolean;\n  userStatusList: UserStatus[];\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService, private route: ActivatedRoute, private hrService: HrService, private adminService: AdminService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.hrService.efiObservableList.subscribe(\n      efiList => {\n        (this.evaluationFileInstanceList = efiList)\n      }\n    );\n    this.route.data.subscribe(data => {\n      this.evaluationFile = data['evaluationFile'];\n      this.hrService.getEvaluationFileInstancesByEvaluationFileId(this.evaluationFile.id).subscribe();\n    });\n\n    this.getUserStatus();\n  }\n\n  getUserStatus() {\n    if (localStorage.getItem('userStatusList')) {\n      this.userStatusList = JSON.parse(localStorage.getItem('userStatusList'))\n    } else {\n      this.loading = true;\n      this.adminService.getUserStatus().subscribe(\n        (result: UserStatus[]) => {\n          this.loading = false;\n          this.userStatusList = result\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n    }\n  }\n\n  handleDeleteEvaluationFileInstance(evaluationFileInstanceId) {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer cette Fiche d\\'évaluation?',\n      () => {\n        this.loading = true;\n        this.hrService\n          .deleteEvaluationFileInstance(evaluationFileInstanceId, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.loading = false;\n              // this.evaluationFileInstanceList.splice(\n              //   this.evaluationFileInstanceList.findIndex(a => a.id === evaluationFileInstanceId),\n              //   1\n              // );\n              this.evaluationFileInstanceList = [];\n              this.hrService.getEvaluationFileInstancesByEvaluationFileId(this.evaluationFile.id).subscribe();\n              this.alertify.success('La fiche d\\'évaluation a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer la fiche d\\'évaluation');\n            }\n          );\n      }\n    );\n  }\n\n  openModal() {\n    const initialState = {\n      userStatusList: this.userStatusList,\n      actionLabel: 'Générer une fiche d\\'évaluation'\n    };\n    this.bsModalRef = this.modalService.show(CollaboratorSearchComponent, { initialState, class: 'modal-lg' });\n    this.bsModalRef.content.actionEvent.subscribe((users) => {\n      this.loading = true;\n      this.hrService\n        .generateEvaluationFile(this.evaluationFile.id, users)\n        .subscribe(\n          next => {\n            this.loading = false;\n            this.alertify.success('La fiche d\\'évaluation a été générée avec succèes');\n            this.evaluationFileInstanceList = [];\n            this.hrService.getEvaluationFileInstancesByEvaluationFileId(this.evaluationFile.id).subscribe();\n          },\n          error => {\n            this.loading = false;\n            this.alertify.error(error);\n          }\n        );\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title pull-left\\\">Modifier modèle d'évaluation</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <form #evaluationFileForm=\\\"ngForm\\\" id=\\\"evaluationFileForm\\\">\\n    <h6>Titre:</h6>\\n    <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"evaluationFile.title\\\" name=\\\"title\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n      placeholder=\\\"Titre\\\" />\\n\\n    <h6>Année: </h6>\\n    <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"evaluationFile.year\\\" name=\\\"year\\\" required min=\\\"2019\\\" max=\\\"2100\\\" type=\\\"number\\\"\\n      class=\\\"form-control mb-1\\\" placeholder=\\\"Année\\\" />\\n\\n    <h6>Stratégie: </h6>\\n    <select class=\\\"form-control mb-1\\\" id=\\\"strategy\\\" name=\\\"strategy\\\" required [(ngModel)]=\\\"evaluationFile.strategy.id\\\" [disabled]=\\\"isReadOnly\\\">\\n      <option *ngFor=\\\"let strategy of strategyList\\\" [ngValue]=\\\"strategy.id\\\">\\n        {{ strategy.title }}\\n      </option>\\n    </select>\\n\\n    <h6>Compétence comportementale:</h6>\\n    <label class=\\\"ml-4 mr-3\\\" *ngFor=\\\"let bs of skillList\\\">\\n      <input name=\\\"{{bs.skill}}\\\" type=\\\"checkbox\\\" class=\\\"form-check-input mr-6\\\" [value]=\\\"bs.id\\\" [checked]=\\\"bs.checked\\\" (change)=\\\"bs.checked = !bs.checked\\\"\\n        [disabled]=\\\"isReadOnly\\\"> {{ bs.skill }}\\n    </label>\\n\\n    <h6>Statut:</h6>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"status\\\" name=\\\"status\\\" required [(ngModel)]=\\\"evaluationFile.status\\\">\\n      <option *ngFor=\\\"let status of statusList\\\" [ngValue]=\\\"status\\\">\\n        {{ status }}\\n      </option>\\n    </select>\\n  </form>\\n</div>\\n\\n<div *ngIf=\\\"showErrors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n  Sélectionnez au moins une compétence comportementale.\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateEvaluationFile()\\\" form=\\\"evaluationFileForm\\\" [disabled]=\\\"!evaluationFileForm.valid\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { EvaluationFile } from '../../../_models/evaluationFile';\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\nimport { Strategy } from '../../../_models/strategy';\n\n@Component({\n  selector: 'app-evaluation-hr-edit-modal',\n  templateUrl: './evaluation-hr-edit-modal.component.html',\n  styleUrls: ['./evaluation-hr-edit-modal.component.css']\n})\nexport class EvaluationHrEditModalComponent implements OnInit {\n  @Output() updateSelectedEvaluationFile = new EventEmitter();\n  evaluationFile: EvaluationFile;\n  skillList: any[];\n  strategyList: Strategy[];\n  statusList: string[];\n  showErrors: boolean;\n  isReadOnly: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n    if(this.evaluationFile.sealed){\n      this.isReadOnly = true;\n      this.statusList = ['Publiée', 'Archivée'];\n    }\n\n  }\n\n  updateEvaluationFile() {\n    this.showErrors = false;\n    const selectedSkillIds = [...this.skillList.filter(s => s.checked === true).map(s => s.id)]\n    if (selectedSkillIds.length > 0) {\n      const evaluationFileToUpdate = {\n        id: this.evaluationFile.id,\n        title: this.evaluationFile.title,\n        year: this.evaluationFile.year,\n        strategyId: this.evaluationFile.strategy.id,\n        behavioralSkillIds: selectedSkillIds,\n        status: this.evaluationFile.status\n      };\n\n      this.updateSelectedEvaluationFile.emit(evaluationFileToUpdate);\n      this.bsModalRef.hide();\n    } else {\n      this.showErrors = true;\n    }\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"!creationMode\\\">\\n    <app-hr-filter-create-actions [statusList]=\\\"statusList\\\" [dataType]=\\\"dataType\\\" (loadDataEvent)=\\\"handleLoadEvaluations($event)\\\"\\n      (creationModeEvent)=\\\"handleCreationMode($event)\\\"></app-hr-filter-create-actions>\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 30%\\\">Titre</th>\\n          <th style=\\\"width: 10%\\\">Année</th>\\n          <th style=\\\"width: 15%\\\">Statut</th>\\n          <th style=\\\"width: 20%\\\">Auteur</th>\\n          <th style=\\\"width: 15%\\\">Date de création</th>\\n          <th style=\\\"width: 10%\\\"></th>\\n        </tr>\\n\\n        <tr *ngFor=\\\"let evaluationFile of evaluationFiles\\\" [routerLink]=\\\"['/evaluationFiles', evaluationFile.id]\\\">\\n          <td>{{evaluationFile.title}}</td>\\n          <td>{{evaluationFile.year}}</td>\\n          <td>{{evaluationFile.status}}</td>\\n          <td>{{evaluationFile.ownerName}}</td>\\n          <td>{{evaluationFile.created | date: 'mediumDate'}}</td>\\n          <td>\\n            <button *ngIf=\\\"evaluationFile.status !== 'Archivée'\\\" class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editEvaluationFileModal(evaluationFile)\\\">Editer</button>\\n          </td>\\n        </tr>\\n\\n      </table>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"creationMode\\\">\\n    <app-evaluation-hr-new (cancelCreation)=\\\"cancelCreationMode($event)\\\" (switchOffCreation)=\\\"switchOffCreationMode($event)\\\"></app-evaluation-hr-new>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { EvaluationFile } from './../../../_models/evaluationFile';\nimport { EvaluationHrEditModalComponent } from '../evaluation-hr-edit-modal/evaluation-hr-edit-modal.component';\nimport { Strategy } from '../../../_models/strategy';\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\n\n@Component({\n  selector: 'app-evaluation-hr-list',\n  templateUrl: './evaluation-hr-list.component.html',\n  styleUrls: ['./evaluation-hr-list.component.css']\n})\nexport class EvaluationHrListComponent implements OnInit {\n  @Input() statusList: string[];\n  @Input() evaluationFiles: EvaluationFile[];\n  @Input() strategyList: Strategy[];\n  @Input() skillList: BehavioralSkill[];\n  @Output() loadEvaluationFilesEvent = new EventEmitter<any>();\n  @Output() editEvaluationFileEvent = new EventEmitter<any>();\n  @Output() loadPublishedStratgeiesEvent = new EventEmitter<any>();\n  @Output() loadPublishedBehavioralSkillsEvent = new EventEmitter<any>();\n  filters: any = {};\n  creationMode = false;\n  bsModalRef: BsModalRef;\n  dataType: string;\n\n  constructor(\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    this.dataType = 'evaluationFile';\n    this.loadEvaluationFilesEvent.emit(this.filters);\n    this.loadPublishedBehavioralSkillsEvent.emit();\n    this.loadPublishedStratgeiesEvent.emit();\n  }\n\n  resetFilters() {\n    this.filters.status = '';\n    this.loadEvaluationFilesEvent.emit(this.filters);\n  }\n\n  creationToggle() {\n    this.creationMode = true;\n  }\n\n  cancelCreationMode(creationMode: boolean) {\n    this.creationMode = creationMode;\n  }\n\n  switchOffCreationMode(reload: boolean) {\n    this.creationMode = false;\n    if (reload) {\n      this.loadEvaluationFilesEvent.emit(this.filters);\n    }\n  }\n\n  handleLoadEvaluations(event: any) {\n    this.filters = event;\n    this.loadEvaluationFilesEvent.emit(this.filters);\n  }\n\n\n  handleCreationMode(event: boolean) {\n    this.creationMode = event;\n  }\n\n  editEvaluationFileModal(evaluationFile: any) {\n    const initialState = {\n      evaluationFile,\n      skillList: this.getSkillsArray(evaluationFile),\n      strategyList: this.strategyList,\n      statusList: this.statusList\n    };\n\n    this.bsModalRef = this.modalService.show(EvaluationHrEditModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedEvaluationFile.subscribe((updatedEvaluationFile) => {\n      let updateParams = { updatedEvaluationFile: updatedEvaluationFile, filters: this.filters }\n      this.editEvaluationFileEvent.emit(updateParams);\n    });\n  }\n\n  private getSkillsArray(evaluationFile) {\n    const skills = [];\n    const availableSkills: any[] = [...this.skillList];\n\n    for (let i = 0; i < availableSkills.length; i++) {\n      let isMatch = false;\n      for (let j = 0; j < evaluationFile.behavioralSkills.length; j++) {\n        if (availableSkills[i].id === evaluationFile.behavioralSkills[j].id) {\n          isMatch = true;\n          availableSkills[i].checked = true;\n          skills.push(availableSkills[i]);\n          break;\n        }\n      }\n      if (!isMatch) {\n        availableSkills[i].checked = false;\n        skills.push(availableSkills[i]);\n      }\n    }\n    return skills;\n  }\n}\n\n","module.exports = \".form-group>label {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 30em;\\n}\\n\\n.form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" d-flex justify-content-center>\\n  <form [formGroup]=\\\"newForm\\\" (ngSubmit)=\\\"create()\\\">\\n    <h2 class=\\\"ext-primary\\\">Création d'un modèle d'évaluation</h2>\\n    <hr />\\n    <div class=\\\"form-group row required\\\">\\n      <label for=\\\"year\\\" class=\\\"col-sm-2 col-form-label control-label\\\">Année: </label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input [ngClass]=\\\"{\\n                          'is-invalid':\\n                            newForm.get('year').errors &&\\n                            newForm.get('year').touched\\n                        }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Année\\\" type=\\\"number\\\" min=\\\"2019\\\" max=\\\"2100\\\" formControlName=\\\"year\\\"\\n        />\\n      </div>\\n      <div class=\\\"col-sm-5 invalid-feedback\\\" *ngIf=\\\"\\n                          newForm.get('year').touched &&\\n                          newForm.get('year').hasError('required')\\n                        \\\">\\n        L'année est requise\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row required\\\">\\n      <label for=\\\"title\\\" class=\\\"col-sm-2 col-form-label control-label\\\">Titre: </label>\\n      <div class=\\\"col-sm-5\\\">\\n        <input [ngClass]=\\\"{\\n                        'is-invalid':\\n                          newForm.get('title').errors &&\\n                          newForm.get('title').touched\\n                      }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Titre\\\" formControlName=\\\"title\\\" />\\n      </div>\\n      <div class=\\\"col-sm-5 invalid-feedback\\\" *ngIf=\\\"\\n                        newForm.get('title').touched &&\\n                        newForm.get('title').hasError('required')\\n                      \\\">\\n        Le titre est requis\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row required\\\">\\n      <label for=\\\"strategy\\\" class=\\\"col-sm-2 col-form-label control-label\\\">Stratégie: </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control mb-1\\\" id=\\\"strategy\\\" formControlName=\\\"strategy\\\">\\n          <option *ngFor=\\\"let strategy of strategyList\\\" [ngValue]=\\\"strategy\\\">\\n            {{ strategy.title }}\\n          </option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row required\\\">\\n      <label for=\\\"behavioralSkillId\\\" class=\\\"col-sm-12 col-form-label control-label\\\">Compétence comportementale: </label>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"ml-3\\\" formArrayName=\\\"skills\\\" *ngFor=\\\"let skill of newForm.get('skills')['controls']; let i = index\\\">\\n        <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\"> {{skillsData[i].skill}}\\n      </label>\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                        newForm.get('skills').touched &&\\n                        newForm.get('skills').status !== 'INVALID'\\n                      \\\">\\n        La Compétence est requise\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10 \\\">\\n        <button class=\\\"btn btn-primary mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n          Annuler\\n        </button>\\n\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!newForm.valid\\\">\\n          Soumettre\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { filter } from 'rxjs/operators';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormArray,\n  FormControl,\n  ValidatorFn,\n  Validators,\n  FormBuilder,\n  AbstractControl\n} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { of } from 'rxjs';\n\nimport { HrService } from '../../../_services/hr.service';\nimport { AuthService } from '../../../_services/auth.service';\nimport { EvaluationFile } from '../../../_models/evaluationFile';\nimport { Strategy } from '../../../_models/strategy';\nimport { BehavioralSkill } from '../../../_models/behavioralSkill';\nimport { AlertifyService } from '../../../_services/alertify.service';\n\n@Component({\n  selector: 'app-evaluation-hr-new',\n  templateUrl: './evaluation-hr-new.component.html',\n  styleUrls: ['./evaluation-hr-new.component.css']\n})\nexport class EvaluationHrNewComponent implements OnInit {\n  @Output() cancelCreation = new EventEmitter();\n  @Output() switchOffCreation = new EventEmitter();\n  newForm: FormGroup;\n  loading = false;\n  strategyList: Strategy[];\n  skillsData: BehavioralSkill[];\n\n  constructor(private fb: FormBuilder, private hrService: HrService, private authService: AuthService, private alertify: AlertifyService) {\n  }\n\n  ngOnInit() {\n    this.createForm();\n    this.loadPublishedStratgeies();\n    this.loadPublishedBehavioralSkills();\n  }\n\n  loadPublishedStratgeies() {\n    this.loading = true;\n    this.hrService.getPublishedStrategies().subscribe(\n      (result: Strategy[]) => {\n        this.loading = false;\n        this.strategyList = result.filter(r => r.sealed === false);\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  loadPublishedBehavioralSkills() {\n    this.loading = true;\n    of(this.hrService.getPublishedBehavioralSkills().subscribe(\n      (result: BehavioralSkill[]) => {\n        this.loading = false;\n        this.skillsData = result.filter(r => r.sealed === false);;\n        this.addCheckboxes();\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    ));\n  }\n\n  createForm() {\n    this.newForm = this.fb.group(\n      {\n        title: ['', Validators.required],\n        year: ['', Validators.required],\n        strategy: ['', Validators.required],\n        skills: new FormArray([], this.minSelectedCheckboxes(1))\n      });\n  }\n\n  create() {\n    if (this.newForm.valid) {\n      const selectedSkillIds = this.newForm.value.skills.map((v, i) => v ? this.skillsData[i].id : null).filter(v => v !== null);\n      const newEvaluationFile = { title: this.newForm.value.title, year: this.newForm.value.year, strategyId: this.newForm.value.strategy.id, behavioralSkillIds: selectedSkillIds };\n      this.loading = true;\n      this.hrService.createEvaluationFile(this.authService.decodedToken.nameid, newEvaluationFile).subscribe(\n        () => {\n          this.loading = false;\n          this.alertify.success('Fiche d\\'évaluation créé avec succèes');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => { this.switchOffCreation.emit(true); }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelCreation.emit(false);\n  }\n\n  private addCheckboxes() {\n    this.skillsData.forEach((o, i) => {\n      const control = new FormControl(true);\n      (this.newForm.get('skills') as FormArray).push(control);\n    });\n  }\n\n  minSelectedCheckboxes(min = 1) {\n    const validator: ValidatorFn = (formArray: FormArray) => {\n      const totalSelected = formArray.controls\n        // get a list of checkbox values (boolean)\n        .map(control => control.value)\n        // total up the number of checked checkboxes\n        .reduce((prev, next) => next ? prev + next : prev, 0);\n\n      // if the total is not greater than the minimum, return the error message\n      return totalSelected >= min ? null : { required: true };\n    };\n\n    return validator;\n  }\n}\n","module.exports = \"\"","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadData()\\\" class=\\\"form-inline\\\" novalidate>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"status\\\">Statut:</label>\\n    <select [(ngModel)]=\\\"filters.status\\\" class=\\\"form-control\\\" style=\\\"width: 150px\\\" id=\\\"status\\\" name=\\\"status\\\">\\n      <option value=\\\"\\\">Tous les statut</option>\\n      <option *ngFor=\\\"let status of statusList\\\" [value]=\\\"status\\\">\\n        {{ status }}\\n      </option>\\n    </select>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">\\n    Appliquer Filtre\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\">\\n    Réinitialiser Filtre\\n  </button>\\n\\n  <div class=\\\"col\\\">\\n    <div class=\\\"btn-group float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"creationToggle()\\\">\\n        {{labelButton}}\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-hr-filter-create-actions',\n  templateUrl: './hr-filter-create-actions.component.html',\n  styleUrls: ['./hr-filter-create-actions.component.css']\n})\nexport class HrFilterCreateActionsComponent implements OnInit {\n  @Input() dataType: string;\n  @Input() statusList: string[];\n  @Output() loadDataEvent = new EventEmitter<any>();\n  @Output() creationModeEvent = new EventEmitter<any>();\n\n  filters: any = {};\n  labelButton: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.filters.status = '';\n    this.filters.orderBy = 'created';\n    switch (this.dataType) {\n      case 'strategy':\n        this.labelButton = 'Créer Nouvelle Stratégie';\n        break;\n      case 'behavioralSkill':\n        this.labelButton = 'Créer Nouvelle compétence comportementale';\n        break;\n      case 'evaluationFile':\n        this.labelButton = 'Créer Nouveau Modèle d\\'Evaluation';\n        break;\n    }\n  }\n\n  resetFilters() {\n    this.filters.status = '';\n    this.loadDataEvent.emit(this.filters);\n  }\n\n  creationToggle() {\n    this.creationModeEvent.emit(true)\n  }\n\n  loadData() {\n    this.loadDataEvent.emit(this.filters);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <h2>Panneau de Ressource Humaine</h2>\\n  <div class=\\\"tab-panel\\\">\\n    <tabset class=\\\"hr-tabset\\\" #hrTabs>\\n      <tab heading=\\\"Axes Stratégique\\\" *appHasRole=\\\"['HRD', 'HR']\\\">\\n        <div class=\\\"container mt-2\\\">\\n          <app-strategy-list [statusList]=\\\"statusList\\\" [strategies]=\\\"strategies\\\" [pagination]=\\\"pagination\\\" (pageChangedEvent)=\\\"(handlePageChanged($event))\\\"\\n            (loadStrategiesEvent)=\\\"handleLoadStrategies($event)\\\" (editStrategyEvent)=\\\"handleEditStrategy($event)\\\">\\n          </app-strategy-list>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Compétences Comportementales\\\" *appHasRole=\\\"['HRD', 'HR']\\\">\\n        <div class=\\\"container mt-2\\\">\\n          <app-behavioral-skill-list [statusList]=\\\"statusList\\\" [behavioralSkills]=\\\"behavioralSkills\\\" (loadBehavioralSkillsEvent)=\\\"handleLoadBehavioralSkills($event)\\\"\\n            (editBehavioralSkillEvent)=\\\"handleEditBehavioralSkill($event)\\\"></app-behavioral-skill-list>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Modèle de fiches d'évaluation\\\" *appHasRole=\\\"['HRD', 'HR']\\\">\\n        <div class=\\\"container mt-2\\\">\\n          <app-evaluation-hr-list [statusList]=\\\"statusList\\\" [evaluationFiles]=\\\"evaluationFiles\\\" [strategyList]=\\\"strategyList\\\" [skillList]=\\\"skillList\\\"\\n            (loadEvaluationFilesEvent)=\\\"handleLoadEvaluationFiles($event)\\\" (editEvaluationFileEvent)=\\\"handleEditEvaluationFile($event)\\\"\\n            (loadPublishedStratgeiesEvent)=\\\"handleLoadPublishedStratgeies($event)\\\" (loadPublishedBehavioralSkillsEvent)=\\\"handleLoadPublishedBehavioralSkills($event)\\\"></app-evaluation-hr-list>\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\"","import { filter } from 'rxjs/operators';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TabsetComponent } from 'ngx-bootstrap';\nimport { Router } from '@angular/router';\n\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\nimport { HrService } from '../../_services/hr.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { BehavioralSkill } from '../../_models/behavioralSkill';\nimport { Strategy } from '../../_models/strategy';\nimport { EvaluationFile } from '../../_models/evaluationFile';\n\n@Component({\n  selector: 'app-hr-panel',\n  templateUrl: './hr-panel.component.html',\n  styleUrls: ['./hr-panel.component.css']\n})\nexport class HrPanelComponent implements OnInit {\n  @ViewChild('hrTabs') hrTabs: TabsetComponent;\n  statusList: string[];\n  strategies: Strategy[];\n  behavioralSkills: BehavioralSkill[];\n  evaluationFiles: EvaluationFile[];\n  strategyList: Strategy[];\n  skillList: BehavioralSkill[];\n  pagination: Pagination;\n  loading = false;\n\n  constructor(private route: ActivatedRoute, private hrService: HrService,\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.strategies = data['strategies'].result;\n      this.pagination = data['strategies'].pagination;\n    });\n\n    this.statusList = ['Rédaction', 'En Revue', 'Publiée', 'Archivée'];\n\n    //https://hackernoon.com/everything-you-need-to-know-about-the-expressionchangedafterithasbeencheckederror-error-e3fd9ce7dbb4\n    Promise.resolve(null).then(() => {\n      this.route.queryParams.subscribe(params => {\n        const selectedTab = params['tab'] || 0;\n        this.hrTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n      });\n    });\n  }\n\n  handleLoadStrategies(filters) {\n    this.loading = true;\n    this.hrService\n      .getStrategies(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        filters\n      )\n      .subscribe(\n        (res: PaginatedResult<Strategy[]>) => {\n          this.loading = false;\n          this.strategies = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  handleEditStrategy(event: any) {\n    this.loading = true;\n    this.hrService.updateStrategy(this.authService.decodedToken.nameid, event.updatedStrategy).subscribe(() => {\n      this.loading = false;\n      this.alertify.success('Stratégie a été mise à jour.');\n      this.handleLoadStrategies(event.filters);\n    }, error => {\n      this.loading = false;\n      this.handleLoadStrategies(event.filters);\n      this.alertify.error(error);\n    })\n  }\n\n  handleLoadBehavioralSkills(filters) {\n    this.loading = true;\n    this.hrService\n      .getBehavioralSkills(this.authService.decodedToken.nameid, filters)\n      .subscribe(\n        (res: BehavioralSkill[]) => {\n          this.loading = false;\n          this.behavioralSkills = res;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  handleEditBehavioralSkill(event: any) {\n    this.loading = true;\n    this.hrService.updateBehavioralSkill(this.authService.decodedToken.nameid, event.updatedBehavioralSkill).subscribe(() => {\n      this.loading = false;\n      this.alertify.success('Compétence comportementale a été mise à jour.');\n      this.handleLoadBehavioralSkills(event.filters);\n    }, error => {\n      this.loading = false;\n      this.handleLoadBehavioralSkills(event.filters);\n      this.alertify.error(error);\n    });\n  }\n\n  handleLoadEvaluationFiles(filters) {\n    this.loading = true;\n    this.hrService\n      .getEvaluationFiles(this.authService.decodedToken.nameid, filters)\n      .subscribe(\n        (res: EvaluationFile[]) => {\n          this.loading = false;\n          this.evaluationFiles = res;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  handleEditEvaluationFile(event: any) {\n    this.loading = true;\n    this.hrService.updateEvaluationFile(this.authService.decodedToken.nameid, event.updatedEvaluationFile).subscribe(() => {\n      this.loading = false;\n      this.alertify.success('Fiche d\\'évaluation a été mise à jour.');\n      this.handleLoadEvaluationFiles(event.filters);\n      this.handleLoadStrategies(event.filters);\n      this.handleLoadBehavioralSkills(event.filters);\n    }, error => {\n      this.loading = false;\n      this.handleLoadEvaluationFiles(event.filters);\n      this.handleLoadStrategies(event.filters);\n      this.handleLoadBehavioralSkills(event.filters);\n      this.alertify.error(error);\n    })\n  }\n\n  handlePageChanged(event: any): void {\n    this.pagination.currentPage = event.currentPage;\n    this.handleLoadStrategies(event.filters);;\n  }\n\n  handleLoadPublishedStratgeies() {\n    this.loading = true;\n    this.hrService.getPublishedStrategies().subscribe(\n      (result: Strategy[]) => {\n        this.loading = false;\n        this.strategyList = result;\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  handleLoadPublishedBehavioralSkills() {\n    this.loading = true;\n    this.hrService.getPublishedBehavioralSkills().subscribe(\n      (result: BehavioralSkill[]) => {\n        this.loading = false;\n        this.skillList = result;\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Modifier Axe {{axis.title}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #axisForm=\\\"ngForm\\\" id=\\\"axisForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <input [(ngModel)]=\\\"axis.title\\\" name=\\\"title\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Titre de l'axe stratigique\\\"\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <textarea [(ngModel)]=\\\"axis.description\\\" name=\\\"description\\\" required rows=\\\"3\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Description de l'axe stratigique\\\"></textarea>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateAxis()\\\" form=\\\"axisForm\\\" [disabled]=\\\"!axisForm.valid || !axisForm.dirty\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Axis } from '../../../_models/axis';\n\n@Component({\n  selector: 'app-axis-modal',\n  templateUrl: './axis-modal.component.html',\n  styleUrls: ['./axis-modal.component.css']\n})\nexport class AxisModalComponent implements OnInit {\n  @Output() updateSelectedAxis = new EventEmitter();\n\n  axis: Axis;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n  }\n\n  updateAxis() {\n    this.updateSelectedAxis.emit(this.axis);\n    this.bsModalRef.hide();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-center\\\" style=\\\"width: 10rem;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      {{axisPole.poleName}}\\n    </h6>\\n    <p *ngIf=\\\"!editing\\\" class=\\\"card-text text-muted text-center\\\">\\n      {{axisPole.weight}}%\\n    </p>\\n    <div *ngIf=\\\"editing\\\" class=\\\"mb-2\\\">\\n      <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" [value]=\\\"axisPole.weight\\\" (input)=\\\"onWeightChange(weight.value)\\\" #weight> %\\n    </div>\\n   <div *ngIf=\\\"!isReadOnly\\\">\\n      <button class=\\\"btn\\\" [ngClass]=\\\"editing ? 'btn-success' : 'btn-info'\\\" (click)=\\\"toggleEdit()\\\">\\n        <i *ngIf=\\\"editing\\\" class=\\\"fa fa-save\\\"></i>\\n        <i *ngIf=\\\"!editing\\\" class=\\\"fa fa-edit\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AxisPole } from './../../../_models/axisPole';\n\n\n@Component({\n  selector: 'app-axis-pole-weight-item',\n  templateUrl: './axis-pole-weight-item.component.html',\n  styleUrls: ['./axis-pole-weight-item.component.css']\n})\nexport class AxisPoleWeightItemComponent implements OnInit {\n  @Input() axisPole: AxisPole;\n  @Input() isReadOnly: boolean;\n  @Output() updateWeightEvent = new EventEmitter<AxisPole>();\n  editing: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onWeightChange(value: number) {\n    this.axisPole.weight = value;\n  }\n\n  toggleEdit() {\n    if (this.editing) {\n      this.updateWeightEvent.emit(this.axisPole);\n    }\n    this.editing = !this.editing;\n  }\n}\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"card mt-2 mb-2\\\">\\n  <div class=\\\"card-header\\\">\\n    {{axis.title}}\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\" *ngFor=\\\"let ap of axisPoleList\\\">\\n        <app-axis-pole-weight-item [isReadOnly]=\\\"isReadOnly\\\" [axisPole]=\\\"ap\\\" (updateWeightEvent)=\\\"handleUpdateAxisPole($event)\\\"></app-axis-pole-weight-item>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { HrService } from '../../../_services/hr.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { AxisPole } from './../../../_models/axisPole';\nimport { Axis } from '../../../_models/axis';\n\n\n@Component({\n  selector: 'app-axis-poles-weights-card',\n  templateUrl: './axis-poles-weights-card.component.html',\n  styleUrls: ['./axis-poles-weights-card.component.css']\n})\nexport class AxisPolesWeightsCardComponent implements OnInit {\n  @Input() axis: Axis;\n  @Input() isReadOnly: boolean; \n  axisPoleList: AxisPole[];\n  loading = false;\n\n  constructor(private hrService: HrService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadAxisPoles();\n  }\n\n  loadAxisPoles() {\n    this.loading = true;\n    this.hrService.getAxisPoleList(this.axis.id).subscribe(\n      result => {\n        this.loading = false;\n        this.axisPoleList = result;\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  handleUpdateAxisPole(axisPole: AxisPole) {\n    this.loading = true;\n    this.hrService\n      .updateAxisPoleWeigth(axisPole.axisId, axisPole.poleId, axisPole.weight)\n      .subscribe(\n        next => {\n          this.loading = false;\n          this.alertify.success('Mise à jour du pondération réussie');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n}\n","module.exports = \".body {\\n  overflow-y: scroll;\\n  height: 500px;\\n}\\n\"","module.exports = \"<div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"axisList?.length === 0\\\">\\n  <p>Aucun axe n'a encore été ajouté...</p>\\n</div>\\n\\n<div *ngIf=\\\"axisList?.length > 0\\\" class=\\\"row\\\" class=\\\"body\\\">\\n  <div *ngFor=\\\"let axis of axisList\\\">\\n    <app-axis-poles-weights-card [isReadOnly]=\\\"isReadOnly\\\" [axis]=\\\"axis\\\"></app-axis-poles-weights-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Axis } from './../../../_models/axis';\nimport { HrService } from '../../../_services/hr.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\n\n@Component({\n  selector: 'app-axis-poles-weights-list',\n  templateUrl: './axis-poles-weights-list.component.html',\n  styleUrls: ['./axis-poles-weights-list.component.css']\n})\nexport class AxisPolesWeightsListComponent implements OnInit {\n  @Input() axisList: Axis[];\n  @Input() isReadOnly: boolean; \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card {\\n  border: none;\\n}\\n\\n.axis {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.axis li {\\n  margin-bottom: 10px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px dotted #b3a9a9;\\n}\\n\\n.card-body {\\n  overflow-y: scroll;\\n  height: 400px;\\n}\\n\\n.form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div *ngIf=\\\"!isReadOnly\\\" class=\\\"card-header\\\">\\n    <form #axisForm=\\\"ngForm\\\" (ngSubmit)=\\\"axisForm.valid && addAxis()\\\">\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label'>Titre:</label>\\n        <input [(ngModel)]=\\\"newAxis.title\\\" name=\\\"title\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Titre de l'axe stratigique\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group required\\\">\\n        <label class='control-label'>Description:</label>\\n        <textarea [(ngModel)]=\\\"newAxis.description\\\" name=\\\"description\\\" required rows=\\\"3\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Description de l'axe stratigique\\\"></textarea>\\n      </div>\\n\\n      <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!axisForm.valid\\\">\\n        Ajouter\\n      </button>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"axisList?.length === 0\\\">\\n      <p>Aucun axe n'a encore été ajouté...</p>\\n    </div>\\n\\n    <table *ngIf=\\\"axisList?.length > 0\\\" class=\\\"table table-hover\\\">\\n      <tr>\\n        <th style=\\\"width: 30%\\\">Titre</th>\\n        <th style=\\\"width: 50%\\\">Description</th>\\n        <th style=\\\"width: 10%\\\"></th>\\n        <th style=\\\"width: 10%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let axis of axisList\\\">\\n        <td>{{ axis.title }}</td>\\n        <td>{{ axis.description }}</td>\\n        <td *ngIf=\\\"!isReadOnly\\\">\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editAxisModal(axis)\\\">\\n            <i class=\\\"fa fa-edit\\\"></i>\\n          </button>\\n        </td>\\n        <td *ngIf=\\\"!isReadOnly\\\">\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteAxis(axis.id)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n\"","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { Axis } from './../../../_models/axis';\nimport { HrService } from '../../../_services/hr.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { AuthService } from '../../../_services/auth.service';\nimport { AxisModalComponent } from '../axis-modal/axis-modal.component';\n\n@Component({\n  selector: 'app-strategy-axis',\n  templateUrl: './strategy-axis.component.html',\n  styleUrls: ['./strategy-axis.component.css']\n})\nexport class StrategyAxisComponent implements OnInit {\n  @Input() axisList: Axis[];\n  @Input() isReadOnly: boolean; \n  @Output() addAxisEvent = new EventEmitter<Axis>();\n  newAxis: any = {};\n  bsModalRef: BsModalRef;\n  loading = false;\n\n  constructor(private hrService: HrService, private authService: AuthService, private alertify: AlertifyService, private modalService: BsModalService) { }\n\n  ngOnInit() {\n  }\n\n  addAxis() {\n    this.addAxisEvent.emit(this.newAxis);\n    this.newAxis.title = '';\n    this.newAxis.description = '';\n  }\n\n  deleteAxis(id: number) {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer cet axe?',\n      () => {\n        this.loading = true;\n        this.hrService\n          .deleteAxis(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.axisList.splice(\n                this.axisList.findIndex(a => a.id === id),\n                1\n              );\n              this.alertify.success('L\\'axe a été supprimé');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer l\\'axe');\n            }\n          );\n      }\n    );\n  }\n\n  editAxisModal(axis: Axis) {\n    const initialState = {\n      axis\n    };\n\n    this.bsModalRef = this.modalService.show(AxisModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedAxis.subscribe((updatedAxis) => {\n      this.loading = true;\n      this.hrService.updateAxis(axis.id, updatedAxis).subscribe(() => {\n        this.loading = false;\n        this.alertify.success('L\\'axe été mis à jour.');\n      }, error => {\n        this.loading = false;\n        this.alertify.error(error);\n      })\n\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Stratégie détail</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Titre:</strong>\\n            <p>{{ strategy.title }}</p>\\n          </div>\\n          <div>\\n            <strong>Description:</strong>\\n            <p>{{ strategy.description }}</p>\\n          </div>\\n          <div>\\n            <strong>Statut:</strong>\\n            <p>{{ strategy.status }}</p>\\n          </div>\\n          <div *ngIf=\\\"strategy.sealed\\\">\\n            <strong>Date scellée:</strong>\\n            <p>{{ strategy.sealedDate | date: 'mediumDate' }}</p>\\n          </div>\\n          <div>\\n            <strong>Auteur:</strong>\\n            <p>{{ strategy.ownerName }}</p>\\n          </div>\\n          <div>\\n            <strong>Créé:</strong>\\n            <p>{{ strategy.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-fles\\\">\\n            <button class=\\\"btn btn-success w-80 mr-1\\\" [routerLink]=\\\"['/hr']\\\">\\n              Retour au List\\n            </button>\\n            <button class=\\\"btn btn-secondary w-60 mr-1\\\" (click)=\\\"clone()\\\">\\n              Coloner\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"delete()\\\" *ngIf=\\\"!isReadOnly\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"strategy-tabset\\\" #strategyTabs>\\n          <tab heading=\\\"Axes stratigique\\\">\\n            <app-strategy-axis [isReadOnly]=\\\"isReadOnly\\\" [axisList]=\\\"axisList\\\" (addAxisEvent)=\\\"handleAddAxis(strategy.id, $event)\\\"></app-strategy-axis>\\n          </tab>\\n          <tab heading=\\\"Pôles et Pondération\\\">\\n            <div class=\\\"container\\\">\\n              <app-axis-poles-weights-list [isReadOnly]=\\\"isReadOnly\\\" [axisList]=\\\"axisList\\\"></app-axis-poles-weights-list>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Documentation\\\">\\n            <app-strategy-documentation [isReadOnly]=\\\"isReadOnly\\\" [strategy]=\\\"strategy\\\"></app-strategy-documentation>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {\n  NgxGalleryOptions,\n  NgxGalleryImage,\n  NgxGalleryAnimation\n} from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\nimport { Strategy } from '../../../_models/strategy';\nimport { Axis } from './../../../_models/axis';\nimport { HrService } from '../../../_services/hr.service';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { AuthService } from '../../../_services/auth.service';\n\n@Component({\n  selector: 'app-strategy-detail',\n  templateUrl: './strategy-detail.component.html',\n  styleUrls: ['./strategy-detail.component.css']\n})\nexport class StrategyDetailComponent implements OnInit {\n  strategy: Strategy;\n  axisList: Axis[];\n  loading: boolean = false;\n  isReadOnly: boolean;\n\n  constructor(private hrService: HrService, private authService: AuthService, private alertify: AlertifyService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.strategy = data['strategy'];\n      this.isReadOnly = this.strategy.sealed;\n    });\n\n    this.loadAxisList(this.strategy.id);\n  }\n\n  loadAxisList(strategyId) {\n    this.loading = true;\n    this.hrService.getAxisList(strategyId).subscribe(\n      axises => {\n        this.loading = false;\n        this.axisList = axises;\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  handleAddAxis(strategyId: number, newAxis: Axis) {\n    newAxis.strategyId = strategyId;\n    this.loading = true;\n    this.hrService\n      .addAxis(newAxis)\n      .subscribe(\n        (axis: Axis) => {\n          this.loading = false;\n          this.axisList.unshift(axis);\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  clone() {\n    this.loading = true;\n    this.hrService\n      .cloneStrategy(this.authService.decodedToken.nameid, this.strategy.id)\n      .subscribe(\n        () => {\n          this.loading = false;\n          this.alertify.success('La stratégie a été clonée avec succès');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => {\n          this.router.navigate(['/hr']);\n        }\n      );\n  }\n\n  delete() {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer cette stratégie?',\n      () => {\n        this.loading = true;\n        this.hrService.deleteStrategy(this.strategy.id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.alertify.success('La stratégie a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer la stratégie: ' + error);\n            },\n            () => {\n              this.router.navigate(['/hr']);\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"card mt-2\\\" style=\\\"width: 30rem;\\\" *ngIf=\\\"strategy.documentationUrl\\\">\\n    <a href=\\\"{{strategy.documentationUrl}}\\\" target=\\\"_blanc\\\" class=\\\"mt-2\\\">\\n      <img src=\\\"../../../../assets/document.png\\\" alt=\\\"documentation\\\">\\n    </a>\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Documentation détaillée sur la stratégie</h5>\\n      <button *ngIf=\\\"!isReadOnly\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteDocumentation(strategy.id)\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i> Supprimer doucmentation\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mt-3\\\" *ngIf=\\\"!strategy.documentationUrl\\\">\\n    <h5>Ajouter maximum 1 document</h5>\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n    <h3>File d'attente de téléchargement</h3>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Nom</th>\\n          <th>Taille</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td>\\n            <strong>{{ item?.file?.name }}</strong>\\n          </td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>\\n            {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Progression de la file d'attente:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ width: uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s  mr-1\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"fa fa-upload\\\"></span> Télécharger\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s  mr-1\\\" (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"fa fa-ban\\\"></span> Annuler\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\" (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"fa fa-trash\\\"></span> Retirer\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport { Strategy } from '../../../_models/strategy';\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { environment } from '../../../../environments/environment';\nimport { HrService } from '../../../_services/hr.service';\n\n@Component({\n  selector: 'app-strategy-documentation',\n  templateUrl: './strategy-documentation.component.html',\n  styleUrls: ['./strategy-documentation.component.css']\n})\nexport class StrategyDocumentationComponent implements OnInit {\n  @Input() strategy: Strategy;\n  @Input() isReadOnly: boolean;\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  loading = false;\n\n  constructor(private alertifyService: AlertifyService, private hrService: HrService, ) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'hr/strategy/documentation/' +\n        this.strategy.id,\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['pdf'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Strategy = JSON.parse(response);\n        this.strategy.documentationUrl = res.documentationUrl;\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response, status, headers) => {\n      this.alertifyService.error(response);\n    }\n  }\n\n  deleteDocumentation(id: number) {\n    this.alertifyService.confirm(\n      'Etes-vous sûr de vouloir supprimer ce document?',\n      () => {\n        this.loading = true;\n        this.hrService\n          .deleteStrategyDocument(id)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.strategy.documentationUrl = null;\n              this.alertifyService.success('Le document a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertifyService.error('Échec de la suppression de document.');\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Modifier Stratégie</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #strategyForm=\\\"ngForm\\\" id=\\\"strategyForm\\\">\\n\\n    <h4>Titre:</h4>\\n    <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"strategy.title\\\" name=\\\"title\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Ajouter un titre d'axe stratigique\\\"\\n    />\\n\\n\\n    <h4>Description:</h4>\\n    <input [readonly]=\\\"isReadOnly\\\" [(ngModel)]=\\\"strategy.description\\\" name=\\\"description\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Ajouter un axe stratigique\\\"\\n    />\\n\\n\\n    <h4>Statut:</h4>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"strategy.status\\\" required [disabled]=\\\"isReadOnly\\\" >\\n      <option *ngFor=\\\"let status of statusList\\\" [ngValue]=\\\"status\\\">\\n        {{ status }}\\n      </option>\\n    </select>\\n\\n\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateStrategy()\\\" form=\\\"strategyForm\\\" [disabled]=\\\"!strategyForm.valid || !strategyForm.dirty\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\n\nimport { Strategy } from '../../../_models/strategy';\n\n@Component({\n  selector: 'app-strategy-edit-modal',\n  templateUrl: './strategy-edit-modal.component.html',\n  styleUrls: ['./strategy-edit-modal.component.css']\n})\nexport class StrategyEditModalComponent implements OnInit {\n  @Output() updateSelectedStrategy = new EventEmitter();\n\n  strategy: Strategy;\n  statusList: string[];\n  isReadOnly: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n    if (this.strategy.sealed) {\n      this.isReadOnly = true;\n    }\n  }\n\n  updateStrategy() {\n    this.updateSelectedStrategy.emit(this.strategy);\n    this.bsModalRef.hide();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"!creationMode\\\">\\n    <app-hr-filter-create-actions [statusList]=\\\"statusList\\\" [dataType]=\\\"dataType\\\" (loadDataEvent)=\\\"handleLoadStrategies($event)\\\"\\n      (creationModeEvent)=\\\"handleCreationMode($event)\\\"></app-hr-filter-create-actions>\\n\\n    <br />\\n\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 30%\\\">Titre</th>\\n          <th style=\\\"width: 15%\\\">Statut</th>\\n          <th style=\\\"width: 20%\\\">Auteur</th>\\n          <th style=\\\"width: 15%\\\">Date de création</th>\\n          <th style=\\\"width: 20%\\\"></th>\\n        </tr>\\n\\n        <tr *ngFor=\\\"let strategy of strategies\\\" [routerLink]=\\\"['/strategies', strategy.id]\\\">\\n          <td>{{strategy.title}}</td>\\n          <td>{{strategy.status}}</td>\\n          <td>{{strategy.ownerName}}</td>\\n          <td>{{strategy.created | date: 'mediumDate'}}</td>\\n          <td>\\n            <button *ngIf=\\\"strategy.status !== 'Archivée'\\\" class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editStrategyModal(strategy)\\\">Editer</button>\\n          </td>\\n        </tr>\\n\\n      </table>\\n    </div>\\n\\n    <div class=\\\"d-flex justify-content-center\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n        previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\" (pageChanged)=\\\"pageChanged($event)\\\">\\n      </pagination>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"creationMode\\\">\\n    <app-strategy-new (cancelCreation)=\\\"cancelCreationMode($event)\\\" (switchOffCreation)=\\\"switchOffCreationMode($event)\\\"></app-strategy-new>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { Pagination } from '../../../_models/pagination';\nimport { Strategy } from '../../../_models/strategy';\nimport { StrategyEditModalComponent } from '../strategy-edit-modal/strategy-edit-modal.component';\n\n\n@Component({\n  selector: 'app-strategy-list',\n  templateUrl: './strategy-list.component.html',\n  styleUrls: ['./strategy-list.component.css']\n})\nexport class StrategyListComponent implements OnInit {\n  @Input() strategies: Strategy[];\n  @Input() pagination: Pagination;\n  @Input() statusList: string[];\n  @Output() loadStrategiesEvent = new EventEmitter<any>();\n  @Output() editStrategyEvent = new EventEmitter<any>();\n  @Output() pageChangedEvent = new EventEmitter<any>();\n  creationMode = false;\n  bsModalRef: BsModalRef;\n  dataType: string;\n  filters: any = {};\n\n  constructor(\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    this.dataType = 'strategy';\n  }\n\n  pageChanged(event: any): void {\n    let pageParams = { currentPage: event.page, filters: this.filters }\n    this.pageChangedEvent.emit(pageParams);;\n  }\n\n  cancelCreationMode(creationMode: boolean) {\n    this.creationMode = creationMode;\n  }\n\n  switchOffCreationMode(reload: boolean) {\n    this.creationMode = false;\n    if (reload) {\n      this.loadStrategiesEvent.emit(this.filters);\n    }\n  }\n\n  handleLoadStrategies(event: any) {\n    this.filters = event;\n    this.loadStrategiesEvent.emit(this.filters);\n  }\n\n  handleCreationMode(event: boolean) {\n    this.creationMode = event;\n  }\n\n  editStrategyModal(strategy: Strategy) {\n    const initialState = {\n      strategy,\n      statusList: this.statusList\n    };\n\n    this.bsModalRef = this.modalService.show(StrategyEditModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedStrategy.subscribe((updatedStrategy) => {\n      let updateParams = { updatedStrategy, filters: this.filters }\n      this.editStrategyEvent.emit(updateParams);\n    });\n  }\n}\n","module.exports = \".form-group>label {\\n  display: inline-block;\\n  vertical-align: middle;\\n  width: 12em;\\n}\\n\\n.form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" d-flex justify-content-center>\\n  <div class=\\\"col-sm-6 offset-sm-3 text-center\\\">\\n    <h2 class=\\\"ext-primary\\\">Création d'une stratégie</h2>\\n    <hr />\\n    <form [formGroup]=\\\"newForm\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"create()\\\">\\n      <div class=\\\"form-group  required\\\">\\n        <label class='control-label' for=\\\"title\\\">Titre: </label>\\n        <input [ngClass]=\\\"{\\n                        'is-invalid':\\n                          newForm.get('title').errors &&\\n                          newForm.get('title').touched\\n                      }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Titre\\\" formControlName=\\\"title\\\" />\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                        newForm.get('title').touched &&\\n                        newForm.get('title').hasError('required')\\n                      \\\">\\n          Le titre est requis\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group  required\\\">\\n        <label class='control-label' for=\\\"description\\\">Description: </label>\\n        <textarea formControlName=\\\"description\\\" rows=\\\"4\\\" cols=\\\"50\\\" [ngClass]=\\\"{\\n                              'is-invalid':\\n                                newForm.get('description').errors &&\\n                                newForm.get('description').touched\\n                            }\\\" class=\\\"form-control mb-1\\\" placeholder=\\\"Description\\\"></textarea>\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"\\n                      newForm.get('description').touched &&\\n                      newForm.get('description').hasError('required')\\n                    \\\">\\n          La description est requise\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group mt-2\\\">\\n        <button class=\\\"btn btn-primary mr-2\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n          Annuler\\n        </button>\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!newForm.valid\\\">\\n          Soumettre\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  AbstractControl\n} from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\n\nimport { AlertifyService } from '../../../_services/alertify.service';\nimport { HrService } from '../../../_services/hr.service';\nimport { AuthService } from '../../../_services/auth.service';\nimport { Strategy } from '../../../_models/strategy';\n\n@Component({\n  selector: 'app-strategy-new',\n  templateUrl: './strategy-new.component.html',\n  styleUrls: ['./strategy-new.component.css']\n})\nexport class StrategyNewComponent implements OnInit {\n  @Output() cancelCreation = new EventEmitter();\n  @Output() switchOffCreation = new EventEmitter();\n  newStrategy: Strategy;\n  newForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder, private hrService: HrService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm() {\n    this.newForm = this.fb.group(\n      {\n        title: ['', Validators.required],\n        description: ['', [Validators.required]]\n      });\n  }\n\n  create() {\n    if (this.newForm.valid) {\n      this.newStrategy = Object.assign({}, this.newForm.value);\n      this.loading = true;\n      this.hrService.createStrategy(this.authService.decodedToken.nameid, this.newStrategy).subscribe(\n        () => {\n          this.loading = false;\n          this.alertify.success('Stratégie créé avec succèes');\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        },\n        () => { this.switchOffCreation.emit(true); }\n      );\n    }\n  }\n\n  cancel() {\n    this.cancelCreation.emit(false);\n  }\n}\n","module.exports = \"table {\\n  margin-top: 15px;\\n}\\n\\n.img-circle {\\n  max-height: 50px;\\n}\\n\\ntd {\\n  vertical-align: middle;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i> No lu\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Boîte de réception\\n      </button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Boîte d'envoi\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n    <h3>Pas de messages</h3>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Message</th>\\n        <th style=\\\"width: 20%\\\">De / A</th>\\n        <th style=\\\"width: 20%\\\">Envoyé / reçu</th>\\n        <th style=\\\"width: 20%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"[\\n          '/admin/collaborators',\\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId\\n        ]\\\" [queryParams]=\\\"{ tab: 3 }\\\">\\n        <td>{{ message.content }}</td>\\n        <td>\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n            <img src=\\\"{{ message?.senderPhotoUrl }}\\\" class=\\\"img-circle rounded-circle mr-1\\\" />\\n            <strong>{{ message.senderKnownAs }}</strong>\\n          </div>\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n            <img src=\\\"{{ message?.recipientPhotoUrl }}\\\" class=\\\"img-circle rounded-circle m-1\\\" />\\n            <strong>{{ message.recipientKnownAs }}</strong>\\n          </div>\\n        </td>\\n        <td>{{ message.messageSent | timeAgo }}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">\\n            Supprimer\\n          </button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n  loading = false;\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe(\n        (res: PaginatedResult<Message[]>) => {\n          this.loading = false;\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer ce message',\n      () => {\n        this.loading = true;\n        this.userService\n          .deleteMessage(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.messages.splice(\n                this.messages.findIndex(m => m.id === id),\n                1\n              );\n              this.alertify.success('Le message a été supprimé');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer le message');\n            }\n          );\n      }\n    );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}\n","module.exports = \".dropdown-toggle,\\n.dropdown-item {\\n  cursor: pointer;\\n}\\n\\nimg {\\n  max-width: 50px;\\n  border: 2px solid white;\\n  display: inline;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Goal Management</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/strategies']\\\">Stratégies</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/sheets']\\\">Fiches d'évaluation</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *appHasRole=\\\"['HR', 'HRD']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/hr']\\\">Ressources Humaines</a>\\n        </li>\\n\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *appHasRole=\\\"['Admin', 'HR']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Administration</a>\\n        </li>\\n      </ul>\\n\\n      <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n        <span class=\\\"mr-1\\\">\\n          <img src=\\\"{{ photoUrl || '../../assets/user.png' }}\\\" alt=\\\"\\\" />\\n        </span>\\n        <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n          Bienvenue {{ authService.currentUser?.firstName }}\\n        </a>\\n\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile/edit']\\\">\\n            <i class=\\\"fa fa-user\\\"></i>Editer le profil</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/requestResetPassword']\\\">\\n            <i class=\\\"fa fa-key fa-fw\\\"></i>Changer password</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n            <i class=\\\"fa fa-sign-out\\\"></i>Déconnecter</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  photoUrl: string;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(\n      photoUrl => (this.photoUrl = photoUrl)\n    );\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('Déconnecté');\n    this.router.navigate(['/home']);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { CollaboratorEditComponent } from './collaborators/collaborator-edit/collaborator-edit.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsave-changes-guards';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HrPanelComponent } from './hr/hr-panel/hr-panel.component';\nimport { StrategiesComponent } from './strategies/strategies.component';\nimport { StrategiesResolver } from './_resolvers/strategies.resolver';\nimport { CollaboratorListResolver } from './_resolvers/collaborator-list.resolver';\nimport { CollaboratorDetailResolver } from './_resolvers/collaborator-detail.resolver.';\nimport { CollaboratorDetailComponent } from './collaborators/collaborator-detail/collaborator-detail.component';\nimport { StrategyListResolver } from './_resolvers/strategy-list.resolver';\nimport { StrategyDetailComponent } from './hr/strategies/strategy-detail/strategy-detail.component';\nimport { StrategyDetailResolver } from './_resolvers/strategy-detail.resolver';\nimport { ResetPasswordComponent } from './collaborators/reset-password/reset-password.component';\nimport { ForgetPasswordComponent } from './collaborators/forget-password/forget-password.component';\nimport { ProfileEditComponent } from './collaborators/profile-edit/profile-edit.component';\nimport { ProfileEditResolver } from './_resolvers/profile-edit.resolver';\nimport { BehavioralSkillDetailComponent } from './hr/behavioral-skills/behavioral-skill-detail/behavioral-skill-detail.component';\nimport { BehavioralSkillDetailResolver } from './_resolvers/behavioral-skill-detail.resolver.';\nimport { EvaluationHrDetailComponent } from './hr/evaluations/evaluation-hr-detail/evaluation-hr-detail.component';\nimport { EvaluationHrDetailResolver } from './_resolvers/evaluation-hr-detail.resolver';\nimport { SheetsPanelComponent } from './sheets/sheets-panel/sheets-panel.component';\nimport { SheetsResolver } from './_resolvers/sheets.resolver';\nimport { SheetDetailComponent } from './sheets/sheet-detail/sheet-detail.component';\nimport { SheetDetailResolver } from './_resolvers/sheet-detail.resolver';\n\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'resetPassword',\n    component: ResetPasswordComponent\n  },\n  {\n    path: 'requestResetPassword',\n    component: ForgetPasswordComponent\n  },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'profile/edit',\n        component: ProfileEditComponent,\n        resolve: { user: ProfileEditResolver },\n        canDeactivate: [PreventUnsavedChanges]\n      },\n      {\n        path: 'sheets',\n        component: SheetsPanelComponent,\n        resolve: { sheets: SheetsResolver }\n      }, {\n        path: 'sheets/:id',\n        component: SheetDetailComponent,\n        resolve: { resolvedData: SheetDetailResolver }\n      },\n      {\n        path: 'strategies',\n        component: StrategiesComponent,\n        resolve: { strategies: StrategiesResolver }\n      }, {\n        path: 'strategies/:id',\n        component: StrategyDetailComponent,\n        resolve: { strategy: StrategyDetailResolver }\n      }, {\n        path: 'behavioralSkills/:id',\n        component: BehavioralSkillDetailComponent,\n        resolve: { behavioralSkill: BehavioralSkillDetailResolver }\n      },\n      {\n        path: 'evaluationFiles/:id',\n        component: EvaluationHrDetailComponent,\n        resolve: { evaluationFile: EvaluationHrDetailResolver }\n      },\n      {\n        path: 'messages',\n        component: MessagesComponent,\n        resolve: { messages: MessagesResolver }\n      },\n      {\n        path: 'hr',\n        component: HrPanelComponent,\n        resolve: { strategies: StrategyListResolver },\n        data: { roles: ['HR'] }\n      },\n      {\n        path: 'admin',\n        component: AdminPanelComponent,\n        resolve: { resolvedData: CollaboratorListResolver },\n        data: { roles: ['Admin', 'HR'] }\n      },\n      {\n        path: 'admin/collaborators/:id',\n        component: CollaboratorDetailComponent,\n        resolve: { user: CollaboratorDetailResolver }\n      },\n      {\n        path: 'admin/collaborators/edit/:id',\n        component: CollaboratorEditComponent,\n        resolve: { user: CollaboratorDetailResolver },\n        canDeactivate: [PreventUnsavedChanges]\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full'\n  }\n];\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-2\\\">\\n  <h4> {{strategyTitle}}</h4>\\n  <p>{{strategyDescription}}</p>\\n  <h4>Axes:</h4>\\n  <table class=\\\"table table-hover\\\">\\n    <tr>\\n      <th style=\\\"width: 40%\\\">Titre</th>\\n      <th style=\\\"width: 50%\\\">Description</th>\\n      <th style=\\\"width: 10%\\\">Pondération</th>\\n    </tr>\\n    <tr *ngFor=\\\"let axis of axisInstances\\\">\\n      <td>{{ axis.title }}</td>\\n      <td>{{ axis.description }}</td>\\n      <td>\\n        <span class=\\\"badge badge-pill badge-danger\\\">{{axis.userWeight}} %</span>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AxisInstance } from '../../_models/axisInstance';\n\n@Component({\n  selector: 'app-axis-user',\n  templateUrl: './axis-user.component.html',\n  styleUrls: ['./axis-user.component.css']\n})\nexport class AxisUserComponent implements OnInit {\n  @Input() strategyTitle: string;\n  @Input() strategyDescription: string;\n  @Input() axisInstances: AxisInstance[];\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".toggle {\\n  position: relative;\\n  float: right;\\n}\\n\"","module.exports = \"<div class=\\\"card mt-2 mb-2\\\">\\n  <div class=\\\"card-header\\\">\\n    <div class=\\\"toggle\\\">\\n      <button type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" title=\\\"Réduire / Agrandir\\\">\\n        <i *ngIf=\\\"!isCollapsed\\\" class=\\\"fa fa-caret-down\\\"></i>\\n        <i *ngIf=\\\"isCollapsed\\\" class=\\\"fa fa-caret-up\\\"></i>\\n      </button>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        {{goalsByAxisInstance.title}}\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <span class=\\\"badge badge-pill badge-danger float-right\\\" title=\\\"Pondération d'axe\\\">\\n          {{goalsByAxisInstance.userWeight}} %\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"well\\\">Nombre d'objectifs: {{goalsByAxisInstance.totalGoals}}</div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"well\\\">\\n          Poids total des objectifs:\\n          <span class=\\\"badge badge-pill badge-success float-right\\\">\\n            {{goalsByAxisInstance.totalGoalWeight}} %\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-body\\\" *ngIf=\\\"isCollapsed\\\">\\n    <div class=\\\"alert alert-danger mt-3\\\" role=\\\"alert\\\" *ngIf=\\\"goalsByAxisInstance.goals && goalsByAxisInstance.goals.length === 0\\\">\\n      <p>Aucun objectif n'a encore été ajouté...</p>\\n    </div>\\n\\n    <table *ngIf=\\\"goalsByAxisInstance.goals && goalsByAxisInstance.goals.length > 0\\\" class=\\\"table table-hover\\\">\\n      <tr>\\n        <th style=\\\"width: 40%\\\">Objectif</th>\\n        <th style=\\\"width: 20%\\\">Type d'objectif</th>\\n        <th style=\\\"width: 20%\\\">Nom de projet</th>\\n        <th style=\\\"width: 10%\\\">Poids</th>\\n        <th style=\\\"width: 5%\\\"></th>\\n        <th style=\\\"width: 5%\\\"></th>\\n      </tr>\\n      <tr *ngFor=\\\"let goal of goalsByAxisInstance.goals\\\">\\n        <td>{{ goal.description }}</td>\\n        <td>{{ goal.goalType.name }}</td>\\n        <td>{{ goal.projectName }}</td>\\n        <td>{{ goal.weight }}</td>\\n        <td *ngIf=\\\"!isReadOnly\\\">\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"editGoalModal(goal)\\\">\\n            <i class=\\\"fa fa-edit\\\"></i>\\n          </button>\\n        </td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteGoal(goal)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </button>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { GoalByAxisInstance } from './../../_models/goalsByAxisInstance';\nimport { Goal } from '../../_models/goal';\nimport { GoalType } from '../../_models/goalType';\nimport { AxisInstance } from '../../_models/axisInstance';\nimport { GoalEditModalComponent } from '../goal-edit-modal/goal-edit-modal.component';\n\n@Component({\n  selector: 'app-goal-card',\n  templateUrl: './goal-card.component.html',\n  styleUrls: ['./goal-card.component.css']\n})\nexport class GoalCardComponent implements OnInit {\n  @Input() goalsByAxisInstance: GoalByAxisInstance;\n  @Input() axisInstances: AxisInstance[];\n  @Input() goalTypeList: GoalType[];\n  @Output() editGoalEvent = new EventEmitter<Goal>();\n  @Output() deleteGoalEvent = new EventEmitter<Goal>();\n  bsModalRef: BsModalRef;\n  isCollapsed = true;\n\n  constructor(private modalService: BsModalService) { }\n\n  ngOnInit() {\n  }\n\n  editGoalModal(goal: Goal) {\n    const initialState = {\n      goal,\n      goalTypeList: this.goalTypeList,\n      axisList: this.axisInstances\n    };\n\n    this.bsModalRef = this.modalService.show(GoalEditModalComponent, { initialState });\n    this.bsModalRef.content.editGoalEvent.subscribe((updatedGoal) => {\n      this.editGoalEvent.emit(updatedGoal);\n    });\n  }\n\n  deleteGoal(goal: Goal) {\n    this.deleteGoalEvent.emit(goal);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Modifier Objectif</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <form #goalForm=\\\"ngForm\\\" id=\\\"goalForm\\\">\\n\\n    <h4>Axe:</h4>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"axis\\\" name=\\\"axis\\\" [(ngModel)]=\\\"updatedGoal.axisInstanceId\\\" required>\\n      <option *ngFor=\\\"let axis of axisList\\\" [ngValue]=\\\"axis.id\\\">\\n        {{ axis.title }}\\n      </option>\\n    </select>\\n\\n    <h4>Objectif:</h4>\\n    <textarea rows=\\\"2\\\" [(ngModel)]=\\\"updatedGoal.description\\\" name=\\\"goal\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Ajouter un objectif\\\"></textarea>\\n\\n    <h4>Type d'objectif:</h4>\\n    <select class=\\\"form-control mb-1\\\" style=\\\"width: 200px\\\" id=\\\"goalType\\\" name=\\\"goalType\\\" [(ngModel)]=\\\"updatedGoal.goalTypeId\\\"\\n      required>\\n      <option *ngFor=\\\"let goalType of goalTypeList\\\" [ngValue]=\\\"goalType.id\\\">\\n        {{ goalType.name }}\\n      </option>\\n    </select>\\n\\n    <div *ngIf=\\\"updatedGoal.goalTypeId === 3\\\">\\n      <h4>Nom de projet:</h4>\\n      <input [(ngModel)]=\\\"updatedGoal.projectName\\\" name=\\\"projectName\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Nom de projet\\\"\\n      />\\n    </div>\\n\\n    <h4>Poids d'objectif:</h4>\\n    <input [(ngModel)]=\\\"updatedGoal.weight\\\" name=\\\"goalWeight\\\" required type=\\\"number\\\" class=\\\"form-control input-sm\\\" />\\n\\n    <h4>Statut:</h4>\\n    {{updatedGoal.status}}\\n\\n\\n  </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"bsModalRef.hide()\\\">Annuler</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateGoal()\\\" form=\\\"goalForm\\\" [disabled]=\\\"!goalForm.valid || !goalForm.dirty\\\">Mettre à jour</button>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Goal } from '../../_models/goal';\nimport { GoalType } from '../../_models/goalType';\nimport { Axis } from '../../_models/axis';\n\n\n@Component({\n  selector: 'app-goal-edit-modal',\n  templateUrl: './goal-edit-modal.component.html',\n  styleUrls: ['./goal-edit-modal.component.css']\n})\nexport class GoalEditModalComponent implements OnInit {\n  @Output() editGoalEvent = new EventEmitter<any>();\n  goal: Goal;\n  axisList: Axis[];\n  goalTypeList: GoalType[];\n  updatedGoal: any = {};\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n    this.updatedGoal = {\n      'id': this.goal.id,\n      'description': this.goal.description,\n      'axisInstanceId': this.goal.axisInstance.id,\n      'goalTypeId': this.goal.goalType.id,\n      'projectName': this.goal.projectName,\n      'weight': this.goal.weight,\n      'status': this.goal.status\n    }\n  }\n\n  updateGoal() {\n    if (this.updatedGoal.goalTypeId !== 3) {\n      this.updatedGoal.projectName = '';\n    }\n\n    this.editGoalEvent.emit(this.updatedGoal);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"\"","module.exports = \"<form #goalForm=\\\"ngForm\\\" (ngSubmit)=\\\"goalForm.valid && createGoal()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5 form-group required\\\">\\n      <label class='control-label'>Axe:</label>\\n      <select class=\\\"form-control mb-1\\\" id=\\\"axisId\\\" name=\\\"axisId\\\" [(ngModel)]=\\\"newGoal.axisInstanceId\\\">\\n        <option *ngFor=\\\"let axis of axisInstances\\\" [ngValue]=\\\"axis.id\\\">\\n          {{ axis.title }}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"col-md-4 form-group required\\\">\\n      <label class='control-label'>Type d'objectif:</label>\\n      <select class=\\\"form-control mb-1\\\" id=\\\"objectifTypeId\\\" name=\\\"goalTypeId\\\" [(ngModel)]=\\\"newGoal.goalTypeId\\\">\\n        <option *ngFor=\\\"let goalType of goalTypeList\\\" [ngValue]=\\\"goalType.id\\\">\\n          {{ goalType.name }}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"col-md-3 form-group required\\\">\\n      <label class='control-label'>Poid d'objectif:</label>\\n      <input [(ngModel)]=\\\"newGoal.weight\\\" name=\\\"goalWeight\\\" required type=\\\"number\\\" min=\\\"1\\\" max=\\\"100\\\" class=\\\"form-control input-sm\\\"\\n        placeholder=\\\"Poid d'objectif\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"newGoal.goalTypeId === 3\\\">\\n    <div class=\\\"col form-group\\\">\\n      <label class='control-label'>Nom de projet:</label>\\n      <input [(ngModel)]=\\\"newGoal.projectName\\\" name=\\\"projectName\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Nom de projet\\\"\\n      />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col form-group required\\\">\\n      <label class='control-label'>Objectif:</label>\\n      <textarea rows=\\\"2\\\" [(ngModel)]=\\\"newGoal.description\\\" name=\\\"description\\\" required type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n        placeholder=\\\"Objectif\\\"></textarea>\\n\\n    </div>\\n  </div>\\n\\n  <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!goalForm.valid\\\">\\n    Ajouter\\n  </button>\\n</form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { AxisInstance } from '../../_models/axisInstance';\nimport { Goal } from '../../_models/goal';\nimport { GoalType } from '../../_models/goalType';\n\n@Component({\n  selector: 'app-goal-new',\n  templateUrl: './goal-new.component.html',\n  styleUrls: ['./goal-new.component.css']\n})\nexport class GoalNewComponent implements OnInit {\n  @Input() axisInstances: AxisInstance[];\n  @Input() goalTypeList: GoalType[];\n  @Output() createGoalEvent = new EventEmitter<any>();\n  newGoal: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  createGoal() {\n\n    if (this.newGoal.goalTypeId != 3) {\n      this.newGoal.projectName = '';\n    }\n\n    this.createGoalEvent.emit(this.newGoal);\n    this.newGoal.description = '';\n    this.newGoal.weight = '';\n    this.newGoal.axisInstanceId = '';\n    this.newGoal.goalTypeId = '';\n    this.newGoal.projectName = '';\n  }\n\n\n}\n","module.exports = \".form-group.required .control-label:after {\\n  content: \\\"*\\\";\\n  color: red;\\n}\\n\\n.toggle {\\n  position: relative;\\n  float: right;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-2\\\">\\n  <div class=\\\"toggle\\\">\\n    <button type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" title=\\\"Réduire / Agrandir\\\">\\n      <i *ngIf=\\\"!isCollapsed\\\" class=\\\"fa fa-caret-down\\\"></i>\\n      <i *ngIf=\\\"isCollapsed\\\" class=\\\"fa fa-caret-up\\\"></i>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\" *ngIf=\\\"isCollapsed\\\">\\n      <app-goal-new [axisInstances]=\\\"axisInstances\\\" [goalTypeList]=\\\"goalTypeList\\\" (createGoalEvent)=\\\"handleCreateGoal($event)\\\"></app-goal-new>\\n    </div>\\n\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"goalsByAxisInstanceList\\\">\\n        <div *ngFor=\\\"let goalsByAxisInstance of goalsByAxisInstanceList\\\">\\n          <app-goal-card [axisInstances]=\\\"axisInstances\\\" [goalTypeList]=\\\"goalTypeList\\\" [goalsByAxisInstance]=\\\"goalsByAxisInstance\\\"\\n            (editGoalEvent)=\\\"handleEditGoal($event)\\\" (deleteGoalEvent)=\\\"handleDeleteGoal($event)\\\"></app-goal-card>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { AxisInstance } from '../../_models/axisInstance';\nimport { GoalByAxisInstance } from './../../_models/goalsByAxisInstance';\nimport { Goal } from '../../_models/goal';\nimport { GoalType } from '../../_models/goalType';\n\n@Component({\n  selector: 'app-goals',\n  templateUrl: './goals.component.html',\n  styleUrls: ['./goals.component.css']\n})\nexport class GoalsComponent implements OnInit {\n  @Input() axisInstances: AxisInstance[];\n  @Input() goalsByAxisInstanceList: GoalByAxisInstance[];\n  @Input() goalTypeList: GoalType[];\n  @Output() createGoalEvent = new EventEmitter<any>();\n  @Output() editGoalEvent = new EventEmitter<Goal>();\n  @Output() deleteGoalEvent = new EventEmitter<Goal>();\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  handleCreateGoal(newGoal: any) {\n    this.createGoalEvent.emit(newGoal);\n  }\n\n  handleEditGoal(goal: Goal) {\n    this.editGoalEvent.emit(goal);\n  }\n\n  handleDeleteGoal(goal: Goal) {\n    this.deleteGoalEvent.emit(goal);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>Fiche d'évaluation</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Titre:</strong>\\n            <p>{{ sheetDetail.title }}</p>\\n          </div>\\n          <div>\\n            <strong>Année:</strong>\\n            <p>{{ sheetDetail.year }}</p>\\n          </div>\\n          <div>\\n            <strong>Statut:</strong>\\n            <p>{{ sheetDetail.status }}</p>\\n          </div>\\n          <div>\\n            <strong>Matricule:</strong>\\n            <p>{{ sheetDetail.employeeNumber }}</p>\\n          </div>\\n          <div>\\n            <strong>Nom de l'employé:</strong>\\n            <p>{{ sheetDetail.ownerName }}</p>\\n          </div>\\n          <div>\\n            <strong>Fonction:</strong>\\n            <p>{{ sheetDetail.ownerTitle }}</p>\\n          </div>\\n          <div>\\n            <strong>Pôle/entité:</strong>\\n            <p>{{ sheetDetail.axisInstances[0].poleName }}</p>\\n          </div>\\n          <div>\\n            <strong>Créé:</strong>\\n            <p>{{ sheetDetail.created | date: 'mediumDate' }}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-fles\\\">\\n            <button class=\\\"btn btn-success w-70 mr-1\\\" [routerLink]=\\\"['/sheets']\\\">\\n              Retour au List\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      <div class=\\\"tab-panel panel-body\\\">\\n        <tabset class=\\\"strategy-tabset\\\">\\n          <tab heading=\\\"Stratégie\\\">\\n            <app-axis-user [strategyTitle]=\\\"sheetDetail.strategyTitle\\\" [strategyDescription]=\\\"sheetDetail.strategyDescription\\\" [axisInstances]=\\\"sheetDetail.axisInstances\\\"></app-axis-user>\\n          </tab>\\n          <tab heading=\\\"Définition des Objectifs\\\">\\n            <div *ngIf=\\\"goalsByAxisInstanceList\\\">\\n              <app-goals [goalsByAxisInstanceList]=\\\"goalsByAxisInstanceList\\\" [axisInstances]=\\\"sheetDetail.axisInstances\\\" [goalTypeList]=\\\"goalTypeList\\\"\\n                (createGoalEvent)=\\\"handleCreateGoal($event)\\\" (editGoalEvent)=\\\"handleEditGoal($event)\\\" (deleteGoalEvent)=\\\"handleDeleteGoal($event)\\\"></app-goals>\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Évaluation des objectifs\\\">\\n            <div class=\\\"container \\\">\\n\\n            </div>\\n          </tab>\\n          <tab heading=\\\"Évaluation des Compétences\\\">\\n            <div class=\\\"container \\\">\\n\\n            </div>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EvaluationFileInstance } from '../../_models/evaluationFileInstance';\nimport { Goal } from '../../_models/goal';\nimport { GoalType } from '../../_models/goalType';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { GoalByAxisInstance } from '../../_models/goalsByAxisInstance';\n\n@Component({\n  selector: 'app-sheet-detail',\n  templateUrl: './sheet-detail.component.html',\n  styleUrls: ['./sheet-detail.component.css']\n})\nexport class SheetDetailComponent implements OnInit {\n  sheetDetail: EvaluationFileInstance;\n  goalsByAxisInstanceList: GoalByAxisInstance[];\n  goalTypeList: GoalType[];\n  loading = false;\n  goalsGroupedByAxis = {};\n  keys: string[];\n\n  constructor(private route: ActivatedRoute, private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      const resolvedData = data['resolvedData'];\n      this.sheetDetail = resolvedData['sheetDetail'];\n      this.goalTypeList = resolvedData['goalTypeList']\n      this.getGoalsForAxis();\n    });\n  }\n\n  getGoalsForAxis() {\n    var axisInstanceIds = this.sheetDetail.axisInstances.map(a => a.id);\n    this.loading = true;\n    this.userService\n      .getGoalsForAxis(this.authService.decodedToken.nameid, axisInstanceIds)\n      .subscribe(\n        (result: GoalByAxisInstance[]) => {\n          this.loading = false;\n          this.goalsByAxisInstanceList = result;\n        },\n        error => {\n          this.loading = false;\n          this.alertify.error('Impossible d\\'avoir les objectifs');\n        }\n      );\n  }\n\n  handleCreateGoal(newGoal: any) {\n    this.loading = true;\n    this.userService.createGoal(this.authService.decodedToken.nameid, newGoal).subscribe(\n      () => {\n        this.loading = false;\n        this.getGoalsForAxis();\n        this.alertify.success('Objectif est créé avec succèes');\n      },\n      error => {\n        this.loading = false;\n        this.alertify.error(error);\n      }\n    );\n  }\n\n  handleEditGoal(goal: Goal) {\n    this.loading = true;\n    this.userService.updateGoal(goal.id, this.authService.decodedToken.nameid, goal).subscribe(() => {\n      this.loading = false;\n      this.alertify.success('Objectif a été mis à jour.');\n      this.getGoalsForAxis();\n    }, error => {\n      this.loading = false;\n      this.alertify.error(error);\n    })\n  }\n\n  handleDeleteGoal(goal: Goal) {\n    this.alertify.confirm(\n      `Etes-vous sur de vouloir supprimer l'objectif: ${goal.description}?`,\n      () => {\n        this.loading = true;\n        this.userService\n          .deleteGoal(goal.id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.getGoalsForAxis();\n              this.alertify.success('L\\'objectif a été supprimée');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer l\\'objectif');\n            }\n          );\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <h2>Panneau de fiches d'évaluation</h2>\\n  <div class=\\\"tab-panel\\\">\\n    <tabset class=\\\"member-tabset\\\">\\n      <tab heading=\\\"Mes fiches d'évaluation\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"container\\\">\\n            <table *ngIf=\\\"sheets?.length > 0\\\" class=\\\"table table-hover  mt-2\\\" style=\\\"cursor: pointer\\\">\\n              <tr>\\n                <th style=\\\"width: 30%\\\">Titre</th>\\n                <th style=\\\"width: 10%\\\">Année</th>\\n                <th style=\\\"width: 25%\\\">Stratégie</th>\\n                <td style=\\\"width: 15%\\\">Créé</td>\\n              </tr>\\n              <tr *ngFor=\\\"let evaluationFileInsatnce of sheets\\\" [routerLink]=\\\"['/sheets/', evaluationFileInsatnce.id]\\\">\\n                <td>{{ evaluationFileInsatnce.title }}</td>\\n                <td>{{ evaluationFileInsatnce.year }}</td>\\n                <td>{{ evaluationFileInsatnce.strategyTitle }}</td>\\n                <td>\\n                  {{ evaluationFileInsatnce.created | date: 'mediumDate' }}\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n      </tab>\\n\\n      <tab heading=\\\"Fiches d'évaluation de mes collaborateurs\\\">\\n        <div class=\\\"container\\\">\\n          les fiches de mes collaborateurs\\n        </div>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';;\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\n\nimport { Pagination, PaginatedResult } from '../../_models/pagination';\nimport { EvaluationFileInstance } from '../../_models/evaluationFileInstance';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { Goal } from '../../_models/goal';\nimport { GoalEditModalComponent } from '../goal-edit-modal/goal-edit-modal.component';\n\n@Component({\n  selector: 'app-sheets-panel',\n  templateUrl: './sheets-panel.component.html',\n  styleUrls: ['./sheets-panel.component.css']\n})\nexport class SheetsPanelComponent implements OnInit {\n  pagination: Pagination;\n  sheets: EvaluationFileInstance[];\n  loading = false;\n  goalList: Goal[];\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService, private route: ActivatedRoute, private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.sheets = data['sheets'].result;\n      this.pagination = data['sheets'].pagination;\n    });\n  }\n\n  handleDeleteGoal(id: number) {\n    this.alertify.confirm(\n      'Etes-vous sur de vouloir supprimer cet objectif?',\n      () => {\n        this.loading = true;\n        this.userService\n          .deleteGoal(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.loading = false;\n              this.goalList.splice(\n                this.goalList.findIndex(a => a.id === id),\n                1\n              );\n              this.alertify.success('L\\'objectif a été supprimé');\n            },\n            error => {\n              this.loading = false;\n              this.alertify.error('Impossible de supprimer l\\'objectif');\n            }\n          );\n      }\n    );\n  }\n\n  editAxisModal(goal: Goal) {\n    const initialState = {\n      goal\n    };\n\n    this.bsModalRef = this.modalService.show(GoalEditModalComponent, { initialState });\n    this.bsModalRef.content.updateSelectedGoal.subscribe((updatedGoal) => {\n      this.loading = true;\n      this.userService.updateGoal(goal.id, this.authService.decodedToken.nameid, updatedGoal).subscribe(() => {\n        this.loading = false;\n        this.alertify.success('L\\'objectif été mis à jour.');\n      }, error => {\n        this.loading = false;\n        this.alertify.error(error);\n      })\n\n    });\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"strategies.length == 0\\\">\\n    <h3>Pas de strategies</h3>\\n  </div>\\n\\n  <div *ngIf=\\\"strategies.length > 0\\\">\\n    <div class=\\\"card mt-2 mb-2\\\" *ngFor=\\\"let strategy of strategies\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"float-left mr-2\\\" *ngIf=\\\"strategy.documentationUrl\\\">\\n          <a href=\\\"{{strategy.documentationUrl}}\\\" target=\\\"_blanc\\\" class=\\\"mt-2\\\">\\n            <img src=\\\"../../../../assets/document.png\\\" alt=\\\"documentation\\\" width=\\\"40px\\\" height=\\\"50px\\\">\\n          </a>\\n        </div>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{strategy.title}}</h6>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"viewToggle()\\\">\\n          Changer de vue\\n        </button>\\n        <p class=\\\"card-text\\\">{{strategy.description}}</p>\\n      </div>\\n\\n      <div class=\\\"card-body\\\" [ngStyle]=\\\"{'background-color':viewMode ? 'white' : 'grey' }\\\">\\n        <carousel *ngIf=\\\"!viewMode\\\">\\n          <slide *ngFor=\\\"let axis of strategy.axisList\\\">\\n            <div class=\\\"text-center py-5\\\">\\n              <h2>{{axis.title}}</h2>\\n              <p class=\\\"card-text text-info text-center\\\">{{axis.description}}</p>\\n              <ul class=\\\"list-inline text-center\\\">\\n                <li class=\\\"list-inline-item\\\" *ngFor=\\\"let ap of axis.axisPoles\\\">\\n                  <div class=\\\"card text-center\\\" style=\\\"width: 15rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                      <h4 class=\\\"card-title text-center mb-1\\\">\\n                        {{ap.poleName}}\\n                      </h4>\\n                      <span class=\\\"badge badge-pill badge-danger\\\">\\n                        <h1>{{ap.weight}} %</h1>\\n                      </span>\\n                    </div>\\n                  </div>\\n                </li>\\n              </ul>\\n            </div>\\n          </slide>\\n        </carousel>\\n\\n        <table *ngIf=\\\"viewMode\\\" class=\\\"table table-hover\\\">\\n          <tr>\\n            <th style=\\\"width: 20%\\\">Titre d'axis</th>\\n            <th style=\\\"width: 30%\\\">Description d'axe</th>\\n            <th style=\\\"width: 50%\\\">Poles / Pondération</th>\\n\\n          </tr>\\n          <tr *ngFor=\\\"let axis of strategy.axisList\\\">\\n            <td class=\\\"align-middle\\\">{{ axis.title }}</td>\\n            <td class=\\\"align-middle\\\">{{ axis.description }}</td>\\n            <td>\\n              <table>\\n                <tr *ngFor=\\\"let ap of axis.axisPoles\\\">\\n                  <td>{{ap.poleName}}</td>\\n                  <td>\\n                    <span class=\\\"badge badge-pill badge-danger\\\">\\n                      {{ap.weight}} %\\n                    </span>\\n                  </td>\\n                </tr>\\n              </table>\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Strategy } from '../_models/strategy';\n\n@Component({\n  selector: 'app-strategies',\n  templateUrl: './strategies.component.html',\n  styles: ['./strategies.component.css']\n})\nexport class StrategiesComponent implements OnInit {\n  strategies: Strategy[];\n  viewMode = false;\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.strategies = data['strategies'];\n    });\n  }\n\n  viewToggle() {\n    this.viewMode = !this.viewMode;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}